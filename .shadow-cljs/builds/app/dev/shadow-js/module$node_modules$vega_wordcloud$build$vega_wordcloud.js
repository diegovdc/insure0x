["^ ","~:resource-id",["~:shadow.build.npm/resource","node_modules/vega-wordcloud/build/vega-wordcloud.js"],"~:js","shadow$provide.module$node_modules$vega_wordcloud$build$vega_wordcloud=function(global$jscomp$0,require,module,exports$jscomp$0){(function(global,factory){\"object\"===typeof exports$jscomp$0&&\"undefined\"!==typeof module?factory(exports$jscomp$0,require(\"module$node_modules$vega_canvas$build$vega_canvas\"),require(\"module$node_modules$vega_dataflow$build$vega_dataflow\"),require(\"module$node_modules$vega_util$build$vega_util\"),require(\"module$node_modules$vega_scale$build$vega_scale\"),require(\"module$node_modules$vega_statistics$build$vega_statistics\")):\n\"function\"===typeof define&&define.amd?define(\"exports vega-canvas vega-dataflow vega-util vega-scale vega-statistics\".split(\" \"),factory):(global=\"undefined\"!==typeof globalThis?globalThis:global||self,factory((global.vega=global.vega||{},global.vega.transforms={}),global.vega,global.vega,global.vega,global.vega,global.vega))})(this,function(exports,vegaCanvas,vegaDataflow,vegaUtil,vegaScale,vegaStatistics){function cloud(){function getContext(canvas){canvas.width=canvas.height=1;var ratio=Math.sqrt(canvas.getContext(\"2d\").getImageData(0,\n0,1,1).data.length>>2);canvas.width=2048/ratio;canvas.height=2048/ratio;canvas=canvas.getContext(\"2d\");canvas.fillStyle=canvas.strokeStyle=\"red\";canvas.textAlign=\"center\";return{context:canvas,ratio:ratio}}function place(board,tag,bounds){for(var startX=tag.x,startY=tag.y,maxDelta=Math.sqrt(size[0]*size[0]+size[1]*size[1]),s=spiral(size),dt=.5>random()?1:-1,t=-dt,dxdy,dx;dxdy=s(t+=dt);){dx=~~dxdy[0];dxdy=~~dxdy[1];if(Math.min(Math.abs(dx),Math.abs(dxdy))>=maxDelta)break;tag.x=startX+dx;tag.y=startY+\ndxdy;if(!(0>tag.x+tag.x0||0>tag.y+tag.y0||tag.x+tag.x1>size[0]||tag.y+tag.y1>size[1])){if(!(dx=!bounds)){a:{dx=size[0];dx>>=5;dxdy=tag.sprite;var w=tag.width>>5;var last=tag.x-(w<<4);for(var sx=last&127,msx=32-sx,h=tag.y1-tag.y0,x=(tag.y+tag.y0)*dx+(last>>5),j=0;j<h;j++){for(var i=last=0;i<=w;i++)if((last<<msx|(i<w?(last=dxdy[j*w+i])>>>sx:0))&board[x+i]){dx=!0;break a}x+=dx}dx=!1}dx=!dx}if(dx&&(!bounds||tag.x+tag.x1>bounds[0].x&&tag.x+tag.x0<bounds[1].x&&tag.y+tag.y1>bounds[0].y&&tag.y+tag.y0<bounds[1].y)){bounds=\ntag.sprite;startX=tag.width>>5;startY=size[0]>>5;t=tag.x-(startX<<4);maxDelta=t&127;s=32-maxDelta;dt=tag.y1-tag.y0;t=(tag.y+tag.y0)*startY+(t>>5);for(dxdy=0;dxdy<dt;dxdy++){for(w=dx=0;w<=startX;w++)board[t+w]=board[t+w]|dx<<s|(w<startX?(dx=bounds[dxdy*startX+w])>>>maxDelta:0);t+=startY}tag.sprite=null;return!0}}}return!1}var size=[256,256],text,font,fontSize,fontStyle,fontWeight,rotate,padding,spiral=archimedeanSpiral,words=[],random=Math.random,cloud={layout:function(){for(var contextAndRatio=getContext(vegaCanvas.canvas()),\nboard=zeroArray((size[0]>>5)*size[1]),bounds=null,n=words.length,i=-1,tags=[],data=words.map(function(d){return{text:text(d),font:font(d),style:fontStyle(d),weight:fontWeight(d),rotate:rotate(d),size:~~(fontSize(d)+1E-14),padding:padding(d),xoff:0,yoff:0,x1:0,y1:0,x0:0,y0:0,hasText:!1,sprite:null,datum:d}}).sort(function(a,b){return b.size-a.size});++i<n;){var d$jscomp$0=data[i];d$jscomp$0.x=size[0]*(random()+.5)>>1;d$jscomp$0.y=size[1]*(random()+.5)>>1;cloudSprite(contextAndRatio,d$jscomp$0,data,\ni);d$jscomp$0.hasText&&place(board,d$jscomp$0,bounds)&&(tags.push(d$jscomp$0),bounds?cloudBounds(bounds,d$jscomp$0):bounds=[{x:d$jscomp$0.x+d$jscomp$0.x0,y:d$jscomp$0.y+d$jscomp$0.y0},{x:d$jscomp$0.x+d$jscomp$0.x1,y:d$jscomp$0.y+d$jscomp$0.y1}],d$jscomp$0.x-=size[0]>>1,d$jscomp$0.y-=size[1]>>1)}return tags},words:function(_){return arguments.length?(words=_,cloud):words},size:function(_){return arguments.length?(size=[+_[0],+_[1]],cloud):size},font:function(_){return arguments.length?(font=functor(_),\ncloud):font},fontStyle:function(_){return arguments.length?(fontStyle=functor(_),cloud):fontStyle},fontWeight:function(_){return arguments.length?(fontWeight=functor(_),cloud):fontWeight},rotate:function(_){return arguments.length?(rotate=functor(_),cloud):rotate},text:function(_){return arguments.length?(text=functor(_),cloud):text},spiral:function(_){return arguments.length?(spiral=spirals[_]||_,cloud):spiral},fontSize:function(_){return arguments.length?(fontSize=functor(_),cloud):fontSize},padding:function(_){return arguments.length?\n(padding=functor(_),cloud):padding},random:function(_){return arguments.length?(random=_,cloud):random}};return cloud}function cloudSprite(contextAndRatio,d,data,di){if(!d.sprite){var c=contextAndRatio.context,ratio=contextAndRatio.ratio;c.clearRect(0,0,2048/ratio,2048/ratio);var y=contextAndRatio=0,maxh=0,n=data.length;for(--di;++di<n;){d=data[di];c.save();c.font=d.style+\" \"+d.weight+\" \"+~~((d.size+1)/ratio)+\"px \"+d.font;var w=c.measureText(d.text+\"m\").width*ratio;var h=d.size<<1;if(d.rotate){var sr=\nMath.sin(d.rotate*cloudRadians),cr=Math.cos(d.rotate*cloudRadians),wcr=w*cr,wsr=w*sr;cr*=h;w=h*sr;w=Math.max(Math.abs(wcr+w),Math.abs(wcr-w))+31>>5<<5;h=~~Math.max(Math.abs(wsr+cr),Math.abs(wsr-cr))}else w=w+31>>5<<5;h>maxh&&(maxh=h);2048<=contextAndRatio+w&&(contextAndRatio=0,y+=maxh,maxh=0);if(2048<=y+h)break;c.translate((contextAndRatio+(w>>1))/ratio,(y+(h>>1))/ratio);d.rotate&&c.rotate(d.rotate*cloudRadians);c.fillText(d.text,0,0);d.padding&&(c.lineWidth=2*d.padding,c.strokeText(d.text,0,0));\nc.restore();d.width=w;d.height=h;d.xoff=contextAndRatio;d.yoff=y;d.x1=w>>1;d.y1=h>>1;d.x0=-d.x1;d.y0=-d.y1;d.hasText=!0;contextAndRatio+=w}n=c.getImageData(0,0,2048/ratio,2048/ratio).data;for(wcr=[];0<=--di;)if(d=data[di],d.hasText){w=d.width;c=w>>5;h=d.y1-d.y0;for(ratio=0;ratio<h*c;ratio++)wcr[ratio]=0;contextAndRatio=d.xoff;if(null==contextAndRatio)break;y=d.yoff;wsr=0;sr=-1;for(maxh=0;maxh<h;maxh++){for(ratio=0;ratio<w;ratio++)cr=n[2048*(y+maxh)+(contextAndRatio+ratio)<<2]?1<<31-ratio%32:0,wcr[c*\nmaxh+(ratio>>5)]|=cr,wsr|=cr;wsr?sr=maxh:(d.y0++,h--,maxh--,y++)}d.y1=d.y0+sr;d.sprite=wcr.slice(0,(d.y1-d.y0)*c)}}}function cloudBounds(bounds,d){var b0=bounds[0];bounds=bounds[1];d.x+d.x0<b0.x&&(b0.x=d.x+d.x0);d.y+d.y0<b0.y&&(b0.y=d.y+d.y0);d.x+d.x1>bounds.x&&(bounds.x=d.x+d.x1);d.y+d.y1>bounds.y&&(bounds.y=d.y+d.y1)}function archimedeanSpiral(size){var e=size[0]/size[1];return function(t){return[e*(t*=.1)*Math.cos(t),t*Math.sin(t)]}}function zeroArray(n){for(var a=[],i=-1;++i<n;)a[i]=0;return a}\nfunction functor(d){return\"function\"===typeof d?d:function(){return d}}function Wordcloud(params){vegaDataflow.Transform.call(this,cloud(),params)}var cloudRadians=Math.PI/180,spirals={archimedean:archimedeanSpiral,rectangular:function(size){var dx=4*size[0]/size[1],x=0,y=0;return function(t){var sign=0>t?-1:1;switch(Math.sqrt(1+4*sign*t)-sign&3){case 0:x+=dx;break;case 1:y+=4;break;case 2:x-=dx;break;default:y-=4}return[x,y]}}},Output=\"x y font fontSize fontStyle fontWeight angle\".split(\" \"),Params=\n\"text font rotate fontSize fontStyle fontWeight\".split(\" \");Wordcloud.Definition={type:\"Wordcloud\",metadata:{modifies:!0},params:[{name:\"size\",type:\"number\",array:!0,length:2},{name:\"font\",type:\"string\",expr:!0,\"default\":\"sans-serif\"},{name:\"fontStyle\",type:\"string\",expr:!0,\"default\":\"normal\"},{name:\"fontWeight\",type:\"string\",expr:!0,\"default\":\"normal\"},{name:\"fontSize\",type:\"number\",expr:!0,\"default\":14},{name:\"fontSizeRange\",type:\"number\",array:\"nullable\",\"default\":[10,50]},{name:\"rotate\",type:\"number\",\nexpr:!0,\"default\":0},{name:\"text\",type:\"field\"},{name:\"spiral\",type:\"string\",values:[\"archimedean\",\"rectangular\"]},{name:\"padding\",type:\"number\",expr:!0},{name:\"as\",type:\"string\",array:!0,length:7,\"default\":Output}]};vegaUtil.inherits(Wordcloud,vegaDataflow.Transform,{transform:function(_,pulse){function modp(param){param=_[param];return vegaUtil.isFunction(param)&&pulse.modified(param.fields)}!_.size||_.size[0]&&_.size[1]||vegaUtil.error(\"Wordcloud size dimensions must be non-zero.\");var mod=_.modified();\nif(mod||pulse.changed(pulse.ADD_REM)||Params.some(modp)){var data=pulse.materialize(pulse.SOURCE).source,layout=this.value,as=_.as||Output,fontSize=_.fontSize||14,range;vegaUtil.isFunction(fontSize)?range=_.fontSizeRange:fontSize=vegaUtil.constant(fontSize);if(range){var fsize=fontSize,sizeScale=vegaScale.scale(\"sqrt\")().domain(vegaUtil.extent(data,fsize)).range(range);fontSize=function(x){return sizeScale(fsize(x))}}data.forEach(function(t){t[as[0]]=NaN;t[as[1]]=NaN;t[as[3]]=0});data=layout.words(data).text(_.text).size(_.size||\n[500,500]).padding(_.padding||1).spiral(_.spiral||\"archimedean\").rotate(_.rotate||0).font(_.font||\"sans-serif\").fontStyle(_.fontStyle||\"normal\").fontWeight(_.fontWeight||\"normal\").fontSize(fontSize).random(vegaStatistics.random).layout();fontSize=layout.size();layout=fontSize[0]>>1;fontSize=fontSize[1]>>1;range=data.length;for(var i=0,w=void 0,t$jscomp$0=void 0;i<range;++i)w=data[i],t$jscomp$0=w.datum,t$jscomp$0[as[0]]=w.x+layout,t$jscomp$0[as[1]]=w.y+fontSize,t$jscomp$0[as[2]]=w.font,t$jscomp$0[as[3]]=\nw.size,t$jscomp$0[as[4]]=w.style,t$jscomp$0[as[5]]=w.weight,t$jscomp$0[as[6]]=w.rotate;return pulse.reflow(mod).modifies(as)}}});exports.wordcloud=Wordcloud;Object.defineProperty(exports,\"__esModule\",{value:!0})})}","~:source","shadow$provide[\"module$node_modules$vega_wordcloud$build$vega_wordcloud\"] = function(global,require,module,exports) {\n(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('vega-canvas'), require('vega-dataflow'), require('vega-util'), require('vega-scale'), require('vega-statistics')) :\n  typeof define === 'function' && define.amd ? define(['exports', 'vega-canvas', 'vega-dataflow', 'vega-util', 'vega-scale', 'vega-statistics'], factory) :\n  (global = typeof globalThis !== 'undefined' ? globalThis : global || self, factory((global.vega = global.vega || {}, global.vega.transforms = {}), global.vega, global.vega, global.vega, global.vega, global.vega));\n}(this, (function (exports, vegaCanvas, vegaDataflow, vegaUtil, vegaScale, vegaStatistics) { 'use strict';\n\n  /*\n  Copyright (c) 2013, Jason Davies.\n  All rights reserved.\n\n  Redistribution and use in source and binary forms, with or without\n  modification, are permitted provided that the following conditions are met:\n\n    * Redistributions of source code must retain the above copyright notice, this\n      list of conditions and the following disclaimer.\n\n    * Redistributions in binary form must reproduce the above copyright notice,\n      this list of conditions and the following disclaimer in the documentation\n      and/or other materials provided with the distribution.\n\n    * The name Jason Davies may not be used to endorse or promote products\n      derived from this software without specific prior written permission.\n\n  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND\n  ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n  DISCLAIMED. IN NO EVENT SHALL JASON DAVIES BE LIABLE FOR ANY DIRECT, INDIRECT,\n  INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n  LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF\n  LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE\n  OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF\n  ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n  */\n\n  // Word cloud layout by Jason Davies, https://www.jasondavies.com/wordcloud/\n  // Algorithm due to Jonathan Feinberg, http://static.mrfeinberg.com/bv_ch03.pdf\n\n  var cloudRadians = Math.PI / 180,\n      cw = 1 << 11 >> 5,\n      ch = 1 << 11;\n\n  function cloud() {\n    var size = [256, 256],\n        text,\n        font,\n        fontSize,\n        fontStyle,\n        fontWeight,\n        rotate,\n        padding,\n        spiral = archimedeanSpiral,\n        words = [],\n        random = Math.random,\n        cloud = {};\n\n    cloud.layout = function() {\n      var contextAndRatio = getContext(vegaCanvas.canvas()),\n          board = zeroArray((size[0] >> 5) * size[1]),\n          bounds = null,\n          n = words.length,\n          i = -1,\n          tags = [],\n          data = words.map(d => ({\n            text: text(d),\n            font: font(d),\n            style: fontStyle(d),\n            weight: fontWeight(d),\n            rotate: rotate(d),\n            size: ~~(fontSize(d) + 1e-14),\n            padding: padding(d),\n            xoff: 0,\n            yoff: 0,\n            x1: 0,\n            y1: 0,\n            x0: 0,\n            y0: 0,\n            hasText: false,\n            sprite: null,\n            datum: d\n          })).sort((a, b) => b.size - a.size);\n\n      while (++i < n) {\n        var d = data[i];\n        d.x = (size[0] * (random() + .5)) >> 1;\n        d.y = (size[1] * (random() + .5)) >> 1;\n        cloudSprite(contextAndRatio, d, data, i);\n        if (d.hasText && place(board, d, bounds)) {\n          tags.push(d);\n          if (bounds) cloudBounds(bounds, d);\n          else bounds = [{x: d.x + d.x0, y: d.y + d.y0}, {x: d.x + d.x1, y: d.y + d.y1}];\n          // Temporary hack\n          d.x -= size[0] >> 1;\n          d.y -= size[1] >> 1;\n        }\n      }\n\n      return tags;\n    };\n\n    function getContext(canvas) {\n      canvas.width = canvas.height = 1;\n      var ratio = Math.sqrt(canvas.getContext('2d').getImageData(0, 0, 1, 1).data.length >> 2);\n      canvas.width = (cw << 5) / ratio;\n      canvas.height = ch / ratio;\n\n      var context = canvas.getContext('2d');\n      context.fillStyle = context.strokeStyle = 'red';\n      context.textAlign = 'center';\n\n      return {context: context, ratio: ratio};\n    }\n\n    function place(board, tag, bounds) {\n      var startX = tag.x,\n          startY = tag.y,\n          maxDelta = Math.sqrt(size[0] * size[0] + size[1] * size[1]),\n          s = spiral(size),\n          dt = random() < .5 ? 1 : -1,\n          t = -dt,\n          dxdy,\n          dx,\n          dy;\n\n      while (dxdy = s(t += dt)) {\n        dx = ~~dxdy[0];\n        dy = ~~dxdy[1];\n\n        if (Math.min(Math.abs(dx), Math.abs(dy)) >= maxDelta) break;\n\n        tag.x = startX + dx;\n        tag.y = startY + dy;\n\n        if (tag.x + tag.x0 < 0 || tag.y + tag.y0 < 0 ||\n            tag.x + tag.x1 > size[0] || tag.y + tag.y1 > size[1]) continue;\n        // TODO only check for collisions within current bounds.\n        if (!bounds || !cloudCollide(tag, board, size[0])) {\n          if (!bounds || collideRects(tag, bounds)) {\n            var sprite = tag.sprite,\n                w = tag.width >> 5,\n                sw = size[0] >> 5,\n                lx = tag.x - (w << 4),\n                sx = lx & 0x7f,\n                msx = 32 - sx,\n                h = tag.y1 - tag.y0,\n                x = (tag.y + tag.y0) * sw + (lx >> 5),\n                last;\n            for (var j = 0; j < h; j++) {\n              last = 0;\n              for (var i = 0; i <= w; i++) {\n                board[x + i] |= (last << msx) | (i < w ? (last = sprite[j * w + i]) >>> sx : 0);\n              }\n              x += sw;\n            }\n            tag.sprite = null;\n            return true;\n          }\n        }\n      }\n      return false;\n    }\n\n    cloud.words = function(_) {\n      if (arguments.length) {\n        words = _;\n        return cloud;\n      } else {\n        return words;\n      }\n    };\n\n    cloud.size = function(_) {\n      if (arguments.length) {\n        size = [+_[0], +_[1]];\n        return cloud;\n      } else {\n        return size;\n      }\n    };\n\n    cloud.font = function(_) {\n      if (arguments.length) {\n        font = functor(_);\n        return cloud;\n      } else {\n        return font;\n      }\n    };\n\n    cloud.fontStyle = function(_) {\n      if (arguments.length) {\n        fontStyle = functor(_);\n        return cloud;\n      } else {\n        return fontStyle;\n      }\n    };\n\n    cloud.fontWeight = function(_) {\n      if (arguments.length) {\n        fontWeight = functor(_);\n        return cloud;\n      } else {\n        return fontWeight;\n      }\n    };\n\n    cloud.rotate = function(_) {\n      if (arguments.length) {\n        rotate = functor(_);\n        return cloud;\n      } else {\n        return rotate;\n      }\n    };\n\n    cloud.text = function(_) {\n      if (arguments.length) {\n        text = functor(_);\n        return cloud;\n      } else {\n        return text;\n      }\n    };\n\n    cloud.spiral = function(_) {\n      if (arguments.length) {\n        spiral = spirals[_] || _;\n        return cloud;\n      } else {\n        return spiral;\n      }\n    };\n\n    cloud.fontSize = function(_) {\n      if (arguments.length) {\n        fontSize = functor(_);\n        return cloud;\n      } else {\n        return fontSize;\n      }\n    };\n\n    cloud.padding = function(_) {\n      if (arguments.length) {\n        padding = functor(_);\n        return cloud;\n      } else {\n        return padding;\n      }\n    };\n\n    cloud.random = function(_) {\n      if (arguments.length) {\n        random = _;\n        return cloud;\n      } else {\n        return random;\n      }\n    };\n\n    return cloud;\n  }\n\n  // Fetches a monochrome sprite bitmap for the specified text.\n  // Load in batches for speed.\n  function cloudSprite(contextAndRatio, d, data, di) {\n    if (d.sprite) return;\n    var c = contextAndRatio.context,\n        ratio = contextAndRatio.ratio;\n\n    c.clearRect(0, 0, (cw << 5) / ratio, ch / ratio);\n    var x = 0,\n        y = 0,\n        maxh = 0,\n        n = data.length,\n        w, w32, h, i, j;\n    --di;\n    while (++di < n) {\n      d = data[di];\n      c.save();\n      c.font = d.style + ' ' + d.weight + ' ' + ~~((d.size + 1) / ratio) + 'px ' + d.font;\n      w = c.measureText(d.text + 'm').width * ratio;\n      h = d.size << 1;\n      if (d.rotate) {\n        var sr = Math.sin(d.rotate * cloudRadians),\n            cr = Math.cos(d.rotate * cloudRadians),\n            wcr = w * cr,\n            wsr = w * sr,\n            hcr = h * cr,\n            hsr = h * sr;\n        w = (Math.max(Math.abs(wcr + hsr), Math.abs(wcr - hsr)) + 0x1f) >> 5 << 5;\n        h = ~~Math.max(Math.abs(wsr + hcr), Math.abs(wsr - hcr));\n      } else {\n        w = (w + 0x1f) >> 5 << 5;\n      }\n      if (h > maxh) maxh = h;\n      if (x + w >= (cw << 5)) {\n        x = 0;\n        y += maxh;\n        maxh = 0;\n      }\n      if (y + h >= ch) break;\n      c.translate((x + (w >> 1)) / ratio, (y + (h >> 1)) / ratio);\n      if (d.rotate) c.rotate(d.rotate * cloudRadians);\n      c.fillText(d.text, 0, 0);\n      if (d.padding) {\n        c.lineWidth = 2 * d.padding;\n        c.strokeText(d.text, 0, 0);\n      }\n      c.restore();\n      d.width = w;\n      d.height = h;\n      d.xoff = x;\n      d.yoff = y;\n      d.x1 = w >> 1;\n      d.y1 = h >> 1;\n      d.x0 = -d.x1;\n      d.y0 = -d.y1;\n      d.hasText = true;\n      x += w;\n    }\n    var pixels = c.getImageData(0, 0, (cw << 5) / ratio, ch / ratio).data,\n        sprite = [];\n    while (--di >= 0) {\n      d = data[di];\n      if (!d.hasText) continue;\n      w = d.width;\n      w32 = w >> 5;\n      h = d.y1 - d.y0;\n      // Zero the buffer\n      for (i = 0; i < h * w32; i++) sprite[i] = 0;\n      x = d.xoff;\n      if (x == null) return;\n      y = d.yoff;\n      var seen = 0,\n          seenRow = -1;\n      for (j = 0; j < h; j++) {\n        for (i = 0; i < w; i++) {\n          var k = w32 * j + (i >> 5),\n              m = pixels[((y + j) * (cw << 5) + (x + i)) << 2] ? 1 << (31 - (i % 32)) : 0;\n          sprite[k] |= m;\n          seen |= m;\n        }\n        if (seen) seenRow = j;\n        else {\n          d.y0++;\n          h--;\n          j--;\n          y++;\n        }\n      }\n      d.y1 = d.y0 + seenRow;\n      d.sprite = sprite.slice(0, (d.y1 - d.y0) * w32);\n    }\n  }\n\n  // Use mask-based collision detection.\n  function cloudCollide(tag, board, sw) {\n    sw >>= 5;\n    var sprite = tag.sprite,\n        w = tag.width >> 5,\n        lx = tag.x - (w << 4),\n        sx = lx & 0x7f,\n        msx = 32 - sx,\n        h = tag.y1 - tag.y0,\n        x = (tag.y + tag.y0) * sw + (lx >> 5),\n        last;\n    for (var j = 0; j < h; j++) {\n      last = 0;\n      for (var i = 0; i <= w; i++) {\n        if (((last << msx) | (i < w ? (last = sprite[j * w + i]) >>> sx : 0))\n            & board[x + i]) return true;\n      }\n      x += sw;\n    }\n    return false;\n  }\n\n  function cloudBounds(bounds, d) {\n    var b0 = bounds[0],\n        b1 = bounds[1];\n    if (d.x + d.x0 < b0.x) b0.x = d.x + d.x0;\n    if (d.y + d.y0 < b0.y) b0.y = d.y + d.y0;\n    if (d.x + d.x1 > b1.x) b1.x = d.x + d.x1;\n    if (d.y + d.y1 > b1.y) b1.y = d.y + d.y1;\n  }\n\n  function collideRects(a, b) {\n    return a.x + a.x1 > b[0].x && a.x + a.x0 < b[1].x && a.y + a.y1 > b[0].y && a.y + a.y0 < b[1].y;\n  }\n\n  function archimedeanSpiral(size) {\n    var e = size[0] / size[1];\n    return function(t) {\n      return [e * (t *= .1) * Math.cos(t), t * Math.sin(t)];\n    };\n  }\n\n  function rectangularSpiral(size) {\n    var dy = 4,\n        dx = dy * size[0] / size[1],\n        x = 0,\n        y = 0;\n    return function(t) {\n      var sign = t < 0 ? -1 : 1;\n      // See triangular numbers: T_n = n * (n + 1) / 2.\n      switch ((Math.sqrt(1 + 4 * sign * t) - sign) & 3) {\n        case 0:  x += dx; break;\n        case 1:  y += dy; break;\n        case 2:  x -= dx; break;\n        default: y -= dy; break;\n      }\n      return [x, y];\n    };\n  }\n\n  // TODO reuse arrays?\n  function zeroArray(n) {\n    var a = [],\n        i = -1;\n    while (++i < n) a[i] = 0;\n    return a;\n  }\n\n  function functor(d) {\n    return typeof d === 'function' ? d : function() { return d; };\n  }\n\n  var spirals = {\n    archimedean: archimedeanSpiral,\n    rectangular: rectangularSpiral\n  };\n\n  var Output = ['x', 'y', 'font', 'fontSize', 'fontStyle', 'fontWeight', 'angle'];\n\n  var Params = ['text', 'font', 'rotate', 'fontSize', 'fontStyle', 'fontWeight'];\n\n  function Wordcloud(params) {\n    vegaDataflow.Transform.call(this, cloud(), params);\n  }\n\n  Wordcloud.Definition = {\n    'type': 'Wordcloud',\n    'metadata': {'modifies': true},\n    'params': [\n      { 'name': 'size', 'type': 'number', 'array': true, 'length': 2 },\n      { 'name': 'font', 'type': 'string', 'expr': true, 'default': 'sans-serif' },\n      { 'name': 'fontStyle', 'type': 'string', 'expr': true, 'default': 'normal' },\n      { 'name': 'fontWeight', 'type': 'string', 'expr': true, 'default': 'normal' },\n      { 'name': 'fontSize', 'type': 'number', 'expr': true, 'default': 14 },\n      { 'name': 'fontSizeRange', 'type': 'number', 'array': 'nullable', 'default': [10, 50] },\n      { 'name': 'rotate', 'type': 'number', 'expr': true, 'default': 0 },\n      { 'name': 'text', 'type': 'field' },\n      { 'name': 'spiral', 'type': 'string', 'values': ['archimedean', 'rectangular'] },\n      { 'name': 'padding', 'type': 'number', 'expr': true },\n      { 'name': 'as', 'type': 'string', 'array': true, 'length': 7, 'default': Output }\n    ]\n  };\n\n  vegaUtil.inherits(Wordcloud, vegaDataflow.Transform, {\n    transform(_, pulse) {\n      if (_.size && !(_.size[0] && _.size[1])) {\n        vegaUtil.error('Wordcloud size dimensions must be non-zero.');\n      }\n\n      function modp(param) {\n        var p = _[param];\n        return vegaUtil.isFunction(p) && pulse.modified(p.fields);\n      }\n\n      const mod = _.modified();\n      if (!(mod || pulse.changed(pulse.ADD_REM) || Params.some(modp))) return;\n\n      const data = pulse.materialize(pulse.SOURCE).source,\n            layout = this.value,\n            as = _.as || Output;\n\n      let fontSize = _.fontSize || 14,\n          range;\n\n      vegaUtil.isFunction(fontSize)\n        ? (range = _.fontSizeRange)\n        : (fontSize = vegaUtil.constant(fontSize));\n\n      // create font size scaling function as needed\n      if (range) {\n        const fsize = fontSize,\n              sizeScale = vegaScale.scale('sqrt')()\n                .domain(vegaUtil.extent(data, fsize))\n                .range(range);\n        fontSize = x => sizeScale(fsize(x));\n      }\n\n      data.forEach(t => {\n        t[as[0]] = NaN;\n        t[as[1]] = NaN;\n        t[as[3]] = 0;\n      });\n\n      // configure layout\n      const words = layout\n        .words(data)\n        .text(_.text)\n        .size(_.size || [500, 500])\n        .padding(_.padding || 1)\n        .spiral(_.spiral || 'archimedean')\n        .rotate(_.rotate || 0)\n        .font(_.font || 'sans-serif')\n        .fontStyle(_.fontStyle || 'normal')\n        .fontWeight(_.fontWeight || 'normal')\n        .fontSize(fontSize)\n        .random(vegaStatistics.random)\n        .layout();\n\n      const size = layout.size(),\n          dx = size[0] >> 1,\n          dy = size[1] >> 1,\n          n = words.length;\n\n      for (let i = 0, w, t; i<n; ++i) {\n        w = words[i];\n        t = w.datum;\n        t[as[0]] = w.x + dx;\n        t[as[1]] = w.y + dy;\n        t[as[2]] = w.font;\n        t[as[3]] = w.size;\n        t[as[4]] = w.style;\n        t[as[5]] = w.weight;\n        t[as[6]] = w.rotate;\n      }\n\n      return pulse.reflow(mod).modifies(as);\n    }\n  });\n\n  exports.wordcloud = Wordcloud;\n\n  Object.defineProperty(exports, '__esModule', { value: true });\n\n})));\n\n};","~:removed-requires",["~#set",[]],"~:actual-requires",["^5",["~$module$node_modules$vega_dataflow$build$vega_dataflow","~$module$node_modules$vega_scale$build$vega_scale","~$shadow.js","~$module$node_modules$vega_statistics$build$vega_statistics","~$module$node_modules$vega_util$build$vega_util","~$module$node_modules$vega_canvas$build$vega_canvas"]],"~:properties",["^5",["y1","random","width","ratio","lineWidth","xoff","x1","height","y0","hasText","fontStyle","fontWeight","x","spiral","__esModule","x0","padding","datum","transform","vega","words","archimedean","style","wordcloud","value","context","sprite","text","fontSize","layout","yoff","font","y","Definition","transforms","strokeStyle","size","rectangular","rotate","textAlign","weight","fillStyle"]],"~:compiled-at",1600144480006,"~:source-map-json","{\n\"version\":3,\n\"file\":\"module$node_modules$vega_wordcloud$build$vega_wordcloud.js\",\n\"lineCount\":18,\n\"mappings\":\"AAAAA,cAAA,CAAe,uDAAf,CAA4E,QAAQ,CAACC,eAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,gBAAvB,CAAgC,CACnH,SAAS,CAACH,MAAD,CAASI,OAAT,CAAkB,CACP,QAAnB,GAAA,MAAOD,iBAAP,EAAiD,WAAjD,GAA+B,MAAOD,OAAtC,CAA+DE,OAAA,CAAQD,gBAAR,CAAiBF,OAAA,CAAQ,mDAAR,CAAjB,CAAyCA,OAAA,CAAQ,uDAAR,CAAzC,CAAmEA,OAAA,CAAQ,+CAAR,CAAnE,CAAyFA,OAAA,CAAQ,iDAAR,CAAzF,CAAgHA,OAAA,CAAQ,2DAAR,CAAhH,CAA/D;AACkB,UAAlB,GAAA,MAAOI,OAAP,EAAgCA,MAAhC,CAAuCC,GAAvC,CAA6CD,MAAA,CAAO,wEAAA,CAAA,KAAA,CAAA,GAAA,CAAP,CAAkGD,OAAlG,CAA7C,EACCJ,MAAA,CAA+B,WAAtB,GAAA,MAAOO,WAAP,CAAoCA,UAApC,CAAiDP,MAAjD,EAA2DQ,IAApE,CAA0EJ,OAAA,EAASJ,MAAA,CAAOS,IAAP,CAAcT,MAAd,CAAqBS,IAArB,EAA6B,EAA7B,CAAiCT,MAAjC,CAAwCS,IAAxC,CAA6CC,UAA7C,CAA0D,EAAnE,EAAwEV,MAAxE,CAA+ES,IAA/E,CAAqFT,MAArF,CAA4FS,IAA5F,CAAkGT,MAAlG,CAAyGS,IAAzG,CAA+GT,MAA/G,CAAsHS,IAAtH,CAA4HT,MAA5H,CAAmIS,IAAnI,CAD3E,CAF0B,CAA3B,CAAA,CAIC,IAJD,CAIQ,QAAS,CAACN,OAAD,CAAUQ,UAAV,CAAsBC,YAAtB,CAAoCC,QAApC,CAA8CC,SAA9C,CAAyDC,cAAzD,CAAyE,CAsCzFC,QAASA,MAAK,EAAG,CA0DfC,QAASA,WAAU,CAACC,MAAD,CAAS,CAC1BA,MAAA,CAAOC,KAAP,CAAeD,MAAf,CAAsBE,MAAtB,CAA+B,CAC/B,KAAIC,MAAQC,IAAA,CAAKC,IAAL,CAAUL,MAAA,CAAOD,UAAP,CAAkB,IAAlB,CAAA,CAAwBO,YAAxB,CAAqC,CAArC;AAAwC,CAAxC,CAA2C,CAA3C,CAA8C,CAA9C,CAAV,CAA2DC,IAA3D,CAAgEC,MAAhE,EAA0E,CAA1E,CACZR,OAAA,CAAOC,KAAP,CAAgB,IAAhB,CAA2BE,KAC3BH,OAAA,CAAOE,MAAP,CAhEKO,IAgEL,CAAqBN,KAEjBO,OAAAA,CAAUV,MAAA,CAAOD,UAAP,CAAkB,IAAlB,CACdW,OAAA,CAAQC,SAAR,CAAoBD,MAApB,CAA4BE,WAA5B,CAA0C,KAC1CF,OAAA,CAAQG,SAAR,CAAoB,QAEpB,OAAO,CAACH,QAASA,MAAV,CAAmBP,MAAOA,KAA1B,CAVmB,CAa5BW,QAASA,MAAK,CAACC,KAAD,CAAQC,GAAR,CAAaC,MAAb,CAAqB,CAWjC,IAXiC,IAC7BC,OAASF,GAATE,CAAaC,CADgB,CAE7BC,OAASJ,GAATI,CAAaC,CAFgB,CAG7BC,SAAWlB,IAAA,CAAKC,IAAL,CAAUkB,IAAA,CAAK,CAAL,CAAV,CAAoBA,IAAA,CAAK,CAAL,CAApB,CAA8BA,IAAA,CAAK,CAAL,CAA9B,CAAwCA,IAAA,CAAK,CAAL,CAAxC,CAHkB,CAI7BC,EAAIC,MAAA,CAAOF,IAAP,CAJyB,CAK7BG,GAAgB,EAAX,CAAAC,MAAA,EAAA,CAAgB,CAAhB,CAAoB,EALI,CAM7BC,EAAI,CAACF,EANwB,CAO7BG,IAP6B,CAQ7BC,EAGJ,CAAOD,IAAP,CAAcL,CAAA,CAAEI,CAAF,EAAOF,EAAP,CAAd,CAAA,CAA0B,CACxBI,EAAA,CAAK,CAAC,CAACD,IAAA,CAAK,CAAL,CACPE,KAAA,CAAK,CAAC,CAACF,IAAA,CAAK,CAAL,CAEP,IAAIzB,IAAA,CAAK4B,GAAL,CAAS5B,IAAA,CAAK6B,GAAL,CAASH,EAAT,CAAT,CAAuB1B,IAAA,CAAK6B,GAAL,CAASF,IAAT,CAAvB,CAAJ,EAA4CT,QAA5C,CAAsD,KAEtDN,IAAA,CAAIG,CAAJ,CAAQD,MAAR,CAAiBY,EACjBd,IAAA,CAAIK,CAAJ,CAAQD,MAAR;AAAiBW,IAEjB,IAAI,EAAiB,CAAjB,CAAAf,GAAA,CAAIG,CAAJ,CAAQH,GAAR,CAAYkB,EAAZ,EAAuC,CAAvC,CAAsBlB,GAAtB,CAA0BK,CAA1B,CAA8BL,GAA9B,CAAkCmB,EAAlC,EACAnB,GADA,CACIG,CADJ,CACQH,GADR,CACYoB,EADZ,CACiBb,IAAA,CAAK,CAAL,CADjB,EAC4BP,GAD5B,CACgCK,CADhC,CACoCL,GADpC,CACwCqB,EADxC,CAC6Cd,IAAA,CAAK,CAAL,CAD7C,CAAJ,CAAA,CAGI,GAAA,EAAA,EAAA,CAAA,CAAA,MAAA,CAAA,CAAA,CA8N4B,CAAA,CAAA,CA9NjB,EAAA,CAAA,IAAA,CAAA,CAAA,CA+NnBe,GAAA,GAAO,CACHC,KAAAA,CAhOevB,GAgOfuB,CAAaA,MAFmB,KAGhCC,EAjOexB,GAiOfwB,CAAQvC,KAARuC,EAAiB,CACjBC,KAAAA,KAlOezB,GAkOfyB,CAAStB,CAATsB,EAAcD,CAAdC,EAAmB,CAAnBA,CAMJ,KAVoC,IAKhCC,GAAKD,IAALC,CAAU,GALsB,CAMhCC,IAAM,EAANA,CAAWD,EANqB,CAOhCE,EArOe5B,GAqOf4B,CAAQP,EAARO,CArOe5B,GAqOf4B,CAAiBT,EAPe,CAQhChB,GAtOeH,GAsOfG,CAASE,CAATF,CAtOeH,GAsOfG,CAAiBgB,EAAjBhB,EAAuBmB,EAAvBnB,EAA6BsB,IAA7BtB,EAAmC,CAAnCA,CARgC,CAU3B0B,EAAI,CAAb,CAAgBA,CAAhB,CAAoBD,CAApB,CAAuBC,CAAA,EAAvB,CAA4B,CAE1B,IAAK,IAAIC,EADTC,IACSD,CADF,CACP,CAAgBA,CAAhB,EAAqBN,CAArB,CAAwBM,CAAA,EAAxB,CACE,IAAMC,IAAN,EAAcJ,GAAd,EAAsBG,CAAA,CAAIN,CAAJ,EAASO,IAAT,CAAgBR,IAAA,CAAOM,CAAP,CAAWL,CAAX,CAAeM,CAAf,CAAhB,IAAuCJ,EAAvC,CAA4C,CAAlE,GA3Oe3B,KA4OT,CAAMI,CAAN,CAAU2B,CAAV,CADN,CACoB,CAAA,EAAA,CAAO,CAAA,CAAP,OAAA,CAAA,CAEtB3B,CAAA,EAAKmB,EANqB,CAQ5B,EAAA,CAAO,CAAA,CAlB6B,CA9NjB,EAAA,CAAA,CAAA,EAAX,CAAJ,GAAI,EAAJ,GACM,CAACrB,MADP,EAC8BD,GAD9B,CA6PKG,CA7PL,CAC8BH,GAD9B,CA6PWoB,EA7PX,CACmCnB,MA4PnB,CAAE,CAAF,CA7PhB,CA6PqBE,CA7PrB,EAC8BH,GAD9B,CA6P4BG,CA7P5B,CAC8BH,GAD9B,CA6PkCkB,EA7PlC,CACmCjB,MA4PI,CAAE,CAAF,CA7PvC,CA6P4CE,CA7P5C,EAC8BH,GAD9B,CA6PmDK,CA7PnD,CAC8BL,GAD9B,CA6PyDqB,EA7PzD,CACmCpB,MA4P2B,CAAE,CAAF,CA7P9D,CA6PmEI,CA7PnE,EAC8BL,GAD9B,CA6P0EK,CA7P1E,CAC8BL,GAD9B,CA6PgFmB,EA7PhF,CACmClB,MA4PkD,CAAE,CAAF,CA7PrF,CA6P0FI,CA7P1F,EAC4C,CACpCkB,MAAAA;AAASvB,GAATuB,CAAaA,MACbC,OAAAA,CAAIxB,GAAJwB,CAAQvC,KAARuC,EAAiB,CACjBF,OAAAA,CAAKf,IAAA,CAAK,CAAL,CAALe,EAAgB,CAChBG,EAAAA,CAAKzB,GAALyB,CAAStB,CAATsB,EAAcD,MAAdC,EAAmB,CAAnBA,CACAC,SAAAA,CAAKD,CAALC,CAAU,GACVC,EAAAA,CAAM,EAANA,CAAWD,QACXE,GAAAA,CAAI5B,GAAJ4B,CAAQP,EAARO,CAAa5B,GAAb4B,CAAiBT,EACjBhB,EAAAA,EAAKH,GAALG,CAASE,CAATF,CAAaH,GAAbG,CAAiBgB,EAAjBhB,EAAuBmB,MAAvBnB,EAA6BsB,CAA7BtB,EAAmC,CAAnCA,CAEJ,KAAS0B,IAAT,CAAa,CAAb,CAAgBA,IAAhB,CAAoBD,EAApB,CAAuBC,IAAA,EAAvB,CAA4B,CAE1B,IAASC,CAAT,CADAC,EACA,CADO,CACP,CAAgBD,CAAhB,EAAqBN,MAArB,CAAwBM,CAAA,EAAxB,CACE/B,KAAA,CAAMI,CAAN,CAAU2B,CAAV,CAAA,CAAA/B,KAAA,CAAMI,CAAN,CAAU2B,CAAV,CAAA,CAAiBC,EAAjB,EAAyBJ,CAAzB,EAAiCG,CAAA,CAAIN,MAAJ,EAASO,EAAT,CAAgBR,MAAA,CAAOM,IAAP,CAAWL,MAAX,CAAeM,CAAf,CAAhB,IAAuCJ,QAAvC,CAA4C,CAA7E,CAEFvB,EAAA,EAAKmB,MALqB,CAO5BtB,GAAA,CAAIuB,MAAJ,CAAa,IACb,OAAO,CAAA,CAlBiC,CAJ5C,CATwB,CAmC1B,MAAO,CAAA,CA9C0B,CAvEpB,IACXhB,KAAO,CAAC,GAAD,CAAM,GAAN,CADI,CAEXyB,IAFW,CAGXC,IAHW,CAIXC,QAJW,CAKXC,SALW,CAMXC,UANW,CAOXC,MAPW,CAQXC,OARW,CASX7B,OAAS8B,iBATE,CAUXC,MAAQ,EAVG,CAWX7B,OAASvB,IAATuB,CAAcA,MAXH,CAYX7B,MAAQ,CAEN,OAAS2D,QAAQ,EAAG,CA0BxB,IA1BwB,IACpBC,gBAAkB3D,UAAA,CAAWN,UAAA,CAAWO,MAAX,EAAX,CADE;AAEpBe,MAAQ4C,SAAA,EAAWpC,IAAA,CAAK,CAAL,CAAX,EAAsB,CAAtB,EAA2BA,IAAA,CAAK,CAAL,CAA3B,CAFY,CAGpBN,OAAS,IAHW,CAIpB2C,EAAIJ,KAAJI,CAAUpD,MAJU,CAKpBsC,EAAI,EALgB,CAMpBe,KAAO,EANa,CAOpBtD,KAAOiD,KAAA,CAAMM,GAAN,CAAU,QAAA,CAAAC,CAAA,CAAM,CAAA,MAAA,CACrBf,KAAMA,IAAA,CAAKe,CAAL,CADe,CAErBd,KAAMA,IAAA,CAAKc,CAAL,CAFe,CAGrBC,MAAOb,SAAA,CAAUY,CAAV,CAHc,CAIrBE,OAAQb,UAAA,CAAWW,CAAX,CAJa,CAKrBV,OAAQA,MAAA,CAAOU,CAAP,CALa,CAMrBxC,KAAM,CAAC,EAAE2B,QAAA,CAASa,CAAT,CAAF,CAAgB,KAAhB,CANc,CAOrBT,QAASA,OAAA,CAAQS,CAAR,CAPY,CAQrBG,KAAM,CARe,CASrBC,KAAM,CATe,CAUrB/B,GAAI,CAViB,CAWrBC,GAAI,CAXiB,CAYrBH,GAAI,CAZiB,CAarBC,GAAI,CAbiB,CAcrBiC,QAAS,CAAA,CAdY,CAerB7B,OAAQ,IAfa,CAgBrB8B,MAAON,CAhBc,CAAA,CAAhB,CAAA,CAiBHO,IAjBG,CAiBE,QAAA,CAACC,CAAD,CAAIC,CAAJ,CAAU,CAAA,MAAAA,EAAA,CAAEjD,IAAF,CAASgD,CAAT,CAAWhD,IAAX,CAjBZ,CAmBX,CAAO,EAAEuB,CAAT,CAAac,CAAb,CAAA,CAAgB,CACd,IAAIG,WAAIxD,IAAA,CAAKuC,CAAL,CACRiB,WAAA,CAAE5C,CAAF,CAAOI,IAAA,CAAK,CAAL,CAAP,EAAkBI,MAAA,EAAlB,CAA6B,EAA7B,GAAqC,CACrCoC,WAAA,CAAE1C,CAAF,CAAOE,IAAA,CAAK,CAAL,CAAP,EAAkBI,MAAA,EAAlB,CAA6B,EAA7B,GAAqC,CACrC8C,YAAA,CAAYf,eAAZ,CAA6BK,UAA7B,CAAgCxD,IAAhC;AAAsCuC,CAAtC,CACIiB,WAAJ,CAAMK,OAAN,EAAiBtD,KAAA,CAAMC,KAAN,CAAagD,UAAb,CAAgB9C,MAAhB,CAAjB,GACE4C,IAAA,CAAKa,IAAL,CAAUX,UAAV,CAKA,CAJI9C,MAAJ,CAAY0D,WAAA,CAAY1D,MAAZ,CAAoB8C,UAApB,CAAZ,CACK9C,MADL,CACc,CAAC,CAACE,EAAG4C,UAAH5C,CAAKA,CAALA,CAAS4C,UAAT5C,CAAWe,EAAZ,CAAgBb,EAAG0C,UAAH1C,CAAKA,CAALA,CAAS0C,UAAT1C,CAAWc,EAA3B,CAAD,CAAiC,CAAChB,EAAG4C,UAAH5C,CAAKA,CAALA,CAAS4C,UAAT5C,CAAWiB,EAAZ,CAAgBf,EAAG0C,UAAH1C,CAAKA,CAALA,CAAS0C,UAAT1C,CAAWgB,EAA3B,CAAjC,CAGd,CADA0B,UACA,CADE5C,CACF,EADOI,IAAA,CAAK,CAAL,CACP,EADkB,CAClB,CAAAwC,UAAA,CAAE1C,CAAF,EAAOE,IAAA,CAAK,CAAL,CAAP,EAAkB,CANpB,CALc,CAehB,MAAOsC,KAzCiB,CAFd,CA4GN,MAAQe,QAAQ,CAACC,CAAD,CAAI,CACxB,MAAIC,UAAJ,CAActE,MAAd,EACEgD,KACO1D,CADC+E,CACD/E,CAAAA,KAFT,EAIS0D,KALe,CA5Gd,CAqHN,KAAOuB,QAAQ,CAACF,CAAD,CAAI,CACvB,MAAIC,UAAJ,CAActE,MAAd,EACEe,IACOzB,CADA,CAAC,CAAC+E,CAAA,CAAE,CAAF,CAAF,CAAQ,CAACA,CAAA,CAAE,CAAF,CAAT,CACA/E,CAAAA,KAFT,EAISyB,IALc,CArHb,CA8HN,KAAOyD,QAAQ,CAACH,CAAD,CAAI,CACvB,MAAIC,UAAJ,CAActE,MAAd,EACEyC,IACOnD,CADAmF,OAAA,CAAQJ,CAAR,CACA/E;AAAAA,KAFT,EAISmD,IALc,CA9Hb,CAuIN,UAAYiC,QAAQ,CAACL,CAAD,CAAI,CAC5B,MAAIC,UAAJ,CAActE,MAAd,EACE2C,SACOrD,CADKmF,OAAA,CAAQJ,CAAR,CACL/E,CAAAA,KAFT,EAISqD,SALmB,CAvIlB,CAgJN,WAAagC,QAAQ,CAACN,CAAD,CAAI,CAC7B,MAAIC,UAAJ,CAActE,MAAd,EACE4C,UACOtD,CADMmF,OAAA,CAAQJ,CAAR,CACN/E,CAAAA,KAFT,EAISsD,UALoB,CAhJnB,CAyJN,OAASgC,QAAQ,CAACP,CAAD,CAAI,CACzB,MAAIC,UAAJ,CAActE,MAAd,EACE6C,MACOvD,CADEmF,OAAA,CAAQJ,CAAR,CACF/E,CAAAA,KAFT,EAISuD,MALgB,CAzJf,CAkKN,KAAOgC,QAAQ,CAACR,CAAD,CAAI,CACvB,MAAIC,UAAJ,CAActE,MAAd,EACEwC,IACOlD,CADAmF,OAAA,CAAQJ,CAAR,CACA/E,CAAAA,KAFT,EAISkD,IALc,CAlKb,CA2KN,OAASsC,QAAQ,CAACT,CAAD,CAAI,CACzB,MAAIC,UAAJ,CAActE,MAAd,EACEiB,MACO3B,CADEyF,OAAA,CAAQV,CAAR,CACF/E,EADgB+E,CAChB/E,CAAAA,KAFT,EAIS2B,MALgB,CA3Kf,CAoLN,SAAW+D,QAAQ,CAACX,CAAD,CAAI,CAC3B,MAAIC,UAAJ,CAActE,MAAd,EACE0C,QACOpD,CADImF,OAAA,CAAQJ,CAAR,CACJ/E,CAAAA,KAFT,EAISoD,QALkB,CApLjB,CA6LN,QAAUuC,QAAQ,CAACZ,CAAD,CAAI,CAC1B,MAAIC,UAAJ,CAActE,MAAd;CACE8C,OACOxD,CADGmF,OAAA,CAAQJ,CAAR,CACH/E,CAAAA,KAFT,EAISwD,OALiB,CA7LhB,CAsMN,OAASoC,QAAQ,CAACb,CAAD,CAAI,CACzB,MAAIC,UAAJ,CAActE,MAAd,EACEmB,MACO7B,CADE+E,CACF/E,CAAAA,KAFT,EAIS6B,MALgB,CAtMf,CA+MZ,OAAO7B,MA3NQ,CAgOjB2E,QAASA,YAAW,CAACf,eAAD,CAAkBK,CAAlB,CAAqBxD,IAArB,CAA2BoF,EAA3B,CAA+B,CACjD,GAAIpD,CAAAwB,CAAAxB,CAAEA,MAAN,CAAA,CADiD,IAE7CqD,EAAIlC,eAAJkC,CAAoBlF,OAFyB,CAG7CP,MAAQuD,eAARvD,CAAwBA,KAE5ByF,EAAA,CAAEC,SAAF,CAAY,CAAZ,CAAe,CAAf,CAAmB,IAAnB,CAA8B1F,KAA9B,CAvOOM,IAuOP,CAA0CN,KAA1C,CALiD,KAO7CkB,EADAF,eACAE,CADI,CANyC,CAQ7CyE,KAAO,CARsC,CAS7ClC,EAAIrD,IAAJqD,CAASpD,MAGb,KADA,EAAEmF,EACF,CAAO,EAAEA,EAAT,CAAc/B,CAAd,CAAA,CAAiB,CACfG,CAAA,CAAIxD,IAAA,CAAKoF,EAAL,CACJC,EAAA,CAAEG,IAAF,EACAH,EAAA,CAAE3C,IAAF,CAASc,CAAT,CAAWC,KAAX,CAAmB,GAAnB,CAAyBD,CAAzB,CAA2BE,MAA3B,CAAoC,GAApC,CAA0C,CAAC,GAAGF,CAAH,CAAKxC,IAAL,CAAY,CAAZ,EAAiBpB,KAAjB,CAA3C,CAAqE,KAArE,CAA6E4D,CAA7E,CAA+Ed,IAC/E,KAAAT,EAAIoD,CAAA,CAAEI,WAAF,CAAcjC,CAAd,CAAgBf,IAAhB,CAAuB,GAAvB,CAAJR,CAAgCvC,KAAhCuC,CAAwCrC,KACxC,KAAAyC,EAAImB,CAAJnB,CAAMrB,IAANqB,EAAc,CACd,IAAImB,CAAJ,CAAMV,MAAN,CAAc,CAAA,IACR4C;AAAK7F,IAAA,CAAK8F,GAAL,CAASnC,CAAT,CAAWV,MAAX,CAAoB8C,YAApB,CADG,CAERC,GAAKhG,IAAA,CAAKiG,GAAL,CAAStC,CAAT,CAAWV,MAAX,CAAoB8C,YAApB,CAFG,CAGRG,IAAM9D,CAAN8D,CAAUF,EAHF,CAIRG,IAAM/D,CAAN+D,CAAUN,EACVO,GAAAA,EAAM5D,CACN6D,EAAAA,CAAM7D,CAAN6D,CAAUR,EACdzD,EAAA,CAAKpC,IAAA,CAAKsG,GAAL,CAAStG,IAAA,CAAK6B,GAAL,CAASqE,GAAT,CAAeG,CAAf,CAAT,CAA8BrG,IAAA,CAAK6B,GAAL,CAASqE,GAAT,CAAeG,CAAf,CAA9B,CAAL,CAA0D,EAA1D,EAAmE,CAAnE,EAAwE,CACxE7D,EAAA,CAAI,CAAC,CAACxC,IAAA,CAAKsG,GAAL,CAAStG,IAAA,CAAK6B,GAAL,CAASsE,GAAT,CAAeC,EAAf,CAAT,CAA8BpG,IAAA,CAAK6B,GAAL,CAASsE,GAAT,CAAeC,EAAf,CAA9B,CARM,CAAd,IAUEhE,EAAA,CAAKA,CAAL,CAAS,EAAT,EAAkB,CAAlB,EAAuB,CAErBI,EAAJ,CAAQkD,IAAR,GAAcA,IAAd,CAAqBlD,CAArB,CACc,KAAd,EAAIzB,eAAJ,CAAQqB,CAAR,GACErB,eAEA,CAFI,CAEJ,CADAE,CACA,EADKyE,IACL,CAAAA,IAAA,CAAO,CAHT,CAKA,IAtQKrF,IAsQL,EAAIY,CAAJ,CAAQuB,CAAR,CAAiB,KACjBgD,EAAA,CAAEe,SAAF,EAAaxF,eAAb,EAAkBqB,CAAlB,EAAuB,CAAvB,GAA6BrC,KAA7B,EAAqCkB,CAArC,EAA0CuB,CAA1C,EAA+C,CAA/C,GAAqDzC,KAArD,CACI4D,EAAJ,CAAMV,MAAN,EAAcuC,CAAA,CAAEvC,MAAF,CAASU,CAAT,CAAWV,MAAX,CAAoB8C,YAApB,CACdP,EAAA,CAAEgB,QAAF,CAAW7C,CAAX,CAAaf,IAAb,CAAmB,CAAnB,CAAsB,CAAtB,CACIe,EAAJ,CAAMT,OAAN,GACEsC,CACA,CADEiB,SACF,CADc,CACd,CADkB9C,CAClB,CADoBT,OACpB,CAAAsC,CAAA,CAAEkB,UAAF,CAAa/C,CAAb,CAAef,IAAf,CAAqB,CAArB,CAAwB,CAAxB,CAFF,CAIA4C;CAAA,CAAEmB,OAAF,EACAhD,EAAA,CAAE9D,KAAF,CAAUuC,CACVuB,EAAA,CAAE7D,MAAF,CAAW0C,CACXmB,EAAA,CAAEG,IAAF,CAAS/C,eACT4C,EAAA,CAAEI,IAAF,CAAS9C,CACT0C,EAAA,CAAE3B,EAAF,CAAOI,CAAP,EAAY,CACZuB,EAAA,CAAE1B,EAAF,CAAOO,CAAP,EAAY,CACZmB,EAAA,CAAE7B,EAAF,CAAO,CAAC6B,CAAD,CAAG3B,EACV2B,EAAA,CAAE5B,EAAF,CAAO,CAAC4B,CAAD,CAAG1B,EACV0B,EAAA,CAAEK,OAAF,CAAY,CAAA,CACZjD,gBAAA,EAAKqB,CA1CU,CA4CbwE,CAAAA,CAASpB,CAAA,CAAEtF,YAAF,CAAe,CAAf,CAAkB,CAAlB,CAAsB,IAAtB,CAAiCH,KAAjC,CA1RNM,IA0RM,CAA6CN,KAA7C,CAAT6G,CAA6DzG,IAEjE,KADIgC,GACJ,CADa,EACb,CAAe,CAAf,EAAO,EAAEoD,EAAT,CAAA,CAEE,GADA5B,CACKK,CADD7D,IAAA,CAAKoF,EAAL,CACCvB,CAAAL,CAAAK,CAAEA,OAAP,CAAA,CACA5B,CAAA,CAAIuB,CAAJ,CAAM9D,KACNgH,EAAA,CAAMzE,CAAN,EAAW,CACXI,EAAA,CAAImB,CAAJ,CAAM1B,EAAN,CAAW0B,CAAX,CAAa5B,EAEb,KAAKW,KAAL,CAAS,CAAT,CAAYA,KAAZ,CAAgBF,CAAhB,CAAoBqE,CAApB,CAAyBnE,KAAA,EAAzB,CAA8BP,GAAA,CAAOO,KAAP,CAAA,CAAY,CAC1C3B,gBAAA,CAAI4C,CAAJ,CAAMG,IACN,IAAS,IAAT,EAAI/C,eAAJ,CAAe,KACfE,EAAA,CAAI0C,CAAJ,CAAMI,IACF+C,IAAAA,CAAO,CACPC,GAAAA,CAAU,EACd,KAAKtE,IAAL,CAAS,CAAT,CAAYA,IAAZ,CAAgBD,CAAhB,CAAmBC,IAAA,EAAnB,CAAwB,CACtB,IAAKC,KAAL,CAAS,CAAT,CAAYA,KAAZ,CAAgBN,CAAhB,CAAmBM,KAAA,EAAnB,CAEMsE,EAEJ,CAFQJ,CAAA,CAAmB,IAAnB,EAAS3F,CAAT,CAAawB,IAAb,GAA+B1B,eAA/B,CAAmC2B,KAAnC,GAA0C,CAA1C,CAAA,CAA+C,CAA/C,EAAqD,EAArD,CAA2DA,KAA3D,CAA+D,EAA/D,CAAsE,CAE9E,CADAP,GAAA,CAFQ0E,CAER;AAFcpE,IAEd,EAFmBC,KAEnB,EAFwB,CAExB,EACA,EADasE,EACb,CAAAF,GAAA,EAAQE,EAENF,IAAJ,CAAUC,EAAV,CAAoBtE,IAApB,EAEEkB,CAAA,CAAE5B,EAAF,EAGA,CAFAS,CAAA,EAEA,CADAC,IAAA,EACA,CAAAxB,CAAA,EALF,CAPsB,CAexB0C,CAAA,CAAE1B,EAAF,CAAO0B,CAAP,CAAS5B,EAAT,CAAcgF,EACdpD,EAAA,CAAExB,MAAF,CAAWA,GAAA,CAAO8E,KAAP,CAAa,CAAb,EAAiBtD,CAAjB,CAAmB1B,EAAnB,CAAwB0B,CAAxB,CAA0B5B,EAA1B,EAAgC8E,CAAhC,CA3BX,CA3DF,CADiD,CAiHnDtC,QAASA,YAAW,CAAC1D,MAAD,CAAS8C,CAAT,CAAY,CAAA,IAC1BuD,GAAKrG,MAAA,CAAO,CAAP,CACLsG,OAAAA,CAAKtG,MAAA,CAAO,CAAP,CACL8C,EAAJ,CAAM5C,CAAN,CAAU4C,CAAV,CAAY7B,EAAZ,CAAiBoF,EAAjB,CAAoBnG,CAApB,GAAuBmG,EAAvB,CAA0BnG,CAA1B,CAA8B4C,CAA9B,CAAgC5C,CAAhC,CAAoC4C,CAApC,CAAsC7B,EAAtC,CACI6B,EAAJ,CAAM1C,CAAN,CAAU0C,CAAV,CAAY5B,EAAZ,CAAiBmF,EAAjB,CAAoBjG,CAApB,GAAuBiG,EAAvB,CAA0BjG,CAA1B,CAA8B0C,CAA9B,CAAgC1C,CAAhC,CAAoC0C,CAApC,CAAsC5B,EAAtC,CACI4B,EAAJ,CAAM5C,CAAN,CAAU4C,CAAV,CAAY3B,EAAZ,CAAiBmF,MAAjB,CAAoBpG,CAApB,GAAuBoG,MAAvB,CAA0BpG,CAA1B,CAA8B4C,CAA9B,CAAgC5C,CAAhC,CAAoC4C,CAApC,CAAsC3B,EAAtC,CACI2B,EAAJ,CAAM1C,CAAN,CAAU0C,CAAV,CAAY1B,EAAZ,CAAiBkF,MAAjB,CAAoBlG,CAApB,GAAuBkG,MAAvB,CAA0BlG,CAA1B,CAA8B0C,CAA9B,CAAgC1C,CAAhC,CAAoC0C,CAApC,CAAsC1B,EAAtC,CAN8B,CAahCkB,QAASA,kBAAiB,CAAChC,IAAD,CAAO,CAC/B,IAAIiG,EAAIjG,IAAA,CAAK,CAAL,CAAJiG,CAAcjG,IAAA,CAAK,CAAL,CAClB,OAAO,SAAQ,CAACK,CAAD,CAAI,CACjB,MAAO,CAAC4F,CAAD,EAAM5F,CAAN,EAAW,EAAX,EAAiBxB,IAAA,CAAKiG,GAAL,CAASzE,CAAT,CAAjB,CAA8BA,CAA9B,CAAkCxB,IAAA,CAAK8F,GAAL,CAAStE,CAAT,CAAlC,CADU,CAFY,CA0BjC+B,QAASA,UAAS,CAACC,CAAD,CAAI,CAGpB,IAHoB,IAChBW,EAAI,EADY,CAEhBzB,EAAI,EACR,CAAO,EAAEA,CAAT,CAAac,CAAb,CAAA,CAAgBW,CAAA,CAAEzB,CAAF,CAAA,CAAO,CACvB,OAAOyB,EAJa;AAOtBU,QAASA,QAAO,CAAClB,CAAD,CAAI,CAClB,MAAoB,UAAb,GAAA,MAAOA,EAAP,CAA0BA,CAA1B,CAA8B,QAAQ,EAAG,CAAE,MAAOA,EAAT,CAD9B,CAapB0D,QAASA,UAAS,CAACC,MAAD,CAAS,CACzBhI,YAAA,CAAaiI,SAAb,CAAuBC,IAAvB,CAA4B,IAA5B,CAAkC9H,KAAA,EAAlC,CAA2C4H,MAA3C,CADyB,CAlb8D,IAkCrFvB,aAAe/F,IAAf+F,CAAoB0B,EAApB1B,CAAyB,GAlC4D,CAyarFZ,QAAU,CACZuC,YAAavE,iBADD,CAEZwE,YAhCFC,QAA0B,CAACzG,IAAD,CAAO,CAAA,IAE3BO,GADKC,CACLD,CAAUP,IAAA,CAAK,CAAL,CAAVO,CAAoBP,IAAA,CAAK,CAAL,CAFO,CAG3BJ,EAAI,CAHuB,CAI3BE,EAAI,CACR,OAAO,SAAQ,CAACO,CAAD,CAAI,CACjB,IAAIqG,KAAW,CAAJ,CAAArG,CAAA,CAAQ,EAAR,CAAa,CAExB,QAASxB,IAAA,CAAKC,IAAL,CAAU,CAAV,CAAc,CAAd,CAAkB4H,IAAlB,CAAyBrG,CAAzB,CAAT,CAAuCqG,IAAvC,CAA+C,CAA/C,EACE,KAAK,CAAL,CAAS9G,CAAA,EAAKW,EAAI,MAClB,MAAK,CAAL,CAAST,CAAA,EATJU,CASa,MAClB,MAAK,CAAL,CAASZ,CAAA,EAAKW,EAAI,MAClB,SAAST,CAAA,EAXJU,CAOP,CAMA,MAAO,CAACZ,CAAD,CAAIE,CAAJ,CATU,CALY,CA8BnB,CAza2E,CA8arF6G,OAAS,8CAAA,CAAA,KAAA,CAAA,GAAA,CA9a4E,CAgbrFC;AAAS,gDAAA,CAAA,KAAA,CAAA,GAAA,CAMbV,UAAA,CAAUW,UAAV,CAAuB,CACrB,KAAQ,WADa,CAErB,SAAY,CAAC,SAAY,CAAA,CAAb,CAFS,CAGrB,OAAU,CACR,CAAE,KAAQ,MAAV,CAAkB,KAAQ,QAA1B,CAAoC,MAAS,CAAA,CAA7C,CAAmD,OAAU,CAA7D,CADQ,CAER,CAAE,KAAQ,MAAV,CAAkB,KAAQ,QAA1B,CAAoC,KAAQ,CAAA,CAA5C,CAAkD,UAAW,YAA7D,CAFQ,CAGR,CAAE,KAAQ,WAAV,CAAuB,KAAQ,QAA/B,CAAyC,KAAQ,CAAA,CAAjD,CAAuD,UAAW,QAAlE,CAHQ,CAIR,CAAE,KAAQ,YAAV,CAAwB,KAAQ,QAAhC,CAA0C,KAAQ,CAAA,CAAlD,CAAwD,UAAW,QAAnE,CAJQ,CAKR,CAAE,KAAQ,UAAV,CAAsB,KAAQ,QAA9B,CAAwC,KAAQ,CAAA,CAAhD,CAAsD,UAAW,EAAjE,CALQ,CAMR,CAAE,KAAQ,eAAV,CAA2B,KAAQ,QAAnC,CAA6C,MAAS,UAAtD,CAAkE,UAAW,CAAC,EAAD,CAAK,EAAL,CAA7E,CANQ,CAOR,CAAE,KAAQ,QAAV,CAAoB,KAAQ,QAA5B;AAAsC,KAAQ,CAAA,CAA9C,CAAoD,UAAW,CAA/D,CAPQ,CAQR,CAAE,KAAQ,MAAV,CAAkB,KAAQ,OAA1B,CARQ,CASR,CAAE,KAAQ,QAAV,CAAoB,KAAQ,QAA5B,CAAsC,OAAU,CAAC,aAAD,CAAgB,aAAhB,CAAhD,CATQ,CAUR,CAAE,KAAQ,SAAV,CAAqB,KAAQ,QAA7B,CAAuC,KAAQ,CAAA,CAA/C,CAVQ,CAWR,CAAE,KAAQ,IAAV,CAAgB,KAAQ,QAAxB,CAAkC,MAAS,CAAA,CAA3C,CAAiD,OAAU,CAA3D,CAA8D,UAAWF,MAAzE,CAXQ,CAHW,CAkBvBvI,SAAA,CAAS0I,QAAT,CAAkBZ,SAAlB,CAA6B/H,YAA7B,CAA0CiI,SAA1C,CAAqD,CACnD,UAAAW,QAAS,CAACzD,CAAD,CAAI0D,KAAJ,CAAW,CAKlBC,QAASA,KAAI,CAACC,KAAD,CAAQ,CACfC,KAAAA,CAAI7D,CAAA,CAAE4D,KAAF,CACR,OAAO9I,SAAA,CAASgJ,UAAT,CAAoBD,KAApB,CAAP,EAAiCH,KAAA,CAAMK,QAAN,CAAeF,KAAf,CAAiBG,MAAjB,CAFd,CAJjBtH,CAAAsD,CAAAtD,CAAEA,IAAN,EAAgBsD,CAAA,CAAEtD,IAAF,CAAO,CAAP,CAAhB,EAA6BsD,CAAA,CAAEtD,IAAF,CAAO,CAAP,CAA7B,EACE5B,QAAA,CAASmJ,KAAT,CAAe,6CAAf,CAQF,KAAMC,IAAMlE,CAAA,CAAE+D,QAAF,EACZ;GAAMG,GAAN,EAAaR,KAAA,CAAMS,OAAN,CAAcT,KAAd,CAAoBU,OAApB,CAAb,EAA6Cd,MAAA,CAAOe,IAAP,CAAYV,IAAZ,CAA7C,CAAA,CAEA,IAAMjI,KAAOgI,KAAA,CAAMY,WAAN,CAAkBZ,KAAlB,CAAwBa,MAAxB,CAAP7I,CAAuC8I,MAA7C,CACMC,OAAS,IAATA,CAAcC,KADpB,CAEMC,GAAK3E,CAAL2E,CAAOA,EAAPA,EAAatB,MAFnB,CAIIhF,SAAW2B,CAAX3B,CAAaA,QAAbA,EAAyB,EAJ7B,CAKIuG,KAEJ9J,SAAA,CAASgJ,UAAT,CAAoBzF,QAApB,CAAA,CACKuG,KADL,CACa5E,CADb,CACe6E,aADf,CAEKxG,QAFL,CAEgBvD,QAAA,CAASgK,QAAT,CAAkBzG,QAAlB,CAGhB,IAAIuG,KAAJ,CAAW,CACT,IAAMG,MAAQ1G,QAAd,CACM2G,UAAYjK,SAAA,CAAUkK,KAAV,CAAgB,MAAhB,CAAA,EAAA,CACTC,MADS,CACFpK,QAAA,CAASqK,MAAT,CAAgBzJ,IAAhB,CAAsBqJ,KAAtB,CADE,CAAA,CAETH,KAFS,CAEHA,KAFG,CAGlBvG,SAAA,CAAWA,QAAA,CAAA/B,CAAA,CAAK,CAAA,MAAA0I,UAAA,CAAUD,KAAA,CAAMzI,CAAN,CAAV,CAAA,CALP,CAQXZ,IAAA,CAAK0J,OAAL,CAAa,QAAA,CAAArI,CAAA,CAAK,CAChBA,CAAA,CAAE4H,EAAA,CAAG,CAAH,CAAF,CAAA,CAAWU,GACXtI,EAAA,CAAE4H,EAAA,CAAG,CAAH,CAAF,CAAA,CAAWU,GACXtI,EAAA,CAAE4H,EAAA,CAAG,CAAH,CAAF,CAAA,CAAW,CAHK,CAAlB,CAOMhG,KAAAA,CAAQ8F,MAAA,CACX9F,KADW,CACLjD,IADK,CAAA,CAEXyC,IAFW,CAEN6B,CAFM,CAEJ7B,IAFI,CAAA,CAGXzB,IAHW,CAGNsD,CAHM,CAGJtD,IAHI;AAGI,CAAC,GAAD,CAAM,GAAN,CAHJ,CAAA,CAIX+B,OAJW,CAIHuB,CAJG,CAIDvB,OAJC,EAIU,CAJV,CAAA,CAKX7B,MALW,CAKJoD,CALI,CAKFpD,MALE,EAKQ,aALR,CAAA,CAMX4B,MANW,CAMJwB,CANI,CAMFxB,MANE,EAMQ,CANR,CAAA,CAOXJ,IAPW,CAON4B,CAPM,CAOJ5B,IAPI,EAOI,YAPJ,CAAA,CAQXE,SARW,CAQD0B,CARC,CAQC1B,SARD,EAQc,QARd,CAAA,CASXC,UATW,CASAyB,CATA,CASEzB,UATF,EASgB,QAThB,CAAA,CAUXF,QAVW,CAUFA,QAVE,CAAA,CAWXvB,MAXW,CAWJ9B,cAXI,CAWW8B,MAXX,CAAA,CAYX2H,MAZW,EAcR/H,SAAAA,CAAO+H,MAAA,CAAO/H,IAAP,EACTO,OAAAA,CAAKP,QAAA,CAAK,CAAL,CAALO,EAAgB,CAChBC,SAAAA,CAAKR,QAAA,CAAK,CAAL,CAALQ,EAAgB,CAChB6B,MAAAA,CAAIJ,IAAJI,CAAUpD,MAEd,KA3DkB,IA2DTsC,EAAI,CA3DK,CA2DFN,EAAAA,IAAAA,EA3DE,CA2DCZ,WAAAA,IAAAA,EAAnB,CAAsBkB,CAAtB,CAAwBc,KAAxB,CAA2B,EAAEd,CAA7B,CACEN,CAQA,CARIgB,IAAA,CAAMV,CAAN,CAQJ,CAPAlB,UAOA,CAPIY,CAOJ,CAPM6B,KAON,CANAzC,UAAA,CAAE4H,EAAA,CAAG,CAAH,CAAF,CAMA,CANWhH,CAMX,CANarB,CAMb,CANiBW,MAMjB,CALAF,UAAA,CAAE4H,EAAA,CAAG,CAAH,CAAF,CAKA,CALWhH,CAKX,CALanB,CAKb,CALiBU,QAKjB,CAJAH,UAAA,CAAE4H,EAAA,CAAG,CAAH,CAAF,CAIA,CAJWhH,CAIX,CAJaS,IAIb,CAHArB,UAAA,CAAE4H,EAAA,CAAG,CAAH,CAAF,CAGA;AAHWhH,CAGX,CAHajB,IAGb,CAFAK,UAAA,CAAE4H,EAAA,CAAG,CAAH,CAAF,CAEA,CAFWhH,CAEX,CAFawB,KAEb,CADApC,UAAA,CAAE4H,EAAA,CAAG,CAAH,CAAF,CACA,CADWhH,CACX,CADayB,MACb,CAAArC,UAAA,CAAE4H,EAAA,CAAG,CAAH,CAAF,CAAA,CAAWhH,CAAX,CAAaa,MAGf,OAAOkF,MAAA,CAAM4B,MAAN,CAAapB,GAAb,CAAA,CAAkBqB,QAAlB,CAA2BZ,EAA3B,CA5DP,CAXkB,CAD+B,CAArD,CA4EAvK,QAAA,CAAQoL,SAAR,CAAoB5C,SAEpB6C,OAAA,CAAOC,cAAP,CAAsBtL,OAAtB,CAA+B,YAA/B,CAA6C,CAAEsK,MAAO,CAAA,CAAT,CAA7C,CAthByF,CAJ1F,CADmH;\",\n\"sources\":[\"node_modules/vega-wordcloud/build/vega-wordcloud.js\"],\n\"sourcesContent\":[\"shadow$provide[\\\"module$node_modules$vega_wordcloud$build$vega_wordcloud\\\"] = function(global,require,module,exports) {\\n(function (global, factory) {\\n  typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('vega-canvas'), require('vega-dataflow'), require('vega-util'), require('vega-scale'), require('vega-statistics')) :\\n  typeof define === 'function' && define.amd ? define(['exports', 'vega-canvas', 'vega-dataflow', 'vega-util', 'vega-scale', 'vega-statistics'], factory) :\\n  (global = typeof globalThis !== 'undefined' ? globalThis : global || self, factory((global.vega = global.vega || {}, global.vega.transforms = {}), global.vega, global.vega, global.vega, global.vega, global.vega));\\n}(this, (function (exports, vegaCanvas, vegaDataflow, vegaUtil, vegaScale, vegaStatistics) { 'use strict';\\n\\n  /*\\n  Copyright (c) 2013, Jason Davies.\\n  All rights reserved.\\n\\n  Redistribution and use in source and binary forms, with or without\\n  modification, are permitted provided that the following conditions are met:\\n\\n    * Redistributions of source code must retain the above copyright notice, this\\n      list of conditions and the following disclaimer.\\n\\n    * Redistributions in binary form must reproduce the above copyright notice,\\n      this list of conditions and the following disclaimer in the documentation\\n      and/or other materials provided with the distribution.\\n\\n    * The name Jason Davies may not be used to endorse or promote products\\n      derived from this software without specific prior written permission.\\n\\n  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \\\"AS IS\\\" AND\\n  ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\\n  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\\n  DISCLAIMED. IN NO EVENT SHALL JASON DAVIES BE LIABLE FOR ANY DIRECT, INDIRECT,\\n  INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\\n  LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\\n  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF\\n  LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE\\n  OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF\\n  ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\\n  */\\n\\n  // Word cloud layout by Jason Davies, https://www.jasondavies.com/wordcloud/\\n  // Algorithm due to Jonathan Feinberg, http://static.mrfeinberg.com/bv_ch03.pdf\\n\\n  var cloudRadians = Math.PI / 180,\\n      cw = 1 << 11 >> 5,\\n      ch = 1 << 11;\\n\\n  function cloud() {\\n    var size = [256, 256],\\n        text,\\n        font,\\n        fontSize,\\n        fontStyle,\\n        fontWeight,\\n        rotate,\\n        padding,\\n        spiral = archimedeanSpiral,\\n        words = [],\\n        random = Math.random,\\n        cloud = {};\\n\\n    cloud.layout = function() {\\n      var contextAndRatio = getContext(vegaCanvas.canvas()),\\n          board = zeroArray((size[0] >> 5) * size[1]),\\n          bounds = null,\\n          n = words.length,\\n          i = -1,\\n          tags = [],\\n          data = words.map(d => ({\\n            text: text(d),\\n            font: font(d),\\n            style: fontStyle(d),\\n            weight: fontWeight(d),\\n            rotate: rotate(d),\\n            size: ~~(fontSize(d) + 1e-14),\\n            padding: padding(d),\\n            xoff: 0,\\n            yoff: 0,\\n            x1: 0,\\n            y1: 0,\\n            x0: 0,\\n            y0: 0,\\n            hasText: false,\\n            sprite: null,\\n            datum: d\\n          })).sort((a, b) => b.size - a.size);\\n\\n      while (++i < n) {\\n        var d = data[i];\\n        d.x = (size[0] * (random() + .5)) >> 1;\\n        d.y = (size[1] * (random() + .5)) >> 1;\\n        cloudSprite(contextAndRatio, d, data, i);\\n        if (d.hasText && place(board, d, bounds)) {\\n          tags.push(d);\\n          if (bounds) cloudBounds(bounds, d);\\n          else bounds = [{x: d.x + d.x0, y: d.y + d.y0}, {x: d.x + d.x1, y: d.y + d.y1}];\\n          // Temporary hack\\n          d.x -= size[0] >> 1;\\n          d.y -= size[1] >> 1;\\n        }\\n      }\\n\\n      return tags;\\n    };\\n\\n    function getContext(canvas) {\\n      canvas.width = canvas.height = 1;\\n      var ratio = Math.sqrt(canvas.getContext('2d').getImageData(0, 0, 1, 1).data.length >> 2);\\n      canvas.width = (cw << 5) / ratio;\\n      canvas.height = ch / ratio;\\n\\n      var context = canvas.getContext('2d');\\n      context.fillStyle = context.strokeStyle = 'red';\\n      context.textAlign = 'center';\\n\\n      return {context: context, ratio: ratio};\\n    }\\n\\n    function place(board, tag, bounds) {\\n      var startX = tag.x,\\n          startY = tag.y,\\n          maxDelta = Math.sqrt(size[0] * size[0] + size[1] * size[1]),\\n          s = spiral(size),\\n          dt = random() < .5 ? 1 : -1,\\n          t = -dt,\\n          dxdy,\\n          dx,\\n          dy;\\n\\n      while (dxdy = s(t += dt)) {\\n        dx = ~~dxdy[0];\\n        dy = ~~dxdy[1];\\n\\n        if (Math.min(Math.abs(dx), Math.abs(dy)) >= maxDelta) break;\\n\\n        tag.x = startX + dx;\\n        tag.y = startY + dy;\\n\\n        if (tag.x + tag.x0 < 0 || tag.y + tag.y0 < 0 ||\\n            tag.x + tag.x1 > size[0] || tag.y + tag.y1 > size[1]) continue;\\n        // TODO only check for collisions within current bounds.\\n        if (!bounds || !cloudCollide(tag, board, size[0])) {\\n          if (!bounds || collideRects(tag, bounds)) {\\n            var sprite = tag.sprite,\\n                w = tag.width >> 5,\\n                sw = size[0] >> 5,\\n                lx = tag.x - (w << 4),\\n                sx = lx & 0x7f,\\n                msx = 32 - sx,\\n                h = tag.y1 - tag.y0,\\n                x = (tag.y + tag.y0) * sw + (lx >> 5),\\n                last;\\n            for (var j = 0; j < h; j++) {\\n              last = 0;\\n              for (var i = 0; i <= w; i++) {\\n                board[x + i] |= (last << msx) | (i < w ? (last = sprite[j * w + i]) >>> sx : 0);\\n              }\\n              x += sw;\\n            }\\n            tag.sprite = null;\\n            return true;\\n          }\\n        }\\n      }\\n      return false;\\n    }\\n\\n    cloud.words = function(_) {\\n      if (arguments.length) {\\n        words = _;\\n        return cloud;\\n      } else {\\n        return words;\\n      }\\n    };\\n\\n    cloud.size = function(_) {\\n      if (arguments.length) {\\n        size = [+_[0], +_[1]];\\n        return cloud;\\n      } else {\\n        return size;\\n      }\\n    };\\n\\n    cloud.font = function(_) {\\n      if (arguments.length) {\\n        font = functor(_);\\n        return cloud;\\n      } else {\\n        return font;\\n      }\\n    };\\n\\n    cloud.fontStyle = function(_) {\\n      if (arguments.length) {\\n        fontStyle = functor(_);\\n        return cloud;\\n      } else {\\n        return fontStyle;\\n      }\\n    };\\n\\n    cloud.fontWeight = function(_) {\\n      if (arguments.length) {\\n        fontWeight = functor(_);\\n        return cloud;\\n      } else {\\n        return fontWeight;\\n      }\\n    };\\n\\n    cloud.rotate = function(_) {\\n      if (arguments.length) {\\n        rotate = functor(_);\\n        return cloud;\\n      } else {\\n        return rotate;\\n      }\\n    };\\n\\n    cloud.text = function(_) {\\n      if (arguments.length) {\\n        text = functor(_);\\n        return cloud;\\n      } else {\\n        return text;\\n      }\\n    };\\n\\n    cloud.spiral = function(_) {\\n      if (arguments.length) {\\n        spiral = spirals[_] || _;\\n        return cloud;\\n      } else {\\n        return spiral;\\n      }\\n    };\\n\\n    cloud.fontSize = function(_) {\\n      if (arguments.length) {\\n        fontSize = functor(_);\\n        return cloud;\\n      } else {\\n        return fontSize;\\n      }\\n    };\\n\\n    cloud.padding = function(_) {\\n      if (arguments.length) {\\n        padding = functor(_);\\n        return cloud;\\n      } else {\\n        return padding;\\n      }\\n    };\\n\\n    cloud.random = function(_) {\\n      if (arguments.length) {\\n        random = _;\\n        return cloud;\\n      } else {\\n        return random;\\n      }\\n    };\\n\\n    return cloud;\\n  }\\n\\n  // Fetches a monochrome sprite bitmap for the specified text.\\n  // Load in batches for speed.\\n  function cloudSprite(contextAndRatio, d, data, di) {\\n    if (d.sprite) return;\\n    var c = contextAndRatio.context,\\n        ratio = contextAndRatio.ratio;\\n\\n    c.clearRect(0, 0, (cw << 5) / ratio, ch / ratio);\\n    var x = 0,\\n        y = 0,\\n        maxh = 0,\\n        n = data.length,\\n        w, w32, h, i, j;\\n    --di;\\n    while (++di < n) {\\n      d = data[di];\\n      c.save();\\n      c.font = d.style + ' ' + d.weight + ' ' + ~~((d.size + 1) / ratio) + 'px ' + d.font;\\n      w = c.measureText(d.text + 'm').width * ratio;\\n      h = d.size << 1;\\n      if (d.rotate) {\\n        var sr = Math.sin(d.rotate * cloudRadians),\\n            cr = Math.cos(d.rotate * cloudRadians),\\n            wcr = w * cr,\\n            wsr = w * sr,\\n            hcr = h * cr,\\n            hsr = h * sr;\\n        w = (Math.max(Math.abs(wcr + hsr), Math.abs(wcr - hsr)) + 0x1f) >> 5 << 5;\\n        h = ~~Math.max(Math.abs(wsr + hcr), Math.abs(wsr - hcr));\\n      } else {\\n        w = (w + 0x1f) >> 5 << 5;\\n      }\\n      if (h > maxh) maxh = h;\\n      if (x + w >= (cw << 5)) {\\n        x = 0;\\n        y += maxh;\\n        maxh = 0;\\n      }\\n      if (y + h >= ch) break;\\n      c.translate((x + (w >> 1)) / ratio, (y + (h >> 1)) / ratio);\\n      if (d.rotate) c.rotate(d.rotate * cloudRadians);\\n      c.fillText(d.text, 0, 0);\\n      if (d.padding) {\\n        c.lineWidth = 2 * d.padding;\\n        c.strokeText(d.text, 0, 0);\\n      }\\n      c.restore();\\n      d.width = w;\\n      d.height = h;\\n      d.xoff = x;\\n      d.yoff = y;\\n      d.x1 = w >> 1;\\n      d.y1 = h >> 1;\\n      d.x0 = -d.x1;\\n      d.y0 = -d.y1;\\n      d.hasText = true;\\n      x += w;\\n    }\\n    var pixels = c.getImageData(0, 0, (cw << 5) / ratio, ch / ratio).data,\\n        sprite = [];\\n    while (--di >= 0) {\\n      d = data[di];\\n      if (!d.hasText) continue;\\n      w = d.width;\\n      w32 = w >> 5;\\n      h = d.y1 - d.y0;\\n      // Zero the buffer\\n      for (i = 0; i < h * w32; i++) sprite[i] = 0;\\n      x = d.xoff;\\n      if (x == null) return;\\n      y = d.yoff;\\n      var seen = 0,\\n          seenRow = -1;\\n      for (j = 0; j < h; j++) {\\n        for (i = 0; i < w; i++) {\\n          var k = w32 * j + (i >> 5),\\n              m = pixels[((y + j) * (cw << 5) + (x + i)) << 2] ? 1 << (31 - (i % 32)) : 0;\\n          sprite[k] |= m;\\n          seen |= m;\\n        }\\n        if (seen) seenRow = j;\\n        else {\\n          d.y0++;\\n          h--;\\n          j--;\\n          y++;\\n        }\\n      }\\n      d.y1 = d.y0 + seenRow;\\n      d.sprite = sprite.slice(0, (d.y1 - d.y0) * w32);\\n    }\\n  }\\n\\n  // Use mask-based collision detection.\\n  function cloudCollide(tag, board, sw) {\\n    sw >>= 5;\\n    var sprite = tag.sprite,\\n        w = tag.width >> 5,\\n        lx = tag.x - (w << 4),\\n        sx = lx & 0x7f,\\n        msx = 32 - sx,\\n        h = tag.y1 - tag.y0,\\n        x = (tag.y + tag.y0) * sw + (lx >> 5),\\n        last;\\n    for (var j = 0; j < h; j++) {\\n      last = 0;\\n      for (var i = 0; i <= w; i++) {\\n        if (((last << msx) | (i < w ? (last = sprite[j * w + i]) >>> sx : 0))\\n            & board[x + i]) return true;\\n      }\\n      x += sw;\\n    }\\n    return false;\\n  }\\n\\n  function cloudBounds(bounds, d) {\\n    var b0 = bounds[0],\\n        b1 = bounds[1];\\n    if (d.x + d.x0 < b0.x) b0.x = d.x + d.x0;\\n    if (d.y + d.y0 < b0.y) b0.y = d.y + d.y0;\\n    if (d.x + d.x1 > b1.x) b1.x = d.x + d.x1;\\n    if (d.y + d.y1 > b1.y) b1.y = d.y + d.y1;\\n  }\\n\\n  function collideRects(a, b) {\\n    return a.x + a.x1 > b[0].x && a.x + a.x0 < b[1].x && a.y + a.y1 > b[0].y && a.y + a.y0 < b[1].y;\\n  }\\n\\n  function archimedeanSpiral(size) {\\n    var e = size[0] / size[1];\\n    return function(t) {\\n      return [e * (t *= .1) * Math.cos(t), t * Math.sin(t)];\\n    };\\n  }\\n\\n  function rectangularSpiral(size) {\\n    var dy = 4,\\n        dx = dy * size[0] / size[1],\\n        x = 0,\\n        y = 0;\\n    return function(t) {\\n      var sign = t < 0 ? -1 : 1;\\n      // See triangular numbers: T_n = n * (n + 1) / 2.\\n      switch ((Math.sqrt(1 + 4 * sign * t) - sign) & 3) {\\n        case 0:  x += dx; break;\\n        case 1:  y += dy; break;\\n        case 2:  x -= dx; break;\\n        default: y -= dy; break;\\n      }\\n      return [x, y];\\n    };\\n  }\\n\\n  // TODO reuse arrays?\\n  function zeroArray(n) {\\n    var a = [],\\n        i = -1;\\n    while (++i < n) a[i] = 0;\\n    return a;\\n  }\\n\\n  function functor(d) {\\n    return typeof d === 'function' ? d : function() { return d; };\\n  }\\n\\n  var spirals = {\\n    archimedean: archimedeanSpiral,\\n    rectangular: rectangularSpiral\\n  };\\n\\n  var Output = ['x', 'y', 'font', 'fontSize', 'fontStyle', 'fontWeight', 'angle'];\\n\\n  var Params = ['text', 'font', 'rotate', 'fontSize', 'fontStyle', 'fontWeight'];\\n\\n  function Wordcloud(params) {\\n    vegaDataflow.Transform.call(this, cloud(), params);\\n  }\\n\\n  Wordcloud.Definition = {\\n    'type': 'Wordcloud',\\n    'metadata': {'modifies': true},\\n    'params': [\\n      { 'name': 'size', 'type': 'number', 'array': true, 'length': 2 },\\n      { 'name': 'font', 'type': 'string', 'expr': true, 'default': 'sans-serif' },\\n      { 'name': 'fontStyle', 'type': 'string', 'expr': true, 'default': 'normal' },\\n      { 'name': 'fontWeight', 'type': 'string', 'expr': true, 'default': 'normal' },\\n      { 'name': 'fontSize', 'type': 'number', 'expr': true, 'default': 14 },\\n      { 'name': 'fontSizeRange', 'type': 'number', 'array': 'nullable', 'default': [10, 50] },\\n      { 'name': 'rotate', 'type': 'number', 'expr': true, 'default': 0 },\\n      { 'name': 'text', 'type': 'field' },\\n      { 'name': 'spiral', 'type': 'string', 'values': ['archimedean', 'rectangular'] },\\n      { 'name': 'padding', 'type': 'number', 'expr': true },\\n      { 'name': 'as', 'type': 'string', 'array': true, 'length': 7, 'default': Output }\\n    ]\\n  };\\n\\n  vegaUtil.inherits(Wordcloud, vegaDataflow.Transform, {\\n    transform(_, pulse) {\\n      if (_.size && !(_.size[0] && _.size[1])) {\\n        vegaUtil.error('Wordcloud size dimensions must be non-zero.');\\n      }\\n\\n      function modp(param) {\\n        var p = _[param];\\n        return vegaUtil.isFunction(p) && pulse.modified(p.fields);\\n      }\\n\\n      const mod = _.modified();\\n      if (!(mod || pulse.changed(pulse.ADD_REM) || Params.some(modp))) return;\\n\\n      const data = pulse.materialize(pulse.SOURCE).source,\\n            layout = this.value,\\n            as = _.as || Output;\\n\\n      let fontSize = _.fontSize || 14,\\n          range;\\n\\n      vegaUtil.isFunction(fontSize)\\n        ? (range = _.fontSizeRange)\\n        : (fontSize = vegaUtil.constant(fontSize));\\n\\n      // create font size scaling function as needed\\n      if (range) {\\n        const fsize = fontSize,\\n              sizeScale = vegaScale.scale('sqrt')()\\n                .domain(vegaUtil.extent(data, fsize))\\n                .range(range);\\n        fontSize = x => sizeScale(fsize(x));\\n      }\\n\\n      data.forEach(t => {\\n        t[as[0]] = NaN;\\n        t[as[1]] = NaN;\\n        t[as[3]] = 0;\\n      });\\n\\n      // configure layout\\n      const words = layout\\n        .words(data)\\n        .text(_.text)\\n        .size(_.size || [500, 500])\\n        .padding(_.padding || 1)\\n        .spiral(_.spiral || 'archimedean')\\n        .rotate(_.rotate || 0)\\n        .font(_.font || 'sans-serif')\\n        .fontStyle(_.fontStyle || 'normal')\\n        .fontWeight(_.fontWeight || 'normal')\\n        .fontSize(fontSize)\\n        .random(vegaStatistics.random)\\n        .layout();\\n\\n      const size = layout.size(),\\n          dx = size[0] >> 1,\\n          dy = size[1] >> 1,\\n          n = words.length;\\n\\n      for (let i = 0, w, t; i<n; ++i) {\\n        w = words[i];\\n        t = w.datum;\\n        t[as[0]] = w.x + dx;\\n        t[as[1]] = w.y + dy;\\n        t[as[2]] = w.font;\\n        t[as[3]] = w.size;\\n        t[as[4]] = w.style;\\n        t[as[5]] = w.weight;\\n        t[as[6]] = w.rotate;\\n      }\\n\\n      return pulse.reflow(mod).modifies(as);\\n    }\\n  });\\n\\n  exports.wordcloud = Wordcloud;\\n\\n  Object.defineProperty(exports, '__esModule', { value: true });\\n\\n})));\\n\\n};\"],\n\"names\":[\"shadow$provide\",\"global\",\"require\",\"module\",\"exports\",\"factory\",\"define\",\"amd\",\"globalThis\",\"self\",\"vega\",\"transforms\",\"vegaCanvas\",\"vegaDataflow\",\"vegaUtil\",\"vegaScale\",\"vegaStatistics\",\"cloud\",\"getContext\",\"canvas\",\"width\",\"height\",\"ratio\",\"Math\",\"sqrt\",\"getImageData\",\"data\",\"length\",\"ch\",\"context\",\"fillStyle\",\"strokeStyle\",\"textAlign\",\"place\",\"board\",\"tag\",\"bounds\",\"startX\",\"x\",\"startY\",\"y\",\"maxDelta\",\"size\",\"s\",\"spiral\",\"dt\",\"random\",\"t\",\"dxdy\",\"dx\",\"dy\",\"min\",\"abs\",\"x0\",\"y0\",\"x1\",\"y1\",\"sw\",\"sprite\",\"w\",\"lx\",\"sx\",\"msx\",\"h\",\"j\",\"i\",\"last\",\"text\",\"font\",\"fontSize\",\"fontStyle\",\"fontWeight\",\"rotate\",\"padding\",\"archimedeanSpiral\",\"words\",\"cloud.layout\",\"contextAndRatio\",\"zeroArray\",\"n\",\"tags\",\"map\",\"d\",\"style\",\"weight\",\"xoff\",\"yoff\",\"hasText\",\"datum\",\"sort\",\"a\",\"b\",\"cloudSprite\",\"push\",\"cloudBounds\",\"cloud.words\",\"_\",\"arguments\",\"cloud.size\",\"cloud.font\",\"functor\",\"cloud.fontStyle\",\"cloud.fontWeight\",\"cloud.rotate\",\"cloud.text\",\"cloud.spiral\",\"spirals\",\"cloud.fontSize\",\"cloud.padding\",\"cloud.random\",\"di\",\"c\",\"clearRect\",\"maxh\",\"save\",\"measureText\",\"sr\",\"sin\",\"cloudRadians\",\"cr\",\"cos\",\"wcr\",\"wsr\",\"hcr\",\"hsr\",\"max\",\"translate\",\"fillText\",\"lineWidth\",\"strokeText\",\"restore\",\"pixels\",\"w32\",\"seen\",\"seenRow\",\"m\",\"slice\",\"b0\",\"b1\",\"e\",\"Wordcloud\",\"params\",\"Transform\",\"call\",\"PI\",\"archimedean\",\"rectangular\",\"rectangularSpiral\",\"sign\",\"Output\",\"Params\",\"Definition\",\"inherits\",\"transform\",\"pulse\",\"modp\",\"param\",\"p\",\"isFunction\",\"modified\",\"fields\",\"error\",\"mod\",\"changed\",\"ADD_REM\",\"some\",\"materialize\",\"SOURCE\",\"source\",\"layout\",\"value\",\"as\",\"range\",\"fontSizeRange\",\"constant\",\"fsize\",\"sizeScale\",\"scale\",\"domain\",\"extent\",\"forEach\",\"NaN\",\"reflow\",\"modifies\",\"wordcloud\",\"Object\",\"defineProperty\"]\n}\n"]