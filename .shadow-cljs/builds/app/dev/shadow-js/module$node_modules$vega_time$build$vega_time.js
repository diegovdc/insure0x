["^ ","~:resource-id",["~:shadow.build.npm/resource","node_modules/vega-time/build/vega-time.js"],"~:js","shadow$provide.module$node_modules$vega_time$build$vega_time=function(global$jscomp$0,require,module,exports$jscomp$0){(function(global,factory){\"object\"===typeof exports$jscomp$0&&\"undefined\"!==typeof module?factory(exports$jscomp$0,require(\"module$node_modules$vega_util$build$vega_util\"),require(\"module$node_modules$d3_time$dist$d3_time\"),require(\"module$node_modules$d3_array$dist$d3_array\")):\"function\"===typeof define&&define.amd?define([\"exports\",\"vega-util\",\"d3-time\",\"d3-array\"],factory):(global=\n\"undefined\"!==typeof globalThis?globalThis:global||self,factory(global.vega={},global.vega,global.d3,global.d3))})(this,function(exports,vegaUtil,d3Time,d3Array){function timeUnits(units){var u=vegaUtil.array(units).slice(),m={};u.length||vegaUtil.error(\"Missing time unit.\");u.forEach(function(unit){vegaUtil.hasOwnProperty(UNITS,unit)?m[unit]=1:vegaUtil.error(\"Invalid time unit: \"+unit+\".\")});1<(m.week||m.day?1:0)+(m.quarter||m.month||m.date?1:0)+(m.dayofyear?1:0)&&vegaUtil.error(\"Incompatible time units: \"+\nunits);u.sort(function(a,b){return UNITS[a]-UNITS[b]});return u}function localYear(y){t0.setFullYear(y);t0.setMonth(0);t0.setDate(1);t0.setHours(0,0,0,0);return t0}function localDayOfYear(d){return d3Time.timeDay.count(localYear(d.getFullYear())-1,d)}function localWeekNum(d){return d3Time.timeWeek.count(localYear(d.getFullYear())-1,d)}function localDate(y,m,d,H,M,S,L){return 0<=y&&100>y?(m=new Date(-1,m,d,H,M,S,L),m.setFullYear(y),m):new Date(y,m,d,H,M,S,L)}function utcDayOfYear(d){var y=Date.UTC(d.getUTCFullYear(),\n0,1);return d3Time.utcDay.count(y-1,d)}function utcWeekNum(d){var y=Date.UTC(d.getUTCFullYear(),0,1);return d3Time.utcWeek.count(y-1,d)}function utcFirst(y){t0.setTime(Date.UTC(y,0,1));return t0.getUTCDay()}function utcDate(y,m,d,H,M,S,L){return 0<=y&&100>y?(y=new Date(Date.UTC(-1,m,d,H,M,S,L)),y.setUTCFullYear(d.y),y):new Date(Date.UTC(y,m,d,H,M,S,L))}function floor(units,step,get,inv,newDate){var s=step||1,b=vegaUtil.peek(units);step=function(unit,p,key){key=key||unit;return getUnit(get[key],inv[key],\nunit===b&&s,p)};var t=new Date;units=vegaUtil.toSet(units);var y=units.year?step(\"year\"):vegaUtil.constant(2012),m=units.month?step(\"month\"):units.quarter?step(\"quarter\"):vegaUtil.zero,d=units.week&&units.day?step(\"day\",1,\"weekday\"):units.week?step(\"week\",1):units.day?step(\"day\",1):units.date?step(\"date\",1):units.dayofyear?step(\"dayofyear\",1):vegaUtil.one,H=units.hours?step(\"hours\"):vegaUtil.zero,M=units.minutes?step(\"minutes\"):vegaUtil.zero,S=units.seconds?step(\"seconds\"):vegaUtil.zero,L=units.milliseconds?\nstep(\"milliseconds\"):vegaUtil.zero;return function(v){t.setTime(+v);v=y(t);return newDate(v,m(t),d(t,v),H(t),M(t),S(t),L(t))}}function getUnit(f,inv,step,phase){var u=1>=step?f:phase?function(d,y){return phase+step*Math.floor((f(d,y)-phase)/step)}:function(d,y){return step*Math.floor(f(d,y)/step)};return inv?function(d,y){return inv(u(d,y),y)}:u}function weekday(week,day,firstDay){return day+7*week-(firstDay+6)%7}var TIME_UNITS=\"year quarter month week date day dayofyear hours minutes seconds milliseconds\".split(\" \"),\nUNITS=TIME_UNITS.reduce(function(o,u,i){return o[u]=1+i,o},{}),$jscomp$compprop0={},defaultSpecifiers=($jscomp$compprop0.year=\"%Y \",$jscomp$compprop0.quarter=\"Q%q \",$jscomp$compprop0.month=\"%b \",$jscomp$compprop0.date=\"%d \",$jscomp$compprop0.week=\"W%U \",$jscomp$compprop0.day=\"%a \",$jscomp$compprop0.dayofyear=\"%j \",$jscomp$compprop0.hours=\"%H:00\",$jscomp$compprop0.minutes=\"00:%M\",$jscomp$compprop0.seconds=\":%S\",$jscomp$compprop0.milliseconds=\".%L\",$jscomp$compprop0[\"year-month\"]=\"%Y-%m \",$jscomp$compprop0[\"year-month-date\"]=\n\"%Y-%m-%d \",$jscomp$compprop0[\"hours-minutes\"]=\"%H:%M\",$jscomp$compprop0),t0=new Date;$jscomp$compprop0={};var localGet=($jscomp$compprop0.year=function(d){return d.getFullYear()},$jscomp$compprop0.quarter=function(d){return Math.floor(d.getMonth()/3)},$jscomp$compprop0.month=function(d){return d.getMonth()},$jscomp$compprop0.date=function(d){return d.getDate()},$jscomp$compprop0.hours=function(d){return d.getHours()},$jscomp$compprop0.minutes=function(d){return d.getMinutes()},$jscomp$compprop0.seconds=\nfunction(d){return d.getSeconds()},$jscomp$compprop0.milliseconds=function(d){return d.getMilliseconds()},$jscomp$compprop0.dayofyear=function(d){return localDayOfYear(d)},$jscomp$compprop0.week=function(d){return localWeekNum(d)},$jscomp$compprop0.weekday=function(d,y){return weekday(localWeekNum(d),d.getDay(),localYear(y).getDay())},$jscomp$compprop0.day=function(d,y){return weekday(1,d.getDay(),localYear(y).getDay())},$jscomp$compprop0);$jscomp$compprop0={};var localInv=($jscomp$compprop0.quarter=\nfunction(q){return 3*q},$jscomp$compprop0.week=function(w,y){return weekday(w,0,localYear(y).getDay())},$jscomp$compprop0);$jscomp$compprop0={};var utcGet=($jscomp$compprop0.year=function(d){return d.getUTCFullYear()},$jscomp$compprop0.quarter=function(d){return Math.floor(d.getUTCMonth()/3)},$jscomp$compprop0.month=function(d){return d.getUTCMonth()},$jscomp$compprop0.date=function(d){return d.getUTCDate()},$jscomp$compprop0.hours=function(d){return d.getUTCHours()},$jscomp$compprop0.minutes=function(d){return d.getUTCMinutes()},\n$jscomp$compprop0.seconds=function(d){return d.getUTCSeconds()},$jscomp$compprop0.milliseconds=function(d){return d.getUTCMilliseconds()},$jscomp$compprop0.dayofyear=function(d){return utcDayOfYear(d)},$jscomp$compprop0.week=function(d){return utcWeekNum(d)},$jscomp$compprop0.day=function(d,y){return weekday(1,d.getUTCDay(),utcFirst(y))},$jscomp$compprop0.weekday=function(d,y){return weekday(utcWeekNum(d),d.getUTCDay(),utcFirst(y))},$jscomp$compprop0);$jscomp$compprop0={};var utcInv=($jscomp$compprop0.quarter=\nfunction(q){return 3*q},$jscomp$compprop0.week=function(w,y){return weekday(w,0,utcFirst(y))},$jscomp$compprop0);$jscomp$compprop0={};var timeIntervals=($jscomp$compprop0.year=d3Time.timeYear,$jscomp$compprop0.quarter=d3Time.timeMonth.every(3),$jscomp$compprop0.month=d3Time.timeMonth,$jscomp$compprop0.week=d3Time.timeWeek,$jscomp$compprop0.date=d3Time.timeDay,$jscomp$compprop0.day=d3Time.timeDay,$jscomp$compprop0.dayofyear=d3Time.timeDay,$jscomp$compprop0.hours=d3Time.timeHour,$jscomp$compprop0.minutes=\nd3Time.timeMinute,$jscomp$compprop0.seconds=d3Time.timeSecond,$jscomp$compprop0.milliseconds=d3Time.timeMillisecond,$jscomp$compprop0);$jscomp$compprop0={};var utcIntervals=($jscomp$compprop0.year=d3Time.utcYear,$jscomp$compprop0.quarter=d3Time.utcMonth.every(3),$jscomp$compprop0.month=d3Time.utcMonth,$jscomp$compprop0.week=d3Time.utcWeek,$jscomp$compprop0.date=d3Time.utcDay,$jscomp$compprop0.day=d3Time.utcDay,$jscomp$compprop0.dayofyear=d3Time.utcDay,$jscomp$compprop0.hours=d3Time.utcHour,$jscomp$compprop0.minutes=\nd3Time.utcMinute,$jscomp$compprop0.seconds=d3Time.utcSecond,$jscomp$compprop0.milliseconds=d3Time.utcMillisecond,$jscomp$compprop0),Milli=\"year month date hours minutes seconds milliseconds\".split(\" \");$jscomp$compprop0=Milli.slice(0,-1);var Minutes=$jscomp$compprop0.slice(0,-1),Hours=Minutes.slice(0,-1),Day=Hours.slice(0,-1),Month=[\"year\",\"month\"],Year=[\"year\"],intervals=[[$jscomp$compprop0,1,1E3],[$jscomp$compprop0,5,5E3],[$jscomp$compprop0,15,15E3],[$jscomp$compprop0,30,3E4],[Minutes,1,6E4],[Minutes,\n5,3E5],[Minutes,15,9E5],[Minutes,30,18E5],[Hours,1,36E5],[Hours,3,108E5],[Hours,6,216E5],[Hours,12,432E5],[Day,1,864E5],[[\"year\",\"week\"],1,6048E5],[Month,1,2592E6],[Month,3,7776E6],[Year,1,31536E6]];exports.DATE=\"date\";exports.DAY=\"day\";exports.DAYOFYEAR=\"dayofyear\";exports.HOURS=\"hours\";exports.MILLISECONDS=\"milliseconds\";exports.MINUTES=\"minutes\";exports.MONTH=\"month\";exports.QUARTER=\"quarter\";exports.SECONDS=\"seconds\";exports.TIME_UNITS=TIME_UNITS;exports.WEEK=\"week\";exports.YEAR=\"year\";exports.dayofyear=\nfunction(d){return localDayOfYear(new Date(d))};exports.timeBin=function(opt){var ext=opt.extent;opt=opt.maxbins||40;var target=Math.abs(vegaUtil.span(ext))/opt,i$jscomp$0=d3Array.bisector(function(i){return i[2]}).right(intervals,target);i$jscomp$0===intervals.length?(target=Year,ext=d3Array.tickStep(ext[0]/31536E6,ext[1]/31536E6,opt)):i$jscomp$0?(i$jscomp$0=intervals[target/intervals[i$jscomp$0-1][2]<intervals[i$jscomp$0][2]/target?i$jscomp$0-1:i$jscomp$0],target=i$jscomp$0[0],ext=i$jscomp$0[1]):\n(target=Milli,ext=Math.max(d3Array.tickStep(ext[0],ext[1],opt),1));return{units:target,step:ext}};exports.timeFloor=function(units,step){return floor(units,step||1,localGet,localInv,localDate)};exports.timeInterval=function(unit){return timeIntervals[unit]};exports.timeOffset=function(unit,date,step){return(unit=timeIntervals[unit])?unit.offset(date,step):void 0};exports.timeSequence=function(unit,start,stop,step){return(unit=timeIntervals[unit])?unit.range(start,stop,step):void 0};exports.timeUnitSpecifier=\nfunction(units,specifiers){specifiers=vegaUtil.extend({},defaultSpecifiers,specifiers);units=timeUnits(units);var n=units.length,fmt=\"\",start,end;for(start=0;start<n;)for(end=units.length;end>start;--end){var key=units.slice(start,end).join(\"-\");if(null!=specifiers[key]){fmt+=specifiers[key];start=end;break}}return fmt.trim()};exports.timeUnits=timeUnits;exports.utcFloor=function(units,step){return floor(units,step||1,utcGet,utcInv,utcDate)};exports.utcInterval=function(unit){return utcIntervals[unit]};\nexports.utcOffset=function(unit,date,step){return(unit=utcIntervals[unit])?unit.offset(date,step):void 0};exports.utcSequence=function(unit,start,stop,step){return(unit=utcIntervals[unit])?unit.range(start,stop,step):void 0};exports.utcdayofyear=function(d){return utcDayOfYear(new Date(d))};exports.utcweek=function(d){return utcWeekNum(new Date(d))};exports.week=function(d){return localWeekNum(new Date(d))};Object.defineProperty(exports,\"__esModule\",{value:!0})})}","~:source","shadow$provide[\"module$node_modules$vega_time$build$vega_time\"] = function(global,require,module,exports) {\n(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('vega-util'), require('d3-time'), require('d3-array')) :\n  typeof define === 'function' && define.amd ? define(['exports', 'vega-util', 'd3-time', 'd3-array'], factory) :\n  (global = typeof globalThis !== 'undefined' ? globalThis : global || self, factory(global.vega = {}, global.vega, global.d3, global.d3));\n}(this, (function (exports, vegaUtil, d3Time, d3Array) { 'use strict';\n\n  const YEAR = 'year';\n  const QUARTER = 'quarter';\n  const MONTH = 'month';\n  const WEEK = 'week';\n  const DATE = 'date';\n  const DAY = 'day';\n  const DAYOFYEAR = 'dayofyear';\n  const HOURS = 'hours';\n  const MINUTES = 'minutes';\n  const SECONDS = 'seconds';\n  const MILLISECONDS = 'milliseconds';\n\n  const TIME_UNITS = [\n    YEAR,\n    QUARTER,\n    MONTH,\n    WEEK,\n    DATE,\n    DAY,\n    DAYOFYEAR,\n    HOURS,\n    MINUTES,\n    SECONDS,\n    MILLISECONDS\n  ];\n\n  const UNITS = TIME_UNITS.reduce((o, u, i) => (o[u] = 1 + i, o), {});\n\n  function timeUnits(units) {\n    const u = vegaUtil.array(units).slice(),\n          m = {};\n\n    // check validity\n    if (!u.length) vegaUtil.error('Missing time unit.');\n\n    u.forEach(unit => {\n      if (vegaUtil.hasOwnProperty(UNITS, unit)) {\n        m[unit] = 1;\n      } else {\n        vegaUtil.error(`Invalid time unit: ${unit}.`);\n      }\n    });\n\n    const numTypes = (\n      (m[WEEK] || m[DAY] ? 1 : 0) +\n      (m[QUARTER] || m[MONTH] || m[DATE] ? 1 : 0) +\n      (m[DAYOFYEAR] ? 1 : 0)\n    );\n\n    if (numTypes > 1) {\n      vegaUtil.error(`Incompatible time units: ${units}`);\n    }\n\n    // ensure proper sort order\n    u.sort((a, b) => UNITS[a] - UNITS[b]);\n\n    return u;\n  }\n\n  const defaultSpecifiers = {\n    [YEAR]: '%Y ',\n    [QUARTER]: 'Q%q ',\n    [MONTH]: '%b ',\n    [DATE]: '%d ',\n    [WEEK]: 'W%U ',\n    [DAY]: '%a ',\n    [DAYOFYEAR]: '%j ',\n    [HOURS]: '%H:00',\n    [MINUTES]: '00:%M',\n    [SECONDS]: ':%S',\n    [MILLISECONDS]: '.%L',\n    [`${YEAR}-${MONTH}`]: '%Y-%m ',\n    [`${YEAR}-${MONTH}-${DATE}`]: '%Y-%m-%d ',\n    [`${HOURS}-${MINUTES}`]: '%H:%M'\n  };\n\n  function timeUnitSpecifier(units, specifiers) {\n    const s = vegaUtil.extend({}, defaultSpecifiers, specifiers),\n          u = timeUnits(units),\n          n = u.length;\n\n    let fmt = '', start = 0, end, key;\n\n    for (start=0; start<n; ) {\n      for (end=u.length; end > start; --end) {\n        key = u.slice(start, end).join('-');\n        if (s[key] != null) {\n          fmt += s[key];\n          start = end;\n          break;\n        }\n      }\n    }\n\n    return fmt.trim();\n  }\n\n  const t0 = new Date;\n\n  function localYear(y) {\n    t0.setFullYear(y);\n    t0.setMonth(0);\n    t0.setDate(1);\n    t0.setHours(0, 0, 0, 0);\n    return t0;\n  }\n\n  function dayofyear(d) {\n    return localDayOfYear(new Date(d));\n  }\n\n  function week(d) {\n    return localWeekNum(new Date(d));\n  }\n\n  function localDayOfYear(d) {\n    return d3Time.timeDay.count(localYear(d.getFullYear()) - 1, d);\n  }\n\n  function localWeekNum(d) {\n    return d3Time.timeWeek.count(localYear(d.getFullYear()) - 1, d);\n  }\n\n  function localFirst(y) {\n    return localYear(y).getDay();\n  }\n\n  function localDate(y, m, d, H, M, S, L) {\n    if (0 <= y && y < 100) {\n      const date = new Date(-1, m, d, H, M, S, L);\n      date.setFullYear(y);\n      return date;\n    }\n    return new Date(y, m, d, H, M, S, L);\n  }\n\n  function utcdayofyear(d) {\n    return utcDayOfYear(new Date(d));\n  }\n\n  function utcweek(d) {\n    return utcWeekNum(new Date(d));\n  }\n\n  function utcDayOfYear(d) {\n    const y = Date.UTC(d.getUTCFullYear(), 0, 1);\n    return d3Time.utcDay.count(y - 1, d);\n  }\n\n  function utcWeekNum(d) {\n    const y = Date.UTC(d.getUTCFullYear(), 0, 1);\n    return d3Time.utcWeek.count(y - 1, d);\n  }\n\n  function utcFirst(y) {\n    t0.setTime(Date.UTC(y, 0, 1));\n    return t0.getUTCDay();\n  }\n\n  function utcDate(y, m, d, H, M, S, L) {\n    if (0 <= y && y < 100) {\n      const date = new Date(Date.UTC(-1, m, d, H, M, S, L));\n      date.setUTCFullYear(d.y);\n      return date;\n    }\n    return new Date(Date.UTC(y, m, d, H, M, S, L));\n  }\n\n  function floor(units, step, get, inv, newDate) {\n    const s = step || 1,\n          b = vegaUtil.peek(units),\n          _ = (unit, p, key) => {\n            key = key || unit;\n            return getUnit(get[key], inv[key], unit === b && s, p);\n          };\n\n    const t = new Date,\n          u = vegaUtil.toSet(units),\n          y = u[YEAR] ? _(YEAR) : vegaUtil.constant(2012),\n          m = u[MONTH] ? _(MONTH)\n            : u[QUARTER] ? _(QUARTER)\n            : vegaUtil.zero,\n          d = u[WEEK] && u[DAY] ? _(DAY, 1, WEEK + DAY)\n            : u[WEEK] ? _(WEEK, 1)\n            : u[DAY] ? _(DAY, 1)\n            : u[DATE] ? _(DATE, 1)\n            : u[DAYOFYEAR] ? _(DAYOFYEAR, 1)\n            : vegaUtil.one,\n          H = u[HOURS] ? _(HOURS) : vegaUtil.zero,\n          M = u[MINUTES] ? _(MINUTES) : vegaUtil.zero,\n          S = u[SECONDS] ? _(SECONDS) : vegaUtil.zero,\n          L = u[MILLISECONDS] ? _(MILLISECONDS) : vegaUtil.zero;\n\n    return function(v) {\n      t.setTime(+v);\n      const year = y(t);\n      return newDate(year, m(t), d(t, year), H(t), M(t), S(t), L(t));\n    };\n  }\n\n  function getUnit(f, inv, step, phase) {\n    const u = step <= 1 ? f\n      : phase ? (d, y) => phase + step * Math.floor((f(d, y) - phase) / step)\n      : (d, y) => step * Math.floor(f(d, y) / step);\n    return inv ? (d, y) => inv(u(d, y), y) : u;\n  }\n\n  // returns the day of the year based on week number, day of week,\n  // and the day of the week for the first day of the year\n  function weekday(week, day, firstDay) {\n    return day + week * 7 - (firstDay + 6) % 7;\n  }\n\n  // -- LOCAL TIME --\n\n  const localGet = {\n    [YEAR]:         d => d.getFullYear(),\n    [QUARTER]:      d => Math.floor(d.getMonth() / 3),\n    [MONTH]:        d => d.getMonth(),\n    [DATE]:         d => d.getDate(),\n    [HOURS]:        d => d.getHours(),\n    [MINUTES]:      d => d.getMinutes(),\n    [SECONDS]:      d => d.getSeconds(),\n    [MILLISECONDS]: d => d.getMilliseconds(),\n    [DAYOFYEAR]:    d => localDayOfYear(d),\n    [WEEK]:         d => localWeekNum(d),\n    [WEEK + DAY]:   (d, y) => weekday(localWeekNum(d), d.getDay(), localFirst(y)),\n    [DAY]:          (d, y) => weekday(1, d.getDay(), localFirst(y))\n  };\n\n  const localInv = {\n    [QUARTER]: q => 3 * q,\n    [WEEK]:    (w, y) => weekday(w, 0, localFirst(y))\n  };\n\n  function timeFloor(units, step) {\n    return floor(units, step || 1, localGet, localInv, localDate);\n  }\n\n  // -- UTC TIME --\n\n  const utcGet = {\n    [YEAR]:         d => d.getUTCFullYear(),\n    [QUARTER]:      d => Math.floor(d.getUTCMonth() / 3),\n    [MONTH]:        d => d.getUTCMonth(),\n    [DATE]:         d => d.getUTCDate(),\n    [HOURS]:        d => d.getUTCHours(),\n    [MINUTES]:      d => d.getUTCMinutes(),\n    [SECONDS]:      d => d.getUTCSeconds(),\n    [MILLISECONDS]: d => d.getUTCMilliseconds(),\n    [DAYOFYEAR]:    d => utcDayOfYear(d),\n    [WEEK]:         d => utcWeekNum(d),\n    [DAY]:          (d, y) => weekday(1, d.getUTCDay(), utcFirst(y)),\n    [WEEK + DAY]:   (d, y) => weekday(utcWeekNum(d), d.getUTCDay(), utcFirst(y))\n  };\n\n  const utcInv = {\n    [QUARTER]: q => 3 * q,\n    [WEEK]:    (w, y) => weekday(w, 0, utcFirst(y))\n  };\n\n  function utcFloor(units, step) {\n    return floor(units, step || 1, utcGet, utcInv, utcDate);\n  }\n\n  const timeIntervals = {\n    [YEAR]:         d3Time.timeYear,\n    [QUARTER]:      d3Time.timeMonth.every(3),\n    [MONTH]:        d3Time.timeMonth,\n    [WEEK]:         d3Time.timeWeek,\n    [DATE]:         d3Time.timeDay,\n    [DAY]:          d3Time.timeDay,\n    [DAYOFYEAR]:    d3Time.timeDay,\n    [HOURS]:        d3Time.timeHour,\n    [MINUTES]:      d3Time.timeMinute,\n    [SECONDS]:      d3Time.timeSecond,\n    [MILLISECONDS]: d3Time.timeMillisecond\n  };\n\n  const utcIntervals = {\n    [YEAR]:         d3Time.utcYear,\n    [QUARTER]:      d3Time.utcMonth.every(3),\n    [MONTH]:        d3Time.utcMonth,\n    [WEEK]:         d3Time.utcWeek,\n    [DATE]:         d3Time.utcDay,\n    [DAY]:          d3Time.utcDay,\n    [DAYOFYEAR]:    d3Time.utcDay,\n    [HOURS]:        d3Time.utcHour,\n    [MINUTES]:      d3Time.utcMinute,\n    [SECONDS]:      d3Time.utcSecond,\n    [MILLISECONDS]: d3Time.utcMillisecond\n  };\n\n  function timeInterval(unit) {\n    return timeIntervals[unit];\n  }\n\n  function utcInterval(unit) {\n    return utcIntervals[unit];\n  }\n\n  function offset(ival, date, step) {\n    return ival ? ival.offset(date, step) : undefined;\n  }\n\n  function timeOffset(unit, date, step) {\n    return offset(timeInterval(unit), date, step);\n  }\n\n  function utcOffset(unit, date, step) {\n    return offset(utcInterval(unit), date, step);\n  }\n\n  function sequence(ival, start, stop, step) {\n    return ival ? ival.range(start, stop, step) : undefined;\n  }\n\n  function timeSequence(unit, start, stop, step) {\n    return sequence(timeInterval(unit), start, stop, step);\n  }\n\n  function utcSequence(unit, start, stop, step) {\n    return sequence(utcInterval(unit), start, stop, step);\n  }\n\n  const durationSecond = 1000,\n        durationMinute = durationSecond * 60,\n        durationHour = durationMinute * 60,\n        durationDay = durationHour * 24,\n        durationWeek = durationDay * 7,\n        durationMonth = durationDay * 30,\n        durationYear = durationDay * 365;\n\n  const Milli   = [YEAR, MONTH, DATE, HOURS, MINUTES, SECONDS, MILLISECONDS],\n        Seconds = Milli.slice(0, -1),\n        Minutes = Seconds.slice(0, -1),\n        Hours   = Minutes.slice(0, -1),\n        Day     = Hours.slice(0, -1),\n        Week    = [YEAR, WEEK],\n        Month   = [YEAR, MONTH],\n        Year    = [YEAR];\n\n  const intervals = [\n    [Seconds,  1,      durationSecond],\n    [Seconds,  5,  5 * durationSecond],\n    [Seconds, 15, 15 * durationSecond],\n    [Seconds, 30, 30 * durationSecond],\n    [Minutes,  1,      durationMinute],\n    [Minutes,  5,  5 * durationMinute],\n    [Minutes, 15, 15 * durationMinute],\n    [Minutes, 30, 30 * durationMinute],\n    [  Hours,  1,      durationHour  ],\n    [  Hours,  3,  3 * durationHour  ],\n    [  Hours,  6,  6 * durationHour  ],\n    [  Hours, 12, 12 * durationHour  ],\n    [    Day,  1,      durationDay   ],\n    [   Week,  1,      durationWeek  ],\n    [  Month,  1,      durationMonth ],\n    [  Month,  3,  3 * durationMonth ],\n    [   Year,  1,      durationYear  ]\n  ];\n\n  function bin(opt) {\n    const ext = opt.extent,\n          max = opt.maxbins || 40,\n          target = Math.abs(vegaUtil.span(ext)) / max;\n\n    let i = d3Array.bisector(i => i[2]).right(intervals, target),\n        units, step;\n\n    if (i === intervals.length) {\n      units = Year,\n      step = d3Array.tickStep(ext[0] / durationYear, ext[1] / durationYear, max);\n    } else if (i) {\n      i = intervals[target / intervals[i - 1][2] < intervals[i][2] / target ? i - 1 : i];\n      units = i[0];\n      step = i[1];\n    } else {\n      units = Milli;\n      step = Math.max(d3Array.tickStep(ext[0], ext[1], max), 1);\n    }\n\n    return {units, step};\n  }\n\n  exports.DATE = DATE;\n  exports.DAY = DAY;\n  exports.DAYOFYEAR = DAYOFYEAR;\n  exports.HOURS = HOURS;\n  exports.MILLISECONDS = MILLISECONDS;\n  exports.MINUTES = MINUTES;\n  exports.MONTH = MONTH;\n  exports.QUARTER = QUARTER;\n  exports.SECONDS = SECONDS;\n  exports.TIME_UNITS = TIME_UNITS;\n  exports.WEEK = WEEK;\n  exports.YEAR = YEAR;\n  exports.dayofyear = dayofyear;\n  exports.timeBin = bin;\n  exports.timeFloor = timeFloor;\n  exports.timeInterval = timeInterval;\n  exports.timeOffset = timeOffset;\n  exports.timeSequence = timeSequence;\n  exports.timeUnitSpecifier = timeUnitSpecifier;\n  exports.timeUnits = timeUnits;\n  exports.utcFloor = utcFloor;\n  exports.utcInterval = utcInterval;\n  exports.utcOffset = utcOffset;\n  exports.utcSequence = utcSequence;\n  exports.utcdayofyear = utcdayofyear;\n  exports.utcweek = utcweek;\n  exports.week = week;\n\n  Object.defineProperty(exports, '__esModule', { value: true });\n\n})));\n\n};","~:removed-requires",["~#set",[]],"~:actual-requires",["^5",["~$module$node_modules$d3_time$dist$d3_time","~$shadow.js","~$module$node_modules$vega_util$build$vega_util","~$module$node_modules$d3_array$dist$d3_array"]],"~:properties",["^5",["timeInterval","WEEK","YEAR","dayofyear","MONTH","timeBin","MINUTES","utcFloor","timeUnitSpecifier","timeFloor","SECONDS","DATE","__esModule","timeSequence","vega","QUARTER","value","HOURS","timeUnits","utcSequence","week","units","utcdayofyear","TIME_UNITS","utcOffset","DAYOFYEAR","DAY","utcweek","MILLISECONDS","utcInterval","timeOffset","step"]],"~:compiled-at",1600144479774,"~:source-map-json","{\n\"version\":3,\n\"file\":\"module$node_modules$vega_time$build$vega_time.js\",\n\"lineCount\":19,\n\"mappings\":\"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\",\n\"sources\":[\"node_modules/vega-time/build/vega-time.js\"],\n\"sourcesContent\":[\"shadow$provide[\\\"module$node_modules$vega_time$build$vega_time\\\"] = function(global,require,module,exports) {\\n(function (global, factory) {\\n  typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('vega-util'), require('d3-time'), require('d3-array')) :\\n  typeof define === 'function' && define.amd ? define(['exports', 'vega-util', 'd3-time', 'd3-array'], factory) :\\n  (global = typeof globalThis !== 'undefined' ? globalThis : global || self, factory(global.vega = {}, global.vega, global.d3, global.d3));\\n}(this, (function (exports, vegaUtil, d3Time, d3Array) { 'use strict';\\n\\n  const YEAR = 'year';\\n  const QUARTER = 'quarter';\\n  const MONTH = 'month';\\n  const WEEK = 'week';\\n  const DATE = 'date';\\n  const DAY = 'day';\\n  const DAYOFYEAR = 'dayofyear';\\n  const HOURS = 'hours';\\n  const MINUTES = 'minutes';\\n  const SECONDS = 'seconds';\\n  const MILLISECONDS = 'milliseconds';\\n\\n  const TIME_UNITS = [\\n    YEAR,\\n    QUARTER,\\n    MONTH,\\n    WEEK,\\n    DATE,\\n    DAY,\\n    DAYOFYEAR,\\n    HOURS,\\n    MINUTES,\\n    SECONDS,\\n    MILLISECONDS\\n  ];\\n\\n  const UNITS = TIME_UNITS.reduce((o, u, i) => (o[u] = 1 + i, o), {});\\n\\n  function timeUnits(units) {\\n    const u = vegaUtil.array(units).slice(),\\n          m = {};\\n\\n    // check validity\\n    if (!u.length) vegaUtil.error('Missing time unit.');\\n\\n    u.forEach(unit => {\\n      if (vegaUtil.hasOwnProperty(UNITS, unit)) {\\n        m[unit] = 1;\\n      } else {\\n        vegaUtil.error(`Invalid time unit: ${unit}.`);\\n      }\\n    });\\n\\n    const numTypes = (\\n      (m[WEEK] || m[DAY] ? 1 : 0) +\\n      (m[QUARTER] || m[MONTH] || m[DATE] ? 1 : 0) +\\n      (m[DAYOFYEAR] ? 1 : 0)\\n    );\\n\\n    if (numTypes > 1) {\\n      vegaUtil.error(`Incompatible time units: ${units}`);\\n    }\\n\\n    // ensure proper sort order\\n    u.sort((a, b) => UNITS[a] - UNITS[b]);\\n\\n    return u;\\n  }\\n\\n  const defaultSpecifiers = {\\n    [YEAR]: '%Y ',\\n    [QUARTER]: 'Q%q ',\\n    [MONTH]: '%b ',\\n    [DATE]: '%d ',\\n    [WEEK]: 'W%U ',\\n    [DAY]: '%a ',\\n    [DAYOFYEAR]: '%j ',\\n    [HOURS]: '%H:00',\\n    [MINUTES]: '00:%M',\\n    [SECONDS]: ':%S',\\n    [MILLISECONDS]: '.%L',\\n    [`${YEAR}-${MONTH}`]: '%Y-%m ',\\n    [`${YEAR}-${MONTH}-${DATE}`]: '%Y-%m-%d ',\\n    [`${HOURS}-${MINUTES}`]: '%H:%M'\\n  };\\n\\n  function timeUnitSpecifier(units, specifiers) {\\n    const s = vegaUtil.extend({}, defaultSpecifiers, specifiers),\\n          u = timeUnits(units),\\n          n = u.length;\\n\\n    let fmt = '', start = 0, end, key;\\n\\n    for (start=0; start<n; ) {\\n      for (end=u.length; end > start; --end) {\\n        key = u.slice(start, end).join('-');\\n        if (s[key] != null) {\\n          fmt += s[key];\\n          start = end;\\n          break;\\n        }\\n      }\\n    }\\n\\n    return fmt.trim();\\n  }\\n\\n  const t0 = new Date;\\n\\n  function localYear(y) {\\n    t0.setFullYear(y);\\n    t0.setMonth(0);\\n    t0.setDate(1);\\n    t0.setHours(0, 0, 0, 0);\\n    return t0;\\n  }\\n\\n  function dayofyear(d) {\\n    return localDayOfYear(new Date(d));\\n  }\\n\\n  function week(d) {\\n    return localWeekNum(new Date(d));\\n  }\\n\\n  function localDayOfYear(d) {\\n    return d3Time.timeDay.count(localYear(d.getFullYear()) - 1, d);\\n  }\\n\\n  function localWeekNum(d) {\\n    return d3Time.timeWeek.count(localYear(d.getFullYear()) - 1, d);\\n  }\\n\\n  function localFirst(y) {\\n    return localYear(y).getDay();\\n  }\\n\\n  function localDate(y, m, d, H, M, S, L) {\\n    if (0 <= y && y < 100) {\\n      const date = new Date(-1, m, d, H, M, S, L);\\n      date.setFullYear(y);\\n      return date;\\n    }\\n    return new Date(y, m, d, H, M, S, L);\\n  }\\n\\n  function utcdayofyear(d) {\\n    return utcDayOfYear(new Date(d));\\n  }\\n\\n  function utcweek(d) {\\n    return utcWeekNum(new Date(d));\\n  }\\n\\n  function utcDayOfYear(d) {\\n    const y = Date.UTC(d.getUTCFullYear(), 0, 1);\\n    return d3Time.utcDay.count(y - 1, d);\\n  }\\n\\n  function utcWeekNum(d) {\\n    const y = Date.UTC(d.getUTCFullYear(), 0, 1);\\n    return d3Time.utcWeek.count(y - 1, d);\\n  }\\n\\n  function utcFirst(y) {\\n    t0.setTime(Date.UTC(y, 0, 1));\\n    return t0.getUTCDay();\\n  }\\n\\n  function utcDate(y, m, d, H, M, S, L) {\\n    if (0 <= y && y < 100) {\\n      const date = new Date(Date.UTC(-1, m, d, H, M, S, L));\\n      date.setUTCFullYear(d.y);\\n      return date;\\n    }\\n    return new Date(Date.UTC(y, m, d, H, M, S, L));\\n  }\\n\\n  function floor(units, step, get, inv, newDate) {\\n    const s = step || 1,\\n          b = vegaUtil.peek(units),\\n          _ = (unit, p, key) => {\\n            key = key || unit;\\n            return getUnit(get[key], inv[key], unit === b && s, p);\\n          };\\n\\n    const t = new Date,\\n          u = vegaUtil.toSet(units),\\n          y = u[YEAR] ? _(YEAR) : vegaUtil.constant(2012),\\n          m = u[MONTH] ? _(MONTH)\\n            : u[QUARTER] ? _(QUARTER)\\n            : vegaUtil.zero,\\n          d = u[WEEK] && u[DAY] ? _(DAY, 1, WEEK + DAY)\\n            : u[WEEK] ? _(WEEK, 1)\\n            : u[DAY] ? _(DAY, 1)\\n            : u[DATE] ? _(DATE, 1)\\n            : u[DAYOFYEAR] ? _(DAYOFYEAR, 1)\\n            : vegaUtil.one,\\n          H = u[HOURS] ? _(HOURS) : vegaUtil.zero,\\n          M = u[MINUTES] ? _(MINUTES) : vegaUtil.zero,\\n          S = u[SECONDS] ? _(SECONDS) : vegaUtil.zero,\\n          L = u[MILLISECONDS] ? _(MILLISECONDS) : vegaUtil.zero;\\n\\n    return function(v) {\\n      t.setTime(+v);\\n      const year = y(t);\\n      return newDate(year, m(t), d(t, year), H(t), M(t), S(t), L(t));\\n    };\\n  }\\n\\n  function getUnit(f, inv, step, phase) {\\n    const u = step <= 1 ? f\\n      : phase ? (d, y) => phase + step * Math.floor((f(d, y) - phase) / step)\\n      : (d, y) => step * Math.floor(f(d, y) / step);\\n    return inv ? (d, y) => inv(u(d, y), y) : u;\\n  }\\n\\n  // returns the day of the year based on week number, day of week,\\n  // and the day of the week for the first day of the year\\n  function weekday(week, day, firstDay) {\\n    return day + week * 7 - (firstDay + 6) % 7;\\n  }\\n\\n  // -- LOCAL TIME --\\n\\n  const localGet = {\\n    [YEAR]:         d => d.getFullYear(),\\n    [QUARTER]:      d => Math.floor(d.getMonth() / 3),\\n    [MONTH]:        d => d.getMonth(),\\n    [DATE]:         d => d.getDate(),\\n    [HOURS]:        d => d.getHours(),\\n    [MINUTES]:      d => d.getMinutes(),\\n    [SECONDS]:      d => d.getSeconds(),\\n    [MILLISECONDS]: d => d.getMilliseconds(),\\n    [DAYOFYEAR]:    d => localDayOfYear(d),\\n    [WEEK]:         d => localWeekNum(d),\\n    [WEEK + DAY]:   (d, y) => weekday(localWeekNum(d), d.getDay(), localFirst(y)),\\n    [DAY]:          (d, y) => weekday(1, d.getDay(), localFirst(y))\\n  };\\n\\n  const localInv = {\\n    [QUARTER]: q => 3 * q,\\n    [WEEK]:    (w, y) => weekday(w, 0, localFirst(y))\\n  };\\n\\n  function timeFloor(units, step) {\\n    return floor(units, step || 1, localGet, localInv, localDate);\\n  }\\n\\n  // -- UTC TIME --\\n\\n  const utcGet = {\\n    [YEAR]:         d => d.getUTCFullYear(),\\n    [QUARTER]:      d => Math.floor(d.getUTCMonth() / 3),\\n    [MONTH]:        d => d.getUTCMonth(),\\n    [DATE]:         d => d.getUTCDate(),\\n    [HOURS]:        d => d.getUTCHours(),\\n    [MINUTES]:      d => d.getUTCMinutes(),\\n    [SECONDS]:      d => d.getUTCSeconds(),\\n    [MILLISECONDS]: d => d.getUTCMilliseconds(),\\n    [DAYOFYEAR]:    d => utcDayOfYear(d),\\n    [WEEK]:         d => utcWeekNum(d),\\n    [DAY]:          (d, y) => weekday(1, d.getUTCDay(), utcFirst(y)),\\n    [WEEK + DAY]:   (d, y) => weekday(utcWeekNum(d), d.getUTCDay(), utcFirst(y))\\n  };\\n\\n  const utcInv = {\\n    [QUARTER]: q => 3 * q,\\n    [WEEK]:    (w, y) => weekday(w, 0, utcFirst(y))\\n  };\\n\\n  function utcFloor(units, step) {\\n    return floor(units, step || 1, utcGet, utcInv, utcDate);\\n  }\\n\\n  const timeIntervals = {\\n    [YEAR]:         d3Time.timeYear,\\n    [QUARTER]:      d3Time.timeMonth.every(3),\\n    [MONTH]:        d3Time.timeMonth,\\n    [WEEK]:         d3Time.timeWeek,\\n    [DATE]:         d3Time.timeDay,\\n    [DAY]:          d3Time.timeDay,\\n    [DAYOFYEAR]:    d3Time.timeDay,\\n    [HOURS]:        d3Time.timeHour,\\n    [MINUTES]:      d3Time.timeMinute,\\n    [SECONDS]:      d3Time.timeSecond,\\n    [MILLISECONDS]: d3Time.timeMillisecond\\n  };\\n\\n  const utcIntervals = {\\n    [YEAR]:         d3Time.utcYear,\\n    [QUARTER]:      d3Time.utcMonth.every(3),\\n    [MONTH]:        d3Time.utcMonth,\\n    [WEEK]:         d3Time.utcWeek,\\n    [DATE]:         d3Time.utcDay,\\n    [DAY]:          d3Time.utcDay,\\n    [DAYOFYEAR]:    d3Time.utcDay,\\n    [HOURS]:        d3Time.utcHour,\\n    [MINUTES]:      d3Time.utcMinute,\\n    [SECONDS]:      d3Time.utcSecond,\\n    [MILLISECONDS]: d3Time.utcMillisecond\\n  };\\n\\n  function timeInterval(unit) {\\n    return timeIntervals[unit];\\n  }\\n\\n  function utcInterval(unit) {\\n    return utcIntervals[unit];\\n  }\\n\\n  function offset(ival, date, step) {\\n    return ival ? ival.offset(date, step) : undefined;\\n  }\\n\\n  function timeOffset(unit, date, step) {\\n    return offset(timeInterval(unit), date, step);\\n  }\\n\\n  function utcOffset(unit, date, step) {\\n    return offset(utcInterval(unit), date, step);\\n  }\\n\\n  function sequence(ival, start, stop, step) {\\n    return ival ? ival.range(start, stop, step) : undefined;\\n  }\\n\\n  function timeSequence(unit, start, stop, step) {\\n    return sequence(timeInterval(unit), start, stop, step);\\n  }\\n\\n  function utcSequence(unit, start, stop, step) {\\n    return sequence(utcInterval(unit), start, stop, step);\\n  }\\n\\n  const durationSecond = 1000,\\n        durationMinute = durationSecond * 60,\\n        durationHour = durationMinute * 60,\\n        durationDay = durationHour * 24,\\n        durationWeek = durationDay * 7,\\n        durationMonth = durationDay * 30,\\n        durationYear = durationDay * 365;\\n\\n  const Milli   = [YEAR, MONTH, DATE, HOURS, MINUTES, SECONDS, MILLISECONDS],\\n        Seconds = Milli.slice(0, -1),\\n        Minutes = Seconds.slice(0, -1),\\n        Hours   = Minutes.slice(0, -1),\\n        Day     = Hours.slice(0, -1),\\n        Week    = [YEAR, WEEK],\\n        Month   = [YEAR, MONTH],\\n        Year    = [YEAR];\\n\\n  const intervals = [\\n    [Seconds,  1,      durationSecond],\\n    [Seconds,  5,  5 * durationSecond],\\n    [Seconds, 15, 15 * durationSecond],\\n    [Seconds, 30, 30 * durationSecond],\\n    [Minutes,  1,      durationMinute],\\n    [Minutes,  5,  5 * durationMinute],\\n    [Minutes, 15, 15 * durationMinute],\\n    [Minutes, 30, 30 * durationMinute],\\n    [  Hours,  1,      durationHour  ],\\n    [  Hours,  3,  3 * durationHour  ],\\n    [  Hours,  6,  6 * durationHour  ],\\n    [  Hours, 12, 12 * durationHour  ],\\n    [    Day,  1,      durationDay   ],\\n    [   Week,  1,      durationWeek  ],\\n    [  Month,  1,      durationMonth ],\\n    [  Month,  3,  3 * durationMonth ],\\n    [   Year,  1,      durationYear  ]\\n  ];\\n\\n  function bin(opt) {\\n    const ext = opt.extent,\\n          max = opt.maxbins || 40,\\n          target = Math.abs(vegaUtil.span(ext)) / max;\\n\\n    let i = d3Array.bisector(i => i[2]).right(intervals, target),\\n        units, step;\\n\\n    if (i === intervals.length) {\\n      units = Year,\\n      step = d3Array.tickStep(ext[0] / durationYear, ext[1] / durationYear, max);\\n    } else if (i) {\\n      i = intervals[target / intervals[i - 1][2] < intervals[i][2] / target ? i - 1 : i];\\n      units = i[0];\\n      step = i[1];\\n    } else {\\n      units = Milli;\\n      step = Math.max(d3Array.tickStep(ext[0], ext[1], max), 1);\\n    }\\n\\n    return {units, step};\\n  }\\n\\n  exports.DATE = DATE;\\n  exports.DAY = DAY;\\n  exports.DAYOFYEAR = DAYOFYEAR;\\n  exports.HOURS = HOURS;\\n  exports.MILLISECONDS = MILLISECONDS;\\n  exports.MINUTES = MINUTES;\\n  exports.MONTH = MONTH;\\n  exports.QUARTER = QUARTER;\\n  exports.SECONDS = SECONDS;\\n  exports.TIME_UNITS = TIME_UNITS;\\n  exports.WEEK = WEEK;\\n  exports.YEAR = YEAR;\\n  exports.dayofyear = dayofyear;\\n  exports.timeBin = bin;\\n  exports.timeFloor = timeFloor;\\n  exports.timeInterval = timeInterval;\\n  exports.timeOffset = timeOffset;\\n  exports.timeSequence = timeSequence;\\n  exports.timeUnitSpecifier = timeUnitSpecifier;\\n  exports.timeUnits = timeUnits;\\n  exports.utcFloor = utcFloor;\\n  exports.utcInterval = utcInterval;\\n  exports.utcOffset = utcOffset;\\n  exports.utcSequence = utcSequence;\\n  exports.utcdayofyear = utcdayofyear;\\n  exports.utcweek = utcweek;\\n  exports.week = week;\\n\\n  Object.defineProperty(exports, '__esModule', { value: true });\\n\\n})));\\n\\n};\"],\n\"names\":[\"shadow$provide\",\"global\",\"require\",\"module\",\"exports\",\"factory\",\"define\",\"amd\",\"globalThis\",\"self\",\"vega\",\"d3\",\"vegaUtil\",\"d3Time\",\"d3Array\",\"timeUnits\",\"units\",\"u\",\"array\",\"slice\",\"m\",\"length\",\"error\",\"forEach\",\"unit\",\"hasOwnProperty\",\"UNITS\",\"WEEK\",\"DAY\",\"QUARTER\",\"MONTH\",\"DATE\",\"DAYOFYEAR\",\"sort\",\"a\",\"b\",\"localYear\",\"y\",\"t0\",\"setFullYear\",\"setMonth\",\"setDate\",\"setHours\",\"localDayOfYear\",\"d\",\"timeDay\",\"count\",\"getFullYear\",\"localWeekNum\",\"timeWeek\",\"localDate\",\"H\",\"M\",\"S\",\"L\",\"date\",\"Date\",\"utcDayOfYear\",\"UTC\",\"getUTCFullYear\",\"utcDay\",\"utcWeekNum\",\"utcWeek\",\"utcFirst\",\"setTime\",\"getUTCDay\",\"utcDate\",\"setUTCFullYear\",\"floor\",\"step\",\"get\",\"inv\",\"newDate\",\"s\",\"peek\",\"_\",\"p\",\"key\",\"getUnit\",\"t\",\"toSet\",\"YEAR\",\"constant\",\"zero\",\"one\",\"HOURS\",\"MINUTES\",\"SECONDS\",\"MILLISECONDS\",\"v\",\"year\",\"f\",\"phase\",\"Math\",\"weekday\",\"week\",\"day\",\"firstDay\",\"TIME_UNITS\",\"reduce\",\"o\",\"i\",\"defaultSpecifiers\",\"localGet\",\"getMonth\",\"getDate\",\"getHours\",\"getMinutes\",\"getSeconds\",\"getMilliseconds\",\"getDay\",\"localInv\",\"q\",\"w\",\"utcGet\",\"getUTCMonth\",\"getUTCDate\",\"getUTCHours\",\"getUTCMinutes\",\"getUTCSeconds\",\"getUTCMilliseconds\",\"utcInv\",\"timeIntervals\",\"timeYear\",\"timeMonth\",\"every\",\"timeHour\",\"timeMinute\",\"timeSecond\",\"timeMillisecond\",\"utcIntervals\",\"utcYear\",\"utcMonth\",\"utcHour\",\"utcMinute\",\"utcSecond\",\"utcMillisecond\",\"Milli\",\"Seconds\",\"Minutes\",\"Hours\",\"Day\",\"Month\",\"Year\",\"intervals\",\"durationSecond\",\"durationMinute\",\"durationHour\",\"durationDay\",\"Week\",\"durationWeek\",\"durationMonth\",\"durationYear\",\"dayofyear\",\"timeBin\",\"bin\",\"opt\",\"ext\",\"extent\",\"max\",\"maxbins\",\"target\",\"abs\",\"span\",\"bisector\",\"right\",\"tickStep\",\"timeFloor\",\"timeInterval\",\"timeOffset\",\"ival\",\"offset\",\"undefined\",\"timeSequence\",\"start\",\"stop\",\"range\",\"timeUnitSpecifier\",\"specifiers\",\"extend\",\"n\",\"fmt\",\"end\",\"join\",\"trim\",\"utcFloor\",\"utcInterval\",\"utcOffset\",\"utcSequence\",\"utcdayofyear\",\"utcweek\",\"Object\",\"defineProperty\",\"value\"]\n}\n"]