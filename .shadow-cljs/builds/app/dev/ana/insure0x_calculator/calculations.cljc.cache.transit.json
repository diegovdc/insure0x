["^ ","~:output",["^ ","~:js","goog.provide('insure0x_calculator.calculations');\ncljs.spec.alpha.def_impl(new cljs.core.Keyword(\"insure0x-calculator.calculations\",\"percentage\",\"insure0x-calculator.calculations/percentage\",-1726238023),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"and\",\"cljs.spec.alpha/and\",-2060279705,null),new cljs.core.Symbol(\"cljs.core\",\"number?\",\"cljs.core/number?\",-811857295,null),cljs.core.list(new cljs.core.Symbol(null,\"fn*\",\"fn*\",-752876845,null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"p1__54138#\",\"p1__54138#\",-1008227033,null)], null),cljs.core.list(new cljs.core.Symbol(\"cljs.core\",\">=\",\"cljs.core/>=\",350096541,null),(100),new cljs.core.Symbol(null,\"p1__54138#\",\"p1__54138#\",-1008227033,null),(0)))),cljs.spec.alpha.and_spec_impl(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(\"cljs.core\",\"number?\",\"cljs.core/number?\",-811857295,null),cljs.core.list(new cljs.core.Symbol(\"cljs.core\",\"fn\",\"cljs.core/fn\",-1065745098,null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"%\",\"%\",-950237169,null)], null),cljs.core.list(new cljs.core.Symbol(\"cljs.core\",\">=\",\"cljs.core/>=\",350096541,null),(100),new cljs.core.Symbol(null,\"%\",\"%\",-950237169,null),(0)))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.number_QMARK_,(function (p1__54138_SHARP_){\nreturn ((((100) >= p1__54138_SHARP_)) && ((p1__54138_SHARP_ >= (0))));\n})], null),null));\ncljs.spec.alpha.def_impl(new cljs.core.Keyword(\"insure0x-calculator.calculations\",\"expense\",\"insure0x-calculator.calculations/expense\",355727215),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"and\",\"cljs.spec.alpha/and\",-2060279705,null),new cljs.core.Symbol(\"cljs.core\",\"number?\",\"cljs.core/number?\",-811857295,null),cljs.core.list(new cljs.core.Symbol(null,\"fn*\",\"fn*\",-752876845,null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"p1__54139#\",\"p1__54139#\",1484587794,null)], null),cljs.core.list(new cljs.core.Symbol(\"cljs.core\",\">\",\"cljs.core/>\",2020535938,null),new cljs.core.Symbol(null,\"p1__54139#\",\"p1__54139#\",1484587794,null),(0)))),cljs.spec.alpha.and_spec_impl(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(\"cljs.core\",\"number?\",\"cljs.core/number?\",-811857295,null),cljs.core.list(new cljs.core.Symbol(\"cljs.core\",\"fn\",\"cljs.core/fn\",-1065745098,null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"%\",\"%\",-950237169,null)], null),cljs.core.list(new cljs.core.Symbol(\"cljs.core\",\">\",\"cljs.core/>\",2020535938,null),new cljs.core.Symbol(null,\"%\",\"%\",-950237169,null),(0)))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.number_QMARK_,(function (p1__54139_SHARP_){\nreturn (p1__54139_SHARP_ > (0));\n})], null),null));\ncljs.spec.alpha.def_impl(new cljs.core.Keyword(\"insure0x-calculator.calculations\",\"days\",\"insure0x-calculator.calculations/days\",30507015),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"and\",\"cljs.spec.alpha/and\",-2060279705,null),new cljs.core.Symbol(\"cljs.core\",\"int?\",\"cljs.core/int?\",50730120,null),cljs.core.list(new cljs.core.Symbol(null,\"fn*\",\"fn*\",-752876845,null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"p1__54140#\",\"p1__54140#\",-548151624,null)], null),cljs.core.list(new cljs.core.Symbol(\"cljs.core\",\">\",\"cljs.core/>\",2020535938,null),new cljs.core.Symbol(null,\"p1__54140#\",\"p1__54140#\",-548151624,null),(0)))),cljs.spec.alpha.and_spec_impl(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(\"cljs.core\",\"int?\",\"cljs.core/int?\",50730120,null),cljs.core.list(new cljs.core.Symbol(\"cljs.core\",\"fn\",\"cljs.core/fn\",-1065745098,null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"%\",\"%\",-950237169,null)], null),cljs.core.list(new cljs.core.Symbol(\"cljs.core\",\">\",\"cljs.core/>\",2020535938,null),new cljs.core.Symbol(null,\"%\",\"%\",-950237169,null),(0)))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.int_QMARK_,(function (p1__54140_SHARP_){\nreturn (p1__54140_SHARP_ > (0));\n})], null),null));\ncljs.spec.alpha.def_impl(new cljs.core.Keyword(\"insure0x-calculator.calculations\",\"months\",\"insure0x-calculator.calculations/months\",-1766998536),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"and\",\"cljs.spec.alpha/and\",-2060279705,null),new cljs.core.Symbol(\"cljs.core\",\"int?\",\"cljs.core/int?\",50730120,null),cljs.core.list(new cljs.core.Symbol(null,\"fn*\",\"fn*\",-752876845,null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"p1__54141#\",\"p1__54141#\",808694404,null)], null),cljs.core.list(new cljs.core.Symbol(\"cljs.core\",\">\",\"cljs.core/>\",2020535938,null),new cljs.core.Symbol(null,\"p1__54141#\",\"p1__54141#\",808694404,null),(0)))),cljs.spec.alpha.and_spec_impl(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(\"cljs.core\",\"int?\",\"cljs.core/int?\",50730120,null),cljs.core.list(new cljs.core.Symbol(\"cljs.core\",\"fn\",\"cljs.core/fn\",-1065745098,null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"%\",\"%\",-950237169,null)], null),cljs.core.list(new cljs.core.Symbol(\"cljs.core\",\">\",\"cljs.core/>\",2020535938,null),new cljs.core.Symbol(null,\"%\",\"%\",-950237169,null),(0)))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.int_QMARK_,(function (p1__54141_SHARP_){\nreturn (p1__54141_SHARP_ > (0));\n})], null),null));\ncljs.spec.alpha.def_impl(new cljs.core.Keyword(\"insure0x-calculator.calculations\",\"need%\",\"insure0x-calculator.calculations/need%\",-1349387308),new cljs.core.Keyword(\"insure0x-calculator.calculations\",\"percentage\",\"insure0x-calculator.calculations/percentage\",-1726238023),new cljs.core.Keyword(\"insure0x-calculator.calculations\",\"percentage\",\"insure0x-calculator.calculations/percentage\",-1726238023));\ncljs.spec.alpha.def_impl(new cljs.core.Keyword(\"insure0x-calculator.calculations\",\"total-times-required\",\"insure0x-calculator.calculations/total-times-required\",789131235),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"and\",\"cljs.spec.alpha/and\",-2060279705,null),new cljs.core.Symbol(\"cljs.core\",\"int?\",\"cljs.core/int?\",50730120,null),cljs.core.list(new cljs.core.Symbol(null,\"fn*\",\"fn*\",-752876845,null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"p1__54142#\",\"p1__54142#\",1040520717,null)], null),cljs.core.list(new cljs.core.Symbol(\"cljs.core\",\">\",\"cljs.core/>\",2020535938,null),new cljs.core.Symbol(null,\"p1__54142#\",\"p1__54142#\",1040520717,null),(0)))),cljs.spec.alpha.and_spec_impl(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(\"cljs.core\",\"int?\",\"cljs.core/int?\",50730120,null),cljs.core.list(new cljs.core.Symbol(\"cljs.core\",\"fn\",\"cljs.core/fn\",-1065745098,null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"%\",\"%\",-950237169,null)], null),cljs.core.list(new cljs.core.Symbol(\"cljs.core\",\">\",\"cljs.core/>\",2020535938,null),new cljs.core.Symbol(null,\"%\",\"%\",-950237169,null),(0)))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.int_QMARK_,(function (p1__54142_SHARP_){\nreturn (p1__54142_SHARP_ > (0));\n})], null),null));\ncljs.spec.alpha.def_impl(new cljs.core.Keyword(\"insure0x-calculator.calculations\",\"total-expenses\",\"insure0x-calculator.calculations/total-expenses\",-383468746),new cljs.core.Keyword(\"insure0x-calculator.calculations\",\"expense\",\"insure0x-calculator.calculations/expense\",355727215),new cljs.core.Keyword(\"insure0x-calculator.calculations\",\"expense\",\"insure0x-calculator.calculations/expense\",355727215));\ncljs.spec.alpha.def_impl(new cljs.core.Keyword(\"insure0x-calculator.calculations\",\"covered-expenses\",\"insure0x-calculator.calculations/covered-expenses\",1637526707),new cljs.core.Keyword(\"insure0x-calculator.calculations\",\"expense\",\"insure0x-calculator.calculations/expense\",355727215),new cljs.core.Keyword(\"insure0x-calculator.calculations\",\"expense\",\"insure0x-calculator.calculations/expense\",355727215));\ncljs.spec.alpha.def_impl(new cljs.core.Keyword(\"insure0x-calculator.calculations\",\"uncovered-expenses\",\"insure0x-calculator.calculations/uncovered-expenses\",1970456312),new cljs.core.Keyword(\"insure0x-calculator.calculations\",\"expense\",\"insure0x-calculator.calculations/expense\",355727215),new cljs.core.Keyword(\"insure0x-calculator.calculations\",\"expense\",\"insure0x-calculator.calculations/expense\",355727215));\ncljs.spec.alpha.def_impl(new cljs.core.Keyword(\"insure0x-calculator.calculations\",\"beneficiary\",\"insure0x-calculator.calculations/beneficiary\",1277095795),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"keys\",\"cljs.spec.alpha/keys\",1109346032,null),new cljs.core.Keyword(null,\"req-un\",\"req-un\",1074571008),new cljs.core.PersistentVector(null, 6, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"insure0x-calculator.calculations\",\"need%\",\"insure0x-calculator.calculations/need%\",-1349387308),new cljs.core.Keyword(\"insure0x-calculator.calculations\",\"total-expenses\",\"insure0x-calculator.calculations/total-expenses\",-383468746),new cljs.core.Keyword(\"insure0x-calculator.calculations\",\"total-times-required\",\"insure0x-calculator.calculations/total-times-required\",789131235),new cljs.core.Keyword(\"insure0x-calculator.calculations\",\"covered-expenses\",\"insure0x-calculator.calculations/covered-expenses\",1637526707),new cljs.core.Keyword(\"insure0x-calculator.calculations\",\"uncovered-expenses\",\"insure0x-calculator.calculations/uncovered-expenses\",1970456312),new cljs.core.Keyword(\"insure0x-calculator.calculations\",\"months\",\"insure0x-calculator.calculations/months\",-1766998536)], null)),cljs.spec.alpha.map_spec_impl(cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,\"req-un\",\"req-un\",1074571008),new cljs.core.Keyword(null,\"opt-un\",\"opt-un\",883442496),new cljs.core.Keyword(null,\"gfn\",\"gfn\",791517474),new cljs.core.Keyword(null,\"pred-exprs\",\"pred-exprs\",1792271395),new cljs.core.Keyword(null,\"keys-pred\",\"keys-pred\",858984739),new cljs.core.Keyword(null,\"opt-keys\",\"opt-keys\",1262688261),new cljs.core.Keyword(null,\"req-specs\",\"req-specs\",553962313),new cljs.core.Keyword(null,\"req\",\"req\",-326448303),new cljs.core.Keyword(null,\"req-keys\",\"req-keys\",514319221),new cljs.core.Keyword(null,\"opt-specs\",\"opt-specs\",-384905450),new cljs.core.Keyword(null,\"pred-forms\",\"pred-forms\",172611832),new cljs.core.Keyword(null,\"opt\",\"opt\",-794706369)],[new cljs.core.PersistentVector(null, 6, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"insure0x-calculator.calculations\",\"need%\",\"insure0x-calculator.calculations/need%\",-1349387308),new cljs.core.Keyword(\"insure0x-calculator.calculations\",\"total-expenses\",\"insure0x-calculator.calculations/total-expenses\",-383468746),new cljs.core.Keyword(\"insure0x-calculator.calculations\",\"total-times-required\",\"insure0x-calculator.calculations/total-times-required\",789131235),new cljs.core.Keyword(\"insure0x-calculator.calculations\",\"covered-expenses\",\"insure0x-calculator.calculations/covered-expenses\",1637526707),new cljs.core.Keyword(\"insure0x-calculator.calculations\",\"uncovered-expenses\",\"insure0x-calculator.calculations/uncovered-expenses\",1970456312),new cljs.core.Keyword(\"insure0x-calculator.calculations\",\"months\",\"insure0x-calculator.calculations/months\",-1766998536)], null),null,null,new cljs.core.PersistentVector(null, 7, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (G__54143){\nreturn cljs.core.map_QMARK_(G__54143);\n}),(function (G__54143){\nreturn cljs.core.contains_QMARK_(G__54143,new cljs.core.Keyword(null,\"need%\",\"need%\",477341657));\n}),(function (G__54143){\nreturn cljs.core.contains_QMARK_(G__54143,new cljs.core.Keyword(null,\"total-expenses\",\"total-expenses\",1140694793));\n}),(function (G__54143){\nreturn cljs.core.contains_QMARK_(G__54143,new cljs.core.Keyword(null,\"total-times-required\",\"total-times-required\",-566852456));\n}),(function (G__54143){\nreturn cljs.core.contains_QMARK_(G__54143,new cljs.core.Keyword(null,\"covered-expenses\",\"covered-expenses\",444420264));\n}),(function (G__54143){\nreturn cljs.core.contains_QMARK_(G__54143,new cljs.core.Keyword(null,\"uncovered-expenses\",\"uncovered-expenses\",1247044299));\n}),(function (G__54143){\nreturn cljs.core.contains_QMARK_(G__54143,new cljs.core.Keyword(null,\"months\",\"months\",-45571637));\n})], null),(function (G__54143){\nreturn ((cljs.core.map_QMARK_(G__54143)) && (cljs.core.contains_QMARK_(G__54143,new cljs.core.Keyword(null,\"need%\",\"need%\",477341657))) && (cljs.core.contains_QMARK_(G__54143,new cljs.core.Keyword(null,\"total-expenses\",\"total-expenses\",1140694793))) && (cljs.core.contains_QMARK_(G__54143,new cljs.core.Keyword(null,\"total-times-required\",\"total-times-required\",-566852456))) && (cljs.core.contains_QMARK_(G__54143,new cljs.core.Keyword(null,\"covered-expenses\",\"covered-expenses\",444420264))) && (cljs.core.contains_QMARK_(G__54143,new cljs.core.Keyword(null,\"uncovered-expenses\",\"uncovered-expenses\",1247044299))) && (cljs.core.contains_QMARK_(G__54143,new cljs.core.Keyword(null,\"months\",\"months\",-45571637))));\n}),cljs.core.PersistentVector.EMPTY,new cljs.core.PersistentVector(null, 6, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"insure0x-calculator.calculations\",\"need%\",\"insure0x-calculator.calculations/need%\",-1349387308),new cljs.core.Keyword(\"insure0x-calculator.calculations\",\"total-expenses\",\"insure0x-calculator.calculations/total-expenses\",-383468746),new cljs.core.Keyword(\"insure0x-calculator.calculations\",\"total-times-required\",\"insure0x-calculator.calculations/total-times-required\",789131235),new cljs.core.Keyword(\"insure0x-calculator.calculations\",\"covered-expenses\",\"insure0x-calculator.calculations/covered-expenses\",1637526707),new cljs.core.Keyword(\"insure0x-calculator.calculations\",\"uncovered-expenses\",\"insure0x-calculator.calculations/uncovered-expenses\",1970456312),new cljs.core.Keyword(\"insure0x-calculator.calculations\",\"months\",\"insure0x-calculator.calculations/months\",-1766998536)], null),null,new cljs.core.PersistentVector(null, 6, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"need%\",\"need%\",477341657),new cljs.core.Keyword(null,\"total-expenses\",\"total-expenses\",1140694793),new cljs.core.Keyword(null,\"total-times-required\",\"total-times-required\",-566852456),new cljs.core.Keyword(null,\"covered-expenses\",\"covered-expenses\",444420264),new cljs.core.Keyword(null,\"uncovered-expenses\",\"uncovered-expenses\",1247044299),new cljs.core.Keyword(null,\"months\",\"months\",-45571637)], null),cljs.core.PersistentVector.EMPTY,new cljs.core.PersistentVector(null, 7, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.list(new cljs.core.Symbol(\"cljs.core\",\"fn\",\"cljs.core/fn\",-1065745098,null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"%\",\"%\",-950237169,null)], null),cljs.core.list(new cljs.core.Symbol(\"cljs.core\",\"map?\",\"cljs.core/map?\",-1390345523,null),new cljs.core.Symbol(null,\"%\",\"%\",-950237169,null))),cljs.core.list(new cljs.core.Symbol(\"cljs.core\",\"fn\",\"cljs.core/fn\",-1065745098,null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"%\",\"%\",-950237169,null)], null),cljs.core.list(new cljs.core.Symbol(\"cljs.core\",\"contains?\",\"cljs.core/contains?\",-976526835,null),new cljs.core.Symbol(null,\"%\",\"%\",-950237169,null),new cljs.core.Keyword(null,\"need%\",\"need%\",477341657))),cljs.core.list(new cljs.core.Symbol(\"cljs.core\",\"fn\",\"cljs.core/fn\",-1065745098,null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"%\",\"%\",-950237169,null)], null),cljs.core.list(new cljs.core.Symbol(\"cljs.core\",\"contains?\",\"cljs.core/contains?\",-976526835,null),new cljs.core.Symbol(null,\"%\",\"%\",-950237169,null),new cljs.core.Keyword(null,\"total-expenses\",\"total-expenses\",1140694793))),cljs.core.list(new cljs.core.Symbol(\"cljs.core\",\"fn\",\"cljs.core/fn\",-1065745098,null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"%\",\"%\",-950237169,null)], null),cljs.core.list(new cljs.core.Symbol(\"cljs.core\",\"contains?\",\"cljs.core/contains?\",-976526835,null),new cljs.core.Symbol(null,\"%\",\"%\",-950237169,null),new cljs.core.Keyword(null,\"total-times-required\",\"total-times-required\",-566852456))),cljs.core.list(new cljs.core.Symbol(\"cljs.core\",\"fn\",\"cljs.core/fn\",-1065745098,null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"%\",\"%\",-950237169,null)], null),cljs.core.list(new cljs.core.Symbol(\"cljs.core\",\"contains?\",\"cljs.core/contains?\",-976526835,null),new cljs.core.Symbol(null,\"%\",\"%\",-950237169,null),new cljs.core.Keyword(null,\"covered-expenses\",\"covered-expenses\",444420264))),cljs.core.list(new cljs.core.Symbol(\"cljs.core\",\"fn\",\"cljs.core/fn\",-1065745098,null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"%\",\"%\",-950237169,null)], null),cljs.core.list(new cljs.core.Symbol(\"cljs.core\",\"contains?\",\"cljs.core/contains?\",-976526835,null),new cljs.core.Symbol(null,\"%\",\"%\",-950237169,null),new cljs.core.Keyword(null,\"uncovered-expenses\",\"uncovered-expenses\",1247044299))),cljs.core.list(new cljs.core.Symbol(\"cljs.core\",\"fn\",\"cljs.core/fn\",-1065745098,null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"%\",\"%\",-950237169,null)], null),cljs.core.list(new cljs.core.Symbol(\"cljs.core\",\"contains?\",\"cljs.core/contains?\",-976526835,null),new cljs.core.Symbol(null,\"%\",\"%\",-950237169,null),new cljs.core.Keyword(null,\"months\",\"months\",-45571637)))], null),null])));\ncljs.spec.alpha.def_impl(new cljs.core.Keyword(\"insure0x-calculator.calculations\",\"beneficiaries\",\"insure0x-calculator.calculations/beneficiaries\",-1573047323),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"*\",\"cljs.spec.alpha/*\",-1238084288,null),new cljs.core.Keyword(\"insure0x-calculator.calculations\",\"beneficiary\",\"insure0x-calculator.calculations/beneficiary\",1277095795)),cljs.spec.alpha.rep_impl(new cljs.core.Keyword(\"insure0x-calculator.calculations\",\"beneficiary\",\"insure0x-calculator.calculations/beneficiary\",1277095795),new cljs.core.Keyword(\"insure0x-calculator.calculations\",\"beneficiary\",\"insure0x-calculator.calculations/beneficiary\",1277095795)));\ncljs.spec.alpha.def_impl(new cljs.core.Keyword(\"insure0x-calculator.calculations\",\"fee\",\"insure0x-calculator.calculations/fee\",1565093980),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"and\",\"cljs.spec.alpha/and\",-2060279705,null),new cljs.core.Symbol(\"cljs.core\",\"number?\",\"cljs.core/number?\",-811857295,null),cljs.core.list(new cljs.core.Symbol(null,\"fn*\",\"fn*\",-752876845,null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"p1__54144#\",\"p1__54144#\",-2080986933,null)], null),cljs.core.list(new cljs.core.Symbol(\"cljs.core\",\">\",\"cljs.core/>\",2020535938,null),new cljs.core.Symbol(null,\"p1__54144#\",\"p1__54144#\",-2080986933,null),(0)))),cljs.spec.alpha.and_spec_impl(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(\"cljs.core\",\"number?\",\"cljs.core/number?\",-811857295,null),cljs.core.list(new cljs.core.Symbol(\"cljs.core\",\"fn\",\"cljs.core/fn\",-1065745098,null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"%\",\"%\",-950237169,null)], null),cljs.core.list(new cljs.core.Symbol(\"cljs.core\",\">\",\"cljs.core/>\",2020535938,null),new cljs.core.Symbol(null,\"%\",\"%\",-950237169,null),(0)))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.number_QMARK_,(function (p1__54144_SHARP_){\nreturn (p1__54144_SHARP_ > (0));\n})], null),null));\ncljs.spec.alpha.def_impl(new cljs.core.Keyword(\"insure0x-calculator.calculations\",\"reserve\",\"insure0x-calculator.calculations/reserve\",674682738),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"and\",\"cljs.spec.alpha/and\",-2060279705,null),new cljs.core.Symbol(\"cljs.core\",\"number?\",\"cljs.core/number?\",-811857295,null),cljs.core.list(new cljs.core.Symbol(null,\"fn*\",\"fn*\",-752876845,null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"p1__54145#\",\"p1__54145#\",2075771962,null)], null),cljs.core.list(new cljs.core.Symbol(\"cljs.core\",\">=\",\"cljs.core/>=\",350096541,null),new cljs.core.Symbol(null,\"p1__54145#\",\"p1__54145#\",2075771962,null),(0)))),cljs.spec.alpha.and_spec_impl(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(\"cljs.core\",\"number?\",\"cljs.core/number?\",-811857295,null),cljs.core.list(new cljs.core.Symbol(\"cljs.core\",\"fn\",\"cljs.core/fn\",-1065745098,null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"%\",\"%\",-950237169,null)], null),cljs.core.list(new cljs.core.Symbol(\"cljs.core\",\">=\",\"cljs.core/>=\",350096541,null),new cljs.core.Symbol(null,\"%\",\"%\",-950237169,null),(0)))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.number_QMARK_,(function (p1__54145_SHARP_){\nreturn (p1__54145_SHARP_ >= (0));\n})], null),null));\ncljs.spec.alpha.def_impl(new cljs.core.Keyword(\"insure0x-calculator.calculations\",\"maximum-amount\",\"insure0x-calculator.calculations/maximum-amount\",1057098837),new cljs.core.Keyword(\"insure0x-calculator.calculations\",\"expense\",\"insure0x-calculator.calculations/expense\",355727215),new cljs.core.Keyword(\"insure0x-calculator.calculations\",\"expense\",\"insure0x-calculator.calculations/expense\",355727215));\ncljs.spec.alpha.def_impl(new cljs.core.Keyword(\"insure0x-calculator.calculations\",\"period\",\"insure0x-calculator.calculations/period\",-967339152),new cljs.core.Keyword(\"insure0x-calculator.calculations\",\"days\",\"insure0x-calculator.calculations/days\",30507015),new cljs.core.Keyword(\"insure0x-calculator.calculations\",\"days\",\"insure0x-calculator.calculations/days\",30507015));\ncljs.spec.alpha.def_impl(new cljs.core.Keyword(\"insure0x-calculator.calculations\",\"fund\",\"insure0x-calculator.calculations/fund\",192344510),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"keys\",\"cljs.spec.alpha/keys\",1109346032,null),new cljs.core.Keyword(null,\"req-un\",\"req-un\",1074571008),new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"insure0x-calculator.calculations\",\"reserve\",\"insure0x-calculator.calculations/reserve\",674682738),new cljs.core.Keyword(\"insure0x-calculator.calculations\",\"total-beneficiaries\",\"insure0x-calculator.calculations/total-beneficiaries\",-137779911),new cljs.core.Keyword(\"insure0x-calculator.calculations\",\"maximum-amount\",\"insure0x-calculator.calculations/maximum-amount\",1057098837),new cljs.core.Keyword(\"insure0x-calculator.calculations\",\"period\",\"insure0x-calculator.calculations/period\",-967339152),new cljs.core.Keyword(\"insure0x-calculator.calculations\",\"beneficiaries\",\"insure0x-calculator.calculations/beneficiaries\",-1573047323)], null)),cljs.spec.alpha.map_spec_impl(cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,\"req-un\",\"req-un\",1074571008),new cljs.core.Keyword(null,\"opt-un\",\"opt-un\",883442496),new cljs.core.Keyword(null,\"gfn\",\"gfn\",791517474),new cljs.core.Keyword(null,\"pred-exprs\",\"pred-exprs\",1792271395),new cljs.core.Keyword(null,\"keys-pred\",\"keys-pred\",858984739),new cljs.core.Keyword(null,\"opt-keys\",\"opt-keys\",1262688261),new cljs.core.Keyword(null,\"req-specs\",\"req-specs\",553962313),new cljs.core.Keyword(null,\"req\",\"req\",-326448303),new cljs.core.Keyword(null,\"req-keys\",\"req-keys\",514319221),new cljs.core.Keyword(null,\"opt-specs\",\"opt-specs\",-384905450),new cljs.core.Keyword(null,\"pred-forms\",\"pred-forms\",172611832),new cljs.core.Keyword(null,\"opt\",\"opt\",-794706369)],[new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"insure0x-calculator.calculations\",\"reserve\",\"insure0x-calculator.calculations/reserve\",674682738),new cljs.core.Keyword(\"insure0x-calculator.calculations\",\"total-beneficiaries\",\"insure0x-calculator.calculations/total-beneficiaries\",-137779911),new cljs.core.Keyword(\"insure0x-calculator.calculations\",\"maximum-amount\",\"insure0x-calculator.calculations/maximum-amount\",1057098837),new cljs.core.Keyword(\"insure0x-calculator.calculations\",\"period\",\"insure0x-calculator.calculations/period\",-967339152),new cljs.core.Keyword(\"insure0x-calculator.calculations\",\"beneficiaries\",\"insure0x-calculator.calculations/beneficiaries\",-1573047323)], null),null,null,new cljs.core.PersistentVector(null, 6, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (G__54146){\nreturn cljs.core.map_QMARK_(G__54146);\n}),(function (G__54146){\nreturn cljs.core.contains_QMARK_(G__54146,new cljs.core.Keyword(null,\"reserve\",\"reserve\",-1292029083));\n}),(function (G__54146){\nreturn cljs.core.contains_QMARK_(G__54146,new cljs.core.Keyword(null,\"total-beneficiaries\",\"total-beneficiaries\",-1829813928));\n}),(function (G__54146){\nreturn cljs.core.contains_QMARK_(G__54146,new cljs.core.Keyword(null,\"maximum-amount\",\"maximum-amount\",-639322022));\n}),(function (G__54146){\nreturn cljs.core.contains_QMARK_(G__54146,new cljs.core.Keyword(null,\"period\",\"period\",-352129191));\n}),(function (G__54146){\nreturn cljs.core.contains_QMARK_(G__54146,new cljs.core.Keyword(null,\"beneficiaries\",\"beneficiaries\",2136594362));\n})], null),(function (G__54146){\nreturn ((cljs.core.map_QMARK_(G__54146)) && (cljs.core.contains_QMARK_(G__54146,new cljs.core.Keyword(null,\"reserve\",\"reserve\",-1292029083))) && (cljs.core.contains_QMARK_(G__54146,new cljs.core.Keyword(null,\"total-beneficiaries\",\"total-beneficiaries\",-1829813928))) && (cljs.core.contains_QMARK_(G__54146,new cljs.core.Keyword(null,\"maximum-amount\",\"maximum-amount\",-639322022))) && (cljs.core.contains_QMARK_(G__54146,new cljs.core.Keyword(null,\"period\",\"period\",-352129191))) && (cljs.core.contains_QMARK_(G__54146,new cljs.core.Keyword(null,\"beneficiaries\",\"beneficiaries\",2136594362))));\n}),cljs.core.PersistentVector.EMPTY,new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"insure0x-calculator.calculations\",\"reserve\",\"insure0x-calculator.calculations/reserve\",674682738),new cljs.core.Keyword(\"insure0x-calculator.calculations\",\"total-beneficiaries\",\"insure0x-calculator.calculations/total-beneficiaries\",-137779911),new cljs.core.Keyword(\"insure0x-calculator.calculations\",\"maximum-amount\",\"insure0x-calculator.calculations/maximum-amount\",1057098837),new cljs.core.Keyword(\"insure0x-calculator.calculations\",\"period\",\"insure0x-calculator.calculations/period\",-967339152),new cljs.core.Keyword(\"insure0x-calculator.calculations\",\"beneficiaries\",\"insure0x-calculator.calculations/beneficiaries\",-1573047323)], null),null,new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"reserve\",\"reserve\",-1292029083),new cljs.core.Keyword(null,\"total-beneficiaries\",\"total-beneficiaries\",-1829813928),new cljs.core.Keyword(null,\"maximum-amount\",\"maximum-amount\",-639322022),new cljs.core.Keyword(null,\"period\",\"period\",-352129191),new cljs.core.Keyword(null,\"beneficiaries\",\"beneficiaries\",2136594362)], null),cljs.core.PersistentVector.EMPTY,new cljs.core.PersistentVector(null, 6, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.list(new cljs.core.Symbol(\"cljs.core\",\"fn\",\"cljs.core/fn\",-1065745098,null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"%\",\"%\",-950237169,null)], null),cljs.core.list(new cljs.core.Symbol(\"cljs.core\",\"map?\",\"cljs.core/map?\",-1390345523,null),new cljs.core.Symbol(null,\"%\",\"%\",-950237169,null))),cljs.core.list(new cljs.core.Symbol(\"cljs.core\",\"fn\",\"cljs.core/fn\",-1065745098,null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"%\",\"%\",-950237169,null)], null),cljs.core.list(new cljs.core.Symbol(\"cljs.core\",\"contains?\",\"cljs.core/contains?\",-976526835,null),new cljs.core.Symbol(null,\"%\",\"%\",-950237169,null),new cljs.core.Keyword(null,\"reserve\",\"reserve\",-1292029083))),cljs.core.list(new cljs.core.Symbol(\"cljs.core\",\"fn\",\"cljs.core/fn\",-1065745098,null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"%\",\"%\",-950237169,null)], null),cljs.core.list(new cljs.core.Symbol(\"cljs.core\",\"contains?\",\"cljs.core/contains?\",-976526835,null),new cljs.core.Symbol(null,\"%\",\"%\",-950237169,null),new cljs.core.Keyword(null,\"total-beneficiaries\",\"total-beneficiaries\",-1829813928))),cljs.core.list(new cljs.core.Symbol(\"cljs.core\",\"fn\",\"cljs.core/fn\",-1065745098,null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"%\",\"%\",-950237169,null)], null),cljs.core.list(new cljs.core.Symbol(\"cljs.core\",\"contains?\",\"cljs.core/contains?\",-976526835,null),new cljs.core.Symbol(null,\"%\",\"%\",-950237169,null),new cljs.core.Keyword(null,\"maximum-amount\",\"maximum-amount\",-639322022))),cljs.core.list(new cljs.core.Symbol(\"cljs.core\",\"fn\",\"cljs.core/fn\",-1065745098,null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"%\",\"%\",-950237169,null)], null),cljs.core.list(new cljs.core.Symbol(\"cljs.core\",\"contains?\",\"cljs.core/contains?\",-976526835,null),new cljs.core.Symbol(null,\"%\",\"%\",-950237169,null),new cljs.core.Keyword(null,\"period\",\"period\",-352129191))),cljs.core.list(new cljs.core.Symbol(\"cljs.core\",\"fn\",\"cljs.core/fn\",-1065745098,null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"%\",\"%\",-950237169,null)], null),cljs.core.list(new cljs.core.Symbol(\"cljs.core\",\"contains?\",\"cljs.core/contains?\",-976526835,null),new cljs.core.Symbol(null,\"%\",\"%\",-950237169,null),new cljs.core.Keyword(null,\"beneficiaries\",\"beneficiaries\",2136594362)))], null),null])));\ninsure0x_calculator.calculations.init_fund = (function insure0x_calculator$calculations$init_fund(p__54147){\nvar map__54148 = p__54147;\nvar map__54148__$1 = (((((!((map__54148 == null))))?(((((map__54148.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__54148.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__54148):map__54148);\nvar beneficiaries = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__54148__$1,new cljs.core.Keyword(null,\"beneficiaries\",\"beneficiaries\",2136594362));\nvar fee = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__54148__$1,new cljs.core.Keyword(null,\"fee\",\"fee\",-1196176319));\nvar maximum_amount = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__54148__$1,new cljs.core.Keyword(null,\"maximum-amount\",\"maximum-amount\",-639322022));\nvar period = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__54148__$1,new cljs.core.Keyword(null,\"period\",\"period\",-352129191));\nreturn new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null,\"reserve\",\"reserve\",-1292029083),(cljs.core.count(beneficiaries) * fee),new cljs.core.Keyword(null,\"fee\",\"fee\",-1196176319),fee,new cljs.core.Keyword(null,\"maximum-amount\",\"maximum-amount\",-639322022),maximum_amount,new cljs.core.Keyword(null,\"period\",\"period\",-352129191),period,new cljs.core.Keyword(null,\"beneficiaries\",\"beneficiaries\",2136594362),beneficiaries,new cljs.core.Keyword(null,\"unserved\",\"unserved\",266899189),(0)], null);\n});\ninsure0x_calculator.calculations.init_beneficiary = (function insure0x_calculator$calculations$init_beneficiary(fee,need){\nreturn new cljs.core.PersistentArrayMap(null, 8, [new cljs.core.Keyword(null,\"need%\",\"need%\",477341657),need,new cljs.core.Keyword(null,\"total-expenses\",\"total-expenses\",1140694793),(0),new cljs.core.Keyword(null,\"total-expenses-in-period\",\"total-expenses-in-period\",100300862),(0),new cljs.core.Keyword(null,\"total-times-required\",\"total-times-required\",-566852456),(0),new cljs.core.Keyword(null,\"covered-expenses\",\"covered-expenses\",444420264),(0),new cljs.core.Keyword(null,\"uncovered-expenses\",\"uncovered-expenses\",1247044299),(0),new cljs.core.Keyword(null,\"months\",\"months\",-45571637),(1),new cljs.core.Keyword(null,\"total-invested\",\"total-invested\",-1347416583),fee], null);\n});\ninsure0x_calculator.calculations.init_beneficiaries = (function insure0x_calculator$calculations$init_beneficiaries(total,fee,need){\nreturn cljs.core.take.cljs$core$IFn$_invoke$arity$2(total,cljs.core.map.cljs$core$IFn$_invoke$arity$2((function (_){\nreturn insure0x_calculator.calculations.init_beneficiary(fee,need);\n}),cljs.core.range.cljs$core$IFn$_invoke$arity$0()));\n});\ninsure0x_calculator.calculations.rand_range = (function insure0x_calculator$calculations$rand_range(min,max){\nreturn ((min + cljs.core.rand.cljs$core$IFn$_invoke$arity$1((max - min))) | (0));\n});\ninsure0x_calculator.calculations.rand_range((200),(1000));\ninsure0x_calculator.calculations.update_expenses = (function insure0x_calculator$calculations$update_expenses(benficiary,amount){\nreturn cljs.core.update.cljs$core$IFn$_invoke$arity$4(cljs.core.update.cljs$core$IFn$_invoke$arity$4(benficiary,new cljs.core.Keyword(null,\"total-expenses\",\"total-expenses\",1140694793),cljs.core._PLUS_,amount),new cljs.core.Keyword(null,\"total-expenses-in-period\",\"total-expenses-in-period\",100300862),cljs.core._PLUS_,amount);\n});\ninsure0x_calculator.calculations.exceeded_coverage_QMARK_ = (function insure0x_calculator$calculations$exceeded_coverage_QMARK_(beneficiary,max_amount){\nreturn ((beneficiary.cljs$core$IFn$_invoke$arity$1 ? beneficiary.cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,\"total-expenses-in-period\",\"total-expenses-in-period\",100300862)) : beneficiary.call(null,new cljs.core.Keyword(null,\"total-expenses-in-period\",\"total-expenses-in-period\",100300862))) > max_amount);\n});\ninsure0x_calculator.calculations.simulate_usage = (function insure0x_calculator$calculations$simulate_usage(p__54150,p__54151){\nvar map__54152 = p__54150;\nvar map__54152__$1 = (((((!((map__54152 == null))))?(((((map__54152.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__54152.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__54152):map__54152);\nvar fund = map__54152__$1;\nvar reserve = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__54152__$1,new cljs.core.Keyword(null,\"reserve\",\"reserve\",-1292029083));\nvar beneficiaries = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__54152__$1,new cljs.core.Keyword(null,\"beneficiaries\",\"beneficiaries\",2136594362));\nvar maximum_amount = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__54152__$1,new cljs.core.Keyword(null,\"maximum-amount\",\"maximum-amount\",-639322022));\nvar map__54153 = p__54151;\nvar map__54153__$1 = (((((!((map__54153 == null))))?(((((map__54153.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__54153.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__54153):map__54153);\nvar config = map__54153__$1;\nvar min_amount = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__54153__$1,new cljs.core.Keyword(null,\"min-amount\",\"min-amount\",-143178712));\nreturn cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([fund,cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (p__54156,benef){\nvar map__54157 = p__54156;\nvar map__54157__$1 = (((((!((map__54157 == null))))?(((((map__54157.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__54157.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__54157):map__54157);\nvar reserve__$1 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__54157__$1,new cljs.core.Keyword(null,\"reserve\",\"reserve\",-1292029083));\nvar beneficiaries__$1 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__54157__$1,new cljs.core.Keyword(null,\"beneficiaries\",\"beneficiaries\",2136594362));\nvar unserved = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__54157__$1,new cljs.core.Keyword(null,\"unserved\",\"unserved\",266899189));\nvar served = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__54157__$1,new cljs.core.Keyword(null,\"served\",\"served\",185745480));\nvar partial_cash_unserved = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__54157__$1,new cljs.core.Keyword(null,\"partial-cash-unserved\",\"partial-cash-unserved\",218295334));\nvar needed_QMARK_ = ((benef.cljs$core$IFn$_invoke$arity$1 ? benef.cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,\"need%\",\"need%\",477341657)) : benef.call(null,new cljs.core.Keyword(null,\"need%\",\"need%\",477341657))) >= cljs.core.rand.cljs$core$IFn$_invoke$arity$0());\nif((((!(needed_QMARK_))) || (insure0x_calculator.calculations.exceeded_coverage_QMARK_(benef,maximum_amount)))){\nreturn new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null,\"reserve\",\"reserve\",-1292029083),reserve__$1,new cljs.core.Keyword(null,\"beneficiaries\",\"beneficiaries\",2136594362),cljs.core.conj.cljs$core$IFn$_invoke$arity$2(beneficiaries__$1,benef),new cljs.core.Keyword(null,\"unserved\",\"unserved\",266899189),unserved,new cljs.core.Keyword(null,\"served\",\"served\",185745480),served,new cljs.core.Keyword(null,\"partial-cash-unserved\",\"partial-cash-unserved\",218295334),partial_cash_unserved], null);\n} else {\nif(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2((0),reserve__$1)){\nreturn new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null,\"reserve\",\"reserve\",-1292029083),reserve__$1,new cljs.core.Keyword(null,\"unserved\",\"unserved\",266899189),(unserved + (1)),new cljs.core.Keyword(null,\"beneficiaries\",\"beneficiaries\",2136594362),cljs.core.conj.cljs$core$IFn$_invoke$arity$2(beneficiaries__$1,benef),new cljs.core.Keyword(null,\"served\",\"served\",185745480),served,new cljs.core.Keyword(null,\"partial-cash-unserved\",\"partial-cash-unserved\",218295334),partial_cash_unserved], null);\n} else {\nif((((reserve__$1 > (0))) && (needed_QMARK_))){\nvar required_amount = insure0x_calculator.calculations.rand_range(min_amount,maximum_amount);\nvar amount = ((((reserve__$1 - required_amount) >= (0)))?required_amount:reserve__$1);\nvar unserved_cash = (required_amount - amount);\nreturn new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null,\"reserve\",\"reserve\",-1292029083),(reserve__$1 - amount),new cljs.core.Keyword(null,\"unserved\",\"unserved\",266899189),unserved,new cljs.core.Keyword(null,\"beneficiaries\",\"beneficiaries\",2136594362),cljs.core.conj.cljs$core$IFn$_invoke$arity$2(beneficiaries__$1,insure0x_calculator.calculations.update_expenses(benef,amount)),new cljs.core.Keyword(null,\"served\",\"served\",185745480),cljs.core.conj.cljs$core$IFn$_invoke$arity$2(served,(((unserved_cash > (0)))?new cljs.core.Keyword(null,\"partial\",\"partial\",241141745):new cljs.core.Keyword(null,\"total\",\"total\",1916810418))),new cljs.core.Keyword(null,\"partial-cash-unserved\",\"partial-cash-unserved\",218295334),(((unserved_cash > (0)))?cljs.core.conj.cljs$core$IFn$_invoke$arity$2(partial_cash_unserved,unserved_cash):partial_cash_unserved)], null);\n} else {\nreturn null;\n}\n}\n}\n}),new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null,\"reserve\",\"reserve\",-1292029083),reserve,new cljs.core.Keyword(null,\"benficiaries\",\"benficiaries\",222159220),cljs.core.PersistentVector.EMPTY,new cljs.core.Keyword(null,\"unserved\",\"unserved\",266899189),(0),new cljs.core.Keyword(null,\"served\",\"served\",185745480),cljs.core.PersistentVector.EMPTY,new cljs.core.Keyword(null,\"partial-cash-unserved\",\"partial-cash-unserved\",218295334),cljs.core.PersistentVector.EMPTY], null),beneficiaries)], 0));\n});\ninsure0x_calculator.calculations.run_month = (function insure0x_calculator$calculations$run_month(p__54161,config,month){\nvar map__54162 = p__54161;\nvar map__54162__$1 = (((((!((map__54162 == null))))?(((((map__54162.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__54162.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__54162):map__54162);\nvar fund = map__54162__$1;\nvar beneficiaries = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__54162__$1,new cljs.core.Keyword(null,\"beneficiaries\",\"beneficiaries\",2136594362));\nvar fee = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__54162__$1,new cljs.core.Keyword(null,\"fee\",\"fee\",-1196176319));\nreturn insure0x_calculator.calculations.simulate_usage(cljs.core.update.cljs$core$IFn$_invoke$arity$3(fund,new cljs.core.Keyword(null,\"reserve\",\"reserve\",-1292029083),(function (p1__54159_SHARP_){\nreturn (p1__54159_SHARP_ + ((cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2((0),cljs.core.mod(month,(12))))?((cljs.core.count(beneficiaries) * fee) * (12)):null));\n})),config);\n});\ninsure0x_calculator.calculations.round_val = (function insure0x_calculator$calculations$round_val(rounding_quotient,val){\nvar min_STAR_ = (rounding_quotient * cljs.core.quot(val,rounding_quotient));\nvar midpoint = (rounding_quotient / (2));\nif((val > (midpoint + min_STAR_))){\nreturn (min_STAR_ + rounding_quotient);\n} else {\nreturn min_STAR_;\n}\n});\ninsure0x_calculator.calculations.run_months = (function insure0x_calculator$calculations$run_months(fund,config,quantity){\nreturn cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (fund_STAR_,month){\nreturn insure0x_calculator.calculations.run_month(fund_STAR_,config,month);\n}),fund,cljs.core.range.cljs$core$IFn$_invoke$arity$1(quantity));\n});\n","~:ns-info",["^ ","~:rename-macros",null,"~:renames",["^ "],"~:meta",["^ ","~:file","insure0x_calculator/calculations.cljc","~:line",1,"~:column",5,"~:end-line",1,"~:end-column",37],"~:ns-aliases",["^ ","~$cljs.loader","~$shadow.loader","~$clojure.pprint","~$cljs.pprint","~$react","~$module$node_modules$react$index","~$react-dom","~$module$node_modules$react_dom$index","~$clojure.spec.alpha","~$cljs.spec.alpha"],"~:use-macros",null,"~:excludes",["~#set",[]],"~:name","~$insure0x-calculator.calculations","~:op","~:ns","~:imports",null,"~:requires",["^ ","^D","^E","~$s","^E","~$cljs.core","^O","~$goog","^P","^E","^E"],"~:seen",["^H",["~:require"]],"~:uses",null,"~:require-macros",["^ ","^O","^O","^D","^E","~$s","^E","^E","^E"],"~:form",["~#list",["~$ns","^J",["^V",["^R",["^D","~:as","~$s"]]]]],"~:flags",["^ ","^R",["^H",[]]],"~:js-deps",["^ "],"~:deps",["^P","^O","^E"]],"^L","^J","~:resource-id",["~:shadow.build.classpath/resource","insure0x_calculator/calculations.cljc"],"~:compiled-at",1600141657137,"~:resource-name","insure0x_calculator/calculations.cljc","~:warnings",[],"~:source","(ns insure0x-calculator.calculations\n  (:require [clojure.spec.alpha :as s]))\n\n(s/def ::percentage (s/and number? #(>= 100 % 0)))\n(s/def ::expense (s/and number? #(> % 0)))\n(s/def ::days (s/and int? #(> % 0)))\n(s/def ::months (s/and int? #(> % 0)))\n(s/def ::need% ::percentage)\n(s/def ::total-times-required (s/and int? #(> % 0)))\n(s/def ::total-expenses ::expense)\n(s/def ::covered-expenses ::expense)\n(s/def ::uncovered-expenses ::expense)\n(s/def ::beneficiary (s/keys :req-un [::need% ::total-expenses ::total-times-required\n                                      ::covered-expenses ::uncovered-expenses ::months]))\n(s/def ::beneficiaries (s/* ::beneficiary))\n(s/def ::fee (s/and number? #(> % 0)))\n(s/def ::reserve (s/and number? #(>= % 0)))\n(s/def ::maximum-amount ::expense)\n(s/def ::period ::days)\n(s/def ::fund (s/keys :req-un [::reserve ::total-beneficiaries ::maximum-amount\n                               ::period ::beneficiaries]))\n\n\n(defn init-fund [{:keys [beneficiaries fee maximum-amount period]}]\n  {:reserve (* (count beneficiaries) fee)\n   :fee fee\n   :maximum-amount maximum-amount\n   :period period\n   :beneficiaries beneficiaries\n   :unserved 0})\n\n(defn init-beneficiary [fee need]\n  {:need% need\n   :total-expenses 0\n   :total-expenses-in-period 0\n   :total-times-required 0\n   :covered-expenses 0\n   :uncovered-expenses 0\n   :months 1\n   :total-invested fee})\n\n(defn init-beneficiaries [total fee need]\n  (take total (map (fn [_] (init-beneficiary fee need)) (range))))\n\n(defn rand-range [min max] (int (+ min (rand (- max min)))))\n\n(rand-range 200 1000)\n\n\n(defn update-expenses [benficiary amount]\n  (-> benficiary\n      (update :total-expenses + amount)\n      (update :total-expenses-in-period + amount)))\n\n(defn exceeded-coverage? [beneficiary max-amount]\n  (> (beneficiary :total-expenses-in-period) max-amount))\n\n;; TODO find out partial served\n;; TODO limit max amount per beneficiary per period\n;; TODO\n(defn simulate-usage [{:keys [reserve beneficiaries maximum-amount] :as fund}\n                      {:keys [min-amount] :as config}]\n  (merge fund\n         (reduce (fn [{:keys [reserve beneficiaries unserved\n                             served partial-cash-unserved]} benef]\n                   (let [needed? (>= (benef :need%) (rand))]\n                     (cond\n                       (or (not needed?) (exceeded-coverage? benef maximum-amount))\n                       {:reserve reserve\n                        :beneficiaries (conj beneficiaries benef)\n                        :unserved unserved\n                        :served served\n                        :partial-cash-unserved partial-cash-unserved}\n                       (= 0 reserve) {:reserve reserve\n                                      :unserved (inc unserved)\n                                      :beneficiaries (conj beneficiaries benef)\n                                      :served served\n                                      :partial-cash-unserved partial-cash-unserved}\n                       (and (> reserve 0) needed?)\n                       (let [required-amount (rand-range min-amount maximum-amount)\n                             amount (if (>= (- reserve required-amount) 0) required-amount reserve)\n                             unserved-cash (- required-amount amount)]\n                         {:reserve (- reserve amount)\n                          :unserved unserved\n                          :beneficiaries (conj beneficiaries (update-expenses benef amount))\n                          :served (conj served (if (> unserved-cash 0) :partial :total))\n                          :partial-cash-unserved (if (> unserved-cash 0)\n                                                   (conj partial-cash-unserved unserved-cash)\n                                                   partial-cash-unserved)}))))\n                 {:reserve reserve\n                  :benficiaries []\n                  :unserved 0\n                  :served []\n                  :partial-cash-unserved []}\n                 beneficiaries)))\n\n#_(let [benefs 20\n        fee 50\n        need%  0.2\n        fund (init-fund\n              {:beneficiaries (init-beneficiaries benefs fee need%)\n               :fee fee\n               :maximum-amount 2000\n               :period 180})]\n    (:unserved (run-month fund {:min-amount 200})))\n\n\n\n(defn run-month [{:keys [beneficiaries fee] :as fund} config month]\n  (-> fund\n      (update :reserve #(+ % (when (= 0 (mod month 12)) (* (count beneficiaries) fee 12))))\n      (simulate-usage config)\n      #_(update :maximum-amount #(+ % (* % (config :growth-rate))))))\n\n(defn round-val [rounding-quotient val]\n  (let [min* (* rounding-quotient (quot val rounding-quotient))\n        midpoint (/ rounding-quotient 2)]\n    (if (> val (+ midpoint min*))\n      (+ min* rounding-quotient)\n      min*)))\n\n(defn run-months [fund config quantity]\n    (reduce (fn [fund* month] (run-month fund* config month)) fund (range quantity)))\n","~:reader-features",["^H",["~:cljs"]],"~:cljc",true,"~:source-map-compact",["^ ","mappings","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","names",["cljs.spec.alpha/def-impl","cljs.spec.alpha/and-spec-impl","p1__54138#","cljs.core/number?","p1__54139#","p1__54140#","cljs.core/int?","p1__54141#","p1__54142#","cljs.spec.alpha/map-spec-impl","G__54143","cljs.core/map?","cljs.core/contains?","cljs.spec.alpha/rep-impl","p1__54144#","p1__54145#","G__54146","p__54147","map__54148","cljs.core/PROTOCOL_SENTINEL","cljs.core.apply","cljs.core/hash-map","cljs.core.get","insure0x-calculator.calculations/init-fund","beneficiaries","fee","maximum-amount","period","cljs.core/count","insure0x-calculator.calculations/init-beneficiary","need","insure0x-calculator.calculations/init-beneficiaries","total","cljs.core.take","cljs.core.map","_","cljs.core.range","insure0x-calculator.calculations/rand-range","min","max","cljs.core.rand","insure0x-calculator.calculations/update-expenses","benficiary","amount","cljs.core.update","cljs.core/+","insure0x-calculator.calculations/exceeded-coverage?","beneficiary","max-amount","p__54150","p__54151","map__54152","map__54153","insure0x-calculator.calculations/simulate-usage","reserve","fund","min-amount","config","cljs.core.merge","cljs.core.reduce","p__54156","map__54157","unserved","served","partial-cash-unserved","benef","needed?","cljs.core.conj","cljs.core._EQ_","required-amount","unserved-cash","p__54161","map__54162","insure0x-calculator.calculations/run-month","month","p1__54159#","cljs.core/mod","insure0x-calculator.calculations/round-val","rounding-quotient","val","min*","cljs.core/quot","midpoint","insure0x-calculator.calculations/run-months","quantity","fund*"]],"~:used-vars",["^H",["~$insure0x-calculator.calculations/update-expenses","~$cljs.core/=","~$cljs.spec.alpha/rep-impl","~$insure0x-calculator.calculations/round-val","~$cljs.core/count","~$insure0x-calculator.calculations/simulate-usage","~$cljs.core/reduce","~$cljs.core/int?","~$cljs.core/rand","~$cljs.core/take","~$cljs.spec.alpha/def-impl","~$insure0x-calculator.calculations/run-month","~$insure0x-calculator.calculations/init-beneficiary","~$cljs.core/contains?","~$cljs.core/map?","~$cljs.spec.alpha/map-spec-impl","~$cljs.core/conj","~$cljs.core/update","~$cljs.core/map","~$insure0x-calculator.calculations/run-months","~$insure0x-calculator.calculations/rand-range","~$cljs.core/number?","~$insure0x-calculator.calculations/exceeded-coverage?","~$insure0x-calculator.calculations/init-beneficiaries","~$cljs.core/mod","~$insure0x-calculator.calculations/init-fund","~$cljs.core/not","~$cljs.core/range","~$cljs.spec.alpha/and-spec-impl","~$cljs.core/merge","~$cljs.core/+"]]],"~:cache-keys",["~#cmap",[["^11","goog/dom/tagname.js"],["6025affb7181cd40418600864f58eed1ea80055d","~:shadow.build.compiler/resolve",["^ ","~:require-id",null,"~:deps-ids",["^H",[]],"~:deps-syms",["^P","~$goog.dom.HtmlElement"]]],["^11","cljs/spec/gen/alpha.cljs"],["9f9729dbbf9b814c83dc189977b447d2ae92b6cd","^22",["^ ","^23",null,"^24",["^H",[]],"^25",["^P","^O","~$goog.Uri"]]],["^11","goog/math/math.js"],["6025affb7181cd40418600864f58eed1ea80055d","^22",["^ ","^23",null,"^24",["^H",[]],"^25",["^P","~$goog.array","~$goog.asserts"]]],["^11","goog/html/trustedtypes.js"],["6025affb7181cd40418600864f58eed1ea80055d","^22",["^ ","^23",null,"^24",["^H",[]],"^25",["^P"]]],["^11","goog/labs/useragent/browser.js"],["6025affb7181cd40418600864f58eed1ea80055d","^22",["^ ","^23",null,"^24",["^H",[]],"^25",["^P","^28","~$goog.labs.userAgent.util","~$goog.object","~$goog.string.internal"]]],["^11","goog/html/safeurl.js"],["6025affb7181cd40418600864f58eed1ea80055d","^22",["^ ","^23",null,"^24",["^H",[]],"^25",["^P","^29","~$goog.fs.url","~$goog.html.TrustedResourceUrl","~$goog.i18n.bidi.Dir","~$goog.i18n.bidi.DirectionalString","~$goog.string.Const","~$goog.string.TypedString","^2<"]]],["^11","goog/array/array.js"],["6025affb7181cd40418600864f58eed1ea80055d","^22",["^ ","^23",null,"^24",["^H",[]],"^25",["^P","^29"]]],["^11","goog/debug/error.js"],["6025affb7181cd40418600864f58eed1ea80055d","^22",["^ ","^23",null,"^24",["^H",[]],"^25",["^P"]]],["^11","goog/dom/nodetype.js"],["6025affb7181cd40418600864f58eed1ea80055d","^22",["^ ","^23",null,"^24",["^H",[]],"^25",["^P"]]],["^11","goog/string/typedstring.js"],["6025affb7181cd40418600864f58eed1ea80055d","^22",["^ ","^23",null,"^24",["^H",[]],"^25",["^P"]]],["^11","goog/object/object.js"],["6025affb7181cd40418600864f58eed1ea80055d","^22",["^ ","^23",null,"^24",["^H",[]],"^25",["^P"]]],["^11","goog/dom/asserts.js"],["6025affb7181cd40418600864f58eed1ea80055d","^22",["^ ","^23",null,"^24",["^H",[]],"^25",["^P","^29"]]],"~:SHADOW-TIMESTAMP",[1600135801000,1600135801000,1593724535000],["^11","goog/math/long.js"],["6025affb7181cd40418600864f58eed1ea80055d","^22",["^ ","^23",null,"^24",["^H",[]],"^25",["^P","^29","~$goog.reflect"]]],["^11","goog/html/trustedresourceurl.js"],["6025affb7181cd40418600864f58eed1ea80055d","^22",["^ ","^23",null,"^24",["^H",[]],"^25",["^P","^29","~$goog.html.trustedtypes","^2?","^2@","^2A","^2B"]]],["^11","goog/string/internal.js"],["6025affb7181cd40418600864f58eed1ea80055d","^22",["^ ","^23",null,"^24",["^H",[]],"^25",["^P"]]],["^11","goog/functions/functions.js"],["6025affb7181cd40418600864f58eed1ea80055d","^22",["^ ","^23",null,"^24",["^H",[]],"^25",["^P"]]],["^11","goog/html/safestyle.js"],["6025affb7181cd40418600864f58eed1ea80055d","^22",["^ ","^23",null,"^24",["^H",[]],"^25",["^P","^28","^29","~$goog.html.SafeUrl","^2A","^2B","^2<"]]],["^11","goog/dom/safe.js"],["6025affb7181cd40418600864f58eed1ea80055d","^22",["^ ","^23",null,"^24",["^H",[]],"^25",["^P","^29","~$goog.dom.asserts","~$goog.functions","~$goog.html.SafeHtml","~$goog.html.SafeScript","~$goog.html.SafeStyle","^2F","^2>","~$goog.html.uncheckedconversions","^2A","^2<"]]],["^11","clojure/walk.cljs"],["9f9729dbbf9b814c83dc189977b447d2ae92b6cd","^22",["^ ","^23",null,"^24",["^H",[]],"^25",["^P","^O"]]],["^11","insure0x_calculator/calculations.cljc"],["a442cd97a5b2a8b22f1d07f40cc5dfd8e1deaa92","^22",["^ ","^23",null,"^24",["^H",[]],"^25",["^P","^O","^E"]]],["^11","goog/structs/map.js"],["6025affb7181cd40418600864f58eed1ea80055d","^22",["^ ","^23",null,"^24",["^H",[]],"^25",["^P","~$goog.iter.Iterator","~$goog.iter.StopIteration"]]],["^11","goog/html/safehtml.js"],["6025affb7181cd40418600864f58eed1ea80055d","^22",["^ ","^23",null,"^24",["^H",[]],"^25",["^P","^28","^29","~$goog.dom.TagName","~$goog.dom.tags","^2J","^2K","~$goog.html.SafeStyleSheet","^2F","^2>","^2E","^2?","^2@","~$goog.labs.userAgent.browser","^2;","^2A","^2B","^2<"]]],["^11","goog/dom/tags.js"],["6025affb7181cd40418600864f58eed1ea80055d","^22",["^ ","^23",null,"^24",["^H",[]],"^25",["^P","^2;"]]],["^11","goog/asserts/asserts.js"],["6025affb7181cd40418600864f58eed1ea80055d","^22",["^ ","^23",null,"^24",["^H",[]],"^25",["^P","~$goog.debug.Error","~$goog.dom.NodeType"]]],["^11","goog/uri/uri.js"],["6025affb7181cd40418600864f58eed1ea80055d","^22",["^ ","^23",null,"^24",["^H",[]],"^25",["^P","^28","^29","~$goog.string","~$goog.structs","~$goog.structs.Map","~$goog.uri.utils","~$goog.uri.utils.ComponentIndex","~$goog.uri.utils.StandardQueryParam"]]],["^11","goog/i18n/bidi.js"],["6025affb7181cd40418600864f58eed1ea80055d","^22",["^ ","^23",null,"^24",["^H",[]],"^25",["^P"]]],["^11","cljs/spec/alpha.cljs"],["9f9729dbbf9b814c83dc189977b447d2ae92b6cd","^22",["^ ","^23",null,"^24",["^H",[]],"^25",["^P","^O","^2;","~$clojure.walk","~$cljs.spec.gen.alpha","~$clojure.string"]]],["^11","goog/fs/url.js"],["6025affb7181cd40418600864f58eed1ea80055d","^22",["^ ","^23",null,"^24",["^H",[]],"^25",["^P"]]],["^11","goog/base.js"],["6025affb7181cd40418600864f58eed1ea80055d","^22",["^ ","^23",null,"^24",["^H",[]],"^25",[]]],["^11","goog/structs/structs.js"],["6025affb7181cd40418600864f58eed1ea80055d","^22",["^ ","^23",null,"^24",["^H",[]],"^25",["^P","^28","^2;"]]],["^11","clojure/string.cljs"],["9f9729dbbf9b814c83dc189977b447d2ae92b6cd","^22",["^ ","^23",null,"^24",["^H",[]],"^25",["^P","^O","^2U","~$goog.string.StringBuffer"]]],["^11","goog/string/string.js"],["6025affb7181cd40418600864f58eed1ea80055d","^22",["^ ","^23",null,"^24",["^H",[]],"^25",["^P","~$goog.dom.safe","^2L","^2A","^2<"]]],["^11","goog/reflect/reflect.js"],["6025affb7181cd40418600864f58eed1ea80055d","^22",["^ ","^23",null,"^24",["^H",[]],"^25",["^P"]]],["^11","goog/labs/useragent/util.js"],["6025affb7181cd40418600864f58eed1ea80055d","^22",["^ ","^23",null,"^24",["^H",[]],"^25",["^P","^2<"]]],["^11","goog/string/stringbuffer.js"],["6025affb7181cd40418600864f58eed1ea80055d","^22",["^ ","^23",null,"^24",["^H",[]],"^25",["^P"]]],["^11","goog/iter/iter.js"],["6025affb7181cd40418600864f58eed1ea80055d","^22",["^ ","^23",null,"^24",["^H",[]],"^25",["^P","^28","^29","^2H","~$goog.math"]]],["^11","goog/html/uncheckedconversions.js"],["6025affb7181cd40418600864f58eed1ea80055d","^22",["^ ","^23",null,"^24",["^H",[]],"^25",["^P","^29","^2I","^2J","^2K","^2Q","^2F","^2>","^2A","^2<"]]],["^11","goog/dom/htmlelement.js"],["6025affb7181cd40418600864f58eed1ea80055d","^22",["^ ","^23",null,"^24",["^H",[]],"^25",["^P"]]],["^11","cljs/core.cljs"],["9f9729dbbf9b814c83dc189977b447d2ae92b6cd","^22",["^ ","^23",null,"^24",["^H",[]],"^25",["^P","~$goog.math.Long","~$goog.math.Integer","^2U","^2;","^28","^27","^32"]]],["^11","goog/html/safescript.js"],["6025affb7181cd40418600864f58eed1ea80055d","^22",["^ ","^23",null,"^24",["^H",[]],"^25",["^P","^29","^2E","^2A","^2B"]]],["^11","goog/html/safestylesheet.js"],["6025affb7181cd40418600864f58eed1ea80055d","^22",["^ ","^23",null,"^24",["^H",[]],"^25",["^P","^28","^29","^2K","^2;","^2A","^2B","^2<"]]],["^11","goog/math/integer.js"],["6025affb7181cd40418600864f58eed1ea80055d","^22",["^ ","^23",null,"^24",["^H",[]],"^25",["^P","^2D"]]],["^11","goog/uri/utils.js"],["6025affb7181cd40418600864f58eed1ea80055d","^22",["^ ","^23",null,"^24",["^H",[]],"^25",["^P","^28","^29","^2U"]]],["^11","goog/string/const.js"],["6025affb7181cd40418600864f58eed1ea80055d","^22",["^ ","^23",null,"^24",["^H",[]],"^25",["^P","^29","^2B"]]]]],"~:clj-info",["^ ","jar:file:/home/diego/.m2/repository/org/clojure/clojurescript/1.10.773/clojurescript-1.10.773.jar!/cljs/analyzer.cljc",1593724535000,"jar:file:/home/diego/.m2/repository/org/clojure/clojure/1.10.1/clojure-1.10.1.jar!/clojure/core.clj",1571270009000,"jar:file:/home/diego/.m2/repository/org/clojure/clojure/1.10.1/clojure-1.10.1.jar!/clojure/java/io.clj",1571270009000,"jar:file:/home/diego/.m2/repository/org/clojure/data.json/1.0.0/data.json-1.0.0.jar!/clojure/data/json.clj",1585335870000,"jar:file:/home/diego/.m2/repository/org/clojure/clojurescript/1.10.773/clojurescript-1.10.773.jar!/cljs/compiler.cljc",1593724535000,"jar:file:/home/diego/.m2/repository/org/clojure/clojurescript/1.10.773/clojurescript-1.10.773.jar!/cljs/js_deps.cljc",1593724535000,"jar:file:/home/diego/.m2/repository/org/clojure/clojure/1.10.1/clojure-1.10.1.jar!/clojure/pprint.clj",1571270009000,"jar:file:/home/diego/.m2/repository/org/clojure/clojurescript/1.10.773/clojurescript-1.10.773.jar!/cljs/core.cljc",1593724535000,"jar:file:/home/diego/.m2/repository/org/clojure/clojurescript/1.10.773/clojurescript-1.10.773.jar!/cljs/env.cljc",1593724535000,"jar:file:/home/diego/.m2/repository/org/clojure/clojurescript/1.10.773/clojurescript-1.10.773.jar!/cljs/source_map/base64.clj",1593724535000,"jar:file:/home/diego/.m2/repository/org/clojure/clojurescript/1.10.773/clojurescript-1.10.773.jar!/cljs/externs.clj",1593724535000,"jar:file:/home/diego/.m2/repository/org/clojure/clojure/1.10.1/clojure-1.10.1.jar!/clojure/walk.clj",1571270009000,"jar:file:/home/diego/.m2/repository/org/clojure/clojurescript/1.10.773/clojurescript-1.10.773.jar!/cljs/tagged_literals.cljc",1593724535000,"jar:file:/home/diego/.m2/repository/org/clojure/clojure/1.10.1/clojure-1.10.1.jar!/clojure/string.clj",1571270009000,"jar:file:/home/diego/.m2/repository/org/clojure/clojurescript/1.10.773/clojurescript-1.10.773.jar!/cljs/source_map/base64_vlq.clj",1593724535000,"jar:file:/home/diego/.m2/repository/org/clojure/clojure/1.10.1/clojure-1.10.1.jar!/clojure/set.clj",1571270009000,"jar:file:/home/diego/.m2/repository/org/clojure/clojurescript/1.10.773/clojurescript-1.10.773.jar!/cljs/util.cljc",1593724535000,"jar:file:/home/diego/.m2/repository/org/clojure/clojure/1.10.1/clojure-1.10.1.jar!/clojure/edn.clj",1571270009000,"jar:file:/home/diego/.m2/repository/org/clojure/clojure/1.10.1/clojure-1.10.1.jar!/clojure/instant.clj",1571270009000,"jar:file:/home/diego/.m2/repository/org/clojure/clojurescript/1.10.773/clojurescript-1.10.773.jar!/cljs/spec/gen/alpha.cljc",1593724535000,"jar:file:/home/diego/.m2/repository/org/clojure/tools.reader/1.3.3/tools.reader-1.3.3.jar!/clojure/tools/reader/impl/inspect.clj",1599447153000,"jar:file:/home/diego/.m2/repository/org/clojure/clojurescript/1.10.773/clojurescript-1.10.773.jar!/cljs/source_map.clj",1593724535000,"jar:file:/home/diego/.m2/repository/org/clojure/tools.reader/1.3.3/tools.reader-1.3.3.jar!/clojure/tools/reader/impl/errors.clj",1599447153000,"jar:file:/home/diego/.m2/repository/org/clojure/tools.reader/1.3.3/tools.reader-1.3.3.jar!/clojure/tools/reader/default_data_readers.clj",1599447153000,"jar:file:/home/diego/.m2/repository/org/clojure/clojurescript/1.10.773/clojurescript-1.10.773.jar!/cljs/spec/alpha.cljc",1593724535000,"jar:file:/home/diego/.m2/repository/binaryage/devtools/1.0.0/devtools-1.0.0.jar!/devtools/defaults.clj",1600135799000,"jar:file:/home/diego/.m2/repository/org/clojure/tools.reader/1.3.3/tools.reader-1.3.3.jar!/clojure/tools/reader/reader_types.clj",1599447153000,"jar:file:/home/diego/.m2/repository/org/clojure/tools.reader/1.3.3/tools.reader-1.3.3.jar!/clojure/tools/reader.clj",1599447153000],"~:analyzer",["^ ","^3",null,"^4",["^ "],"^5",["^ ","^6","insure0x_calculator/calculations.cljc","^7",1,"^8",5,"^9",1,"^:",37],"^;",["^ ","^<","^=","^>","^?","^@","^A","^B","^C","^D","^E"],"^F",null,"^G",["^H",[]],"^I","^J","^M",null,"^N",["^ ","^D","^E","~$s","^E","^O","^O","^P","^P","^E","^E"],"^Q",["^H",["^R"]],"^S",null,"~:defs",["^ ","~$init-beneficiaries",["^ ","~:protocol-inline",null,"^5",["^ ","^6","insure0x_calculator/calculations.cljc","^7",42,"^8",7,"^9",42,"^:",25,"~:arglists",["^V",["~$quote",["^V",[["~$total","~$fee","~$need"]]]]]],"^I","^1T","^6","insure0x_calculator/calculations.cljc","^:",25,"~:method-params",["^V",[["^3Z","^3[","^40"]]],"~:protocol-impl",null,"~:arglists-meta",["^V",[null,null]],"^8",1,"~:variadic?",false,"^7",42,"~:ret-tag","~$cljs.core/LazySeq","^9",42,"~:max-fixed-arity",3,"~:fn-var",true,"^3X",["^V",["^3Y",["^V",[["^3Z","^3[","^40"]]]]]],"~$simulate-usage",["^ ","^3W",null,"^5",["^ ","^6","insure0x_calculator/calculations.cljc","^7",61,"^8",7,"^9",61,"^:",21,"^3X",["^V",["^3Y",["^V",[[["^ ","~:keys",["~$reserve","~$beneficiaries","~$maximum-amount"],"^X","~$fund"],["^ ","^4:",["~$min-amount"],"^X","~$config"]]]]]]],"^I","^1B","^6","insure0x_calculator/calculations.cljc","^:",21,"^41",["^V",[["~$p__54150","~$p__54151"]]],"^42",null,"^43",["^V",[null,null]],"^8",1,"^44",false,"^7",61,"^45",["^H",["~$any","~$clj-nil"]],"^9",61,"^47",2,"^48",true,"^3X",["^V",["^3Y",["^V",[[["^ ","^4:",["^4;","^4<","^4="],"^X","^4>"],["^ ","^4:",["^4?"],"^X","^4@"]]]]]]],"~$round-val",["^ ","^3W",null,"^5",["^ ","^6","insure0x_calculator/calculations.cljc","^7",115,"^8",7,"^9",115,"^:",16,"^3X",["^V",["^3Y",["^V",[["~$rounding-quotient","~$val"]]]]]],"^I","^1@","^6","insure0x_calculator/calculations.cljc","^:",16,"^41",["^V",[["^4F","^4G"]]],"^42",null,"^43",["^V",[null,null]],"^8",1,"^44",false,"^7",115,"^45","~$number","^9",115,"^47",2,"^48",true,"^3X",["^V",["^3Y",["^V",[["^4F","^4G"]]]]]],"~$run-months",["^ ","^3W",null,"^5",["^ ","^6","insure0x_calculator/calculations.cljc","^7",122,"^8",7,"^9",122,"^:",17,"^3X",["^V",["^3Y",["^V",[["^4>","^4@","~$quantity"]]]]]],"^I","^1P","^6","insure0x_calculator/calculations.cljc","^:",17,"^41",["^V",[["^4>","^4@","^4J"]]],"^42",null,"^43",["^V",[null,null]],"^8",1,"^44",false,"^7",122,"^45",["^H",[null,"^4C"]],"^9",122,"^47",3,"^48",true,"^3X",["^V",["^3Y",["^V",[["^4>","^4@","^4J"]]]]]],"~$init-fund",["^ ","^3W",null,"^5",["^ ","^6","insure0x_calculator/calculations.cljc","^7",24,"^8",7,"^9",24,"^:",16,"^3X",["^V",["^3Y",["^V",[[["^ ","^4:",["^4<","^3[","^4=","~$period"]]]]]]]],"^I","^1V","^6","insure0x_calculator/calculations.cljc","^:",16,"^41",["^V",[["~$p__54147"]]],"^42",null,"^43",["^V",[null,null]],"^8",1,"^44",false,"^7",24,"^45","~$cljs.core/IMap","^9",24,"^47",1,"^48",true,"^3X",["^V",["^3Y",["^V",[[["^ ","^4:",["^4<","^3[","^4=","^4L"]]]]]]]],"~$exceeded-coverage?",["^ ","^3W",null,"^5",["^ ","^6","insure0x_calculator/calculations.cljc","^7",55,"^8",7,"^9",55,"^:",25,"^3X",["^V",["^3Y",["^V",[["~$beneficiary","~$max-amount"]]]]]],"^I","^1S","^6","insure0x_calculator/calculations.cljc","^:",25,"^41",["^V",[["^4P","^4Q"]]],"^42",null,"^43",["^V",[null,null]],"^8",1,"^44",false,"^7",55,"^45","~$boolean","^9",55,"^47",2,"^48",true,"^3X",["^V",["^3Y",["^V",[["^4P","^4Q"]]]]]],"~$rand-range",["^ ","^3W",null,"^5",["^ ","^6","insure0x_calculator/calculations.cljc","^7",45,"^8",7,"^9",45,"^:",17,"^3X",["^V",["^3Y",["^V",[["~$min","~$max"]]]]]],"^I","^1Q","^6","insure0x_calculator/calculations.cljc","^:",17,"^41",["^V",[["^4T","^4U"]]],"^42",null,"^43",["^V",[null,null]],"^8",1,"^44",false,"^7",45,"^45","^4H","^9",45,"^47",2,"^48",true,"^3X",["^V",["^3Y",["^V",[["^4T","^4U"]]]]]],"~$run-month",["^ ","^3W",null,"^5",["^ ","^6","insure0x_calculator/calculations.cljc","^7",109,"^8",7,"^9",109,"^:",16,"^3X",["^V",["^3Y",["^V",[[["^ ","^4:",["^4<","^3["],"^X","^4>"],"^4@","~$month"]]]]]],"^I","^1H","^6","insure0x_calculator/calculations.cljc","^:",16,"^41",["^V",[["~$p__54161","^4@","^4W"]]],"^42",null,"^43",["^V",[null,null]],"^8",1,"^44",false,"^7",109,"^45",["^H",["^4C","^4D"]],"^9",109,"^47",3,"^48",true,"^3X",["^V",["^3Y",["^V",[[["^ ","^4:",["^4<","^3["],"^X","^4>"],"^4@","^4W"]]]]]],"~$update-expenses",["^ ","^3W",null,"^5",["^ ","^6","insure0x_calculator/calculations.cljc","^7",50,"^8",7,"^9",50,"^:",22,"^3X",["^V",["^3Y",["^V",[["~$benficiary","~$amount"]]]]]],"^I","^1=","^6","insure0x_calculator/calculations.cljc","^:",22,"^41",["^V",[["^4Z","^4["]]],"^42",null,"^43",["^V",[null,null]],"^8",1,"^44",false,"^7",50,"^45",["^H",["~$clj","^4C"]],"^9",50,"^47",2,"^48",true,"^3X",["^V",["^3Y",["^V",[["^4Z","^4["]]]]]],"~$init-beneficiary",["^ ","^3W",null,"^5",["^ ","^6","insure0x_calculator/calculations.cljc","^7",32,"^8",7,"^9",32,"^:",23,"^3X",["^V",["^3Y",["^V",[["^3[","^40"]]]]]],"^I","^1I","^6","insure0x_calculator/calculations.cljc","^:",23,"^41",["^V",[["^3[","^40"]]],"^42",null,"^43",["^V",[null,null]],"^8",1,"^44",false,"^7",32,"^45","^4N","^9",32,"^47",2,"^48",true,"^3X",["^V",["^3Y",["^V",[["^3[","^40"]]]]]]],"^T",["^ ","^O","^O","^D","^E","~$s","^E","^E","^E"],"~:cljs.analyzer/constants",["^ ","^Q",["^H",["~$cljs.spec.alpha/*","~:req-un","~:opt-un","~:fee","~:gfn","~$cljs.core/>","~:pred-exprs","~:keys-pred","~:insure0x-calculator.calculations/total-times-required","~$p1__54141#","~:opt-keys","~:reserve","~:insure0x-calculator.calculations/beneficiaries","~:partial-cash-unserved","~:insure0x-calculator.calculations/days","~$cljs.spec.alpha/and","~$p1__54138#","~:min-amount","~:served","^1D","~:covered-expenses","~:total-expenses","~:req-specs","~$p1__54144#","~:months","~:uncovered-expenses","~$p1__54142#","^1J","^1K","~$%","~:insure0x-calculator.calculations/expense","~$cljs.spec.alpha/keys","~:insure0x-calculator.calculations/period","^1R","~:req","~:partial","~:total","~$p1__54139#","~:insure0x-calculator.calculations/reserve","~:insure0x-calculator.calculations/covered-expenses","~$fn*","~:insure0x-calculator.calculations/beneficiary","~:benficiaries","~:insure0x-calculator.calculations/need%","~:insure0x-calculator.calculations/maximum-amount","~:unserved","~:req-keys","~$cljs.core/fn","~:opt-specs","~:insure0x-calculator.calculations/total-expenses","~:total-times-required","~:pred-forms","~:total-beneficiaries","~:insure0x-calculator.calculations/months","~$p1__54140#","~:insure0x-calculator.calculations/uncovered-expenses","~:insure0x-calculator.calculations/total-beneficiaries","~:total-invested","~:insure0x-calculator.calculations/percentage","~:period","~:need%","~$p1__54145#","~:maximum-amount","~:beneficiaries","~:insure0x-calculator.calculations/fee","~$cljs.core/>=","~:total-expenses-in-period","~:insure0x-calculator.calculations/fund","~:opt"]],"~:order",["^6<","^5B","^1R","^5V","^5C","^6C","^61","~$%","^5M","^5S","^58","^5A","^1D","^68","^67","^5<","^5Y","^5;","^5L","^63","^5U","^69","^5W","^5N","^54","^55","^57","^59","^5:","^5=","^5H","^5P","^60","^62","^65","^6F","^6>","^5G","^64","^5F","^5K","^5J","^1K","^1J","^5?","^53","^6B","^5I","^5T","^6?","^5Z","^5O","^6E","^6:","^5>","^66","^6@","^6=","^6A","^56","^5[","^6D","^6;","^5D","^5E","^5@","^5Q","^5R","^5X"]],"^Y",["^ ","^R",["^H",[]]],"^Z",["^ "],"^[",["^P","^O","^E"]],"^L","^J","~:ns-specs",["^ ","^5;",["^V",["^5B","^1D",["^V",["^5V",["^5L"],["^V",["^58","^5L",0]]]]]],"^5?",["^V",["^53","^5W"]],"^5A",["^V",["^5B","^1D",["^V",["^5V",["^68"],["^V",["^58","^68",0]]]]]],"^5M",["^V",["^5B","^1R",["^V",["^5V",["^5S"],["^V",["^58","^5S",0]]]]]],"^5O","^5A","^5T",["^V",["^5B","^1R",["^V",["^5V",["^6?"],["^V",["^6C","^6?",0]]]]]],"^5U","^5M","^5W",["^V",["^5N","^54",["^5Y","^63","^5;","^5U","^69","^67"]]],"^5Y","^6<","^5Z","^5M","^63","^5M","^67",["^V",["^5B","^1D",["^V",["^5V",["^5<"],["^V",["^58","^5<",0]]]]]],"^69","^5M","^6<",["^V",["^5B","^1R",["^V",["^5V",["^5C"],["^V",["^6C",100,"^5C",0]]]]]],"^6B",["^V",["^5B","^1R",["^V",["^5V",["^5I"],["^V",["^58","^5I",0]]]]]],"^6E",["^V",["^5N","^54",["^5T","^6:","^5Z","^5O","^5?"]]]],"~:ns-spec-vars",["^H",[]],"~:compiler-options",["^21",[["^6J","~:static-fns"],true,["^6J","~:shadow-tweaks"],null,["^6J","~:source-map-inline"],null,["^6J","~:elide-asserts"],false,["^6J","~:optimize-constants"],null,["^6J","^14"],null,["^6J","~:external-config"],null,["^6J","~:tooling-config"],null,["^6J","~:emit-constants"],null,["^6J","~:load-tests"],null,["^6J","~:form-size-threshold"],null,["^6J","~:data-readers"],null,["^6J","~:infer-externs"],"~:auto",["^6J","^16"],null,["~:js-options","~:js-provider"],"~:shadow",["~:mode"],"~:dev",["^6J","~:fn-invoke-direct"],null,["^6J","~:source-map"],"/dev/null"]]]