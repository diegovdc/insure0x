["^ ","~:output",["^ ","~:js","goog.provide('taoensso.sente');\nif(cljs.core.vector_QMARK_(taoensso.encore.encore_version)){\ntaoensso.encore.assert_min_encore_version(new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [(2),(79),(1)], null));\n} else {\ntaoensso.encore.assert_min_encore_version(2.79);\n}\n/**\n * Useful for identifying client/server mismatch\n */\ntaoensso.sente.sente_version = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [(1),(11),(0)], null);\ntaoensso.sente.node_target_QMARK_ = cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core._STAR_target_STAR_,\"nodejs\");\nif((typeof taoensso !== 'undefined') && (typeof taoensso.sente !== 'undefined') && (typeof taoensso.sente.debug_mode_QMARK__ !== 'undefined')){\n} else {\ntaoensso.sente.debug_mode_QMARK__ = cljs.core.atom.cljs$core$IFn$_invoke$arity$1(false);\n}\ntaoensso.sente.expected = (function taoensso$sente$expected(expected,x){\nreturn new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\"expected\",\"expected\",1583670997),expected,new cljs.core.Keyword(null,\"actual\",\"actual\",107306363),new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\"type\",\"type\",1174270348),cljs.core.type(x),new cljs.core.Keyword(null,\"value\",\"value\",305978217),x], null)], null);\n});\n/**\n * Returns nil if given argument is a valid [ev-id ?ev-data] form. Otherwise\n *   returns a map of validation errors like `{:wrong-type {:expected _ :actual _}}`.\n */\ntaoensso.sente.validate_event = (function taoensso$sente$validate_event(x){\nif((!(cljs.core.vector_QMARK_(x)))){\nreturn new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"wrong-type\",\"wrong-type\",929556915),taoensso.sente.expected(new cljs.core.Keyword(null,\"vector\",\"vector\",1902966158),x)], null);\n} else {\nif(cljs.core.not((function (){var G__43313 = cljs.core.count(x);\nvar fexpr__43312 = new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [(1),null,(2),null], null), null);\nreturn (fexpr__43312.cljs$core$IFn$_invoke$arity$1 ? fexpr__43312.cljs$core$IFn$_invoke$arity$1(G__43313) : fexpr__43312.call(null,G__43313));\n})())){\nreturn new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"wrong-length\",\"wrong-length\",1367572281),taoensso.sente.expected(new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [(1),null,(2),null], null), null),x)], null);\n} else {\nvar vec__43314 = x;\nvar ev_id = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__43314,(0),null);\nvar _ = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__43314,(1),null);\nif((!((ev_id instanceof cljs.core.Keyword)))){\nreturn new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"wrong-id-type\",\"wrong-id-type\",-1213601689),taoensso.sente.expected(new cljs.core.Keyword(null,\"keyword\",\"keyword\",811389747),ev_id)], null);\n} else {\nif(cljs.core.not(cljs.core.namespace(ev_id))){\nreturn new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"unnamespaced-id\",\"unnamespaced-id\",1976189772),taoensso.sente.expected(new cljs.core.Keyword(null,\"namespaced-keyword\",\"namespaced-keyword\",131372895),ev_id)], null);\n} else {\nreturn null;\n\n}\n}\n\n}\n}\n});\n/**\n * Returns given argument if it is a valid [ev-id ?ev-data] form. Otherwise\n *   throws a validation exception.\n */\ntaoensso.sente.assert_event = (function taoensso$sente$assert_event(x){\nvar temp__5735__auto__ = taoensso.sente.validate_event(x);\nif(cljs.core.truth_(temp__5735__auto__)){\nvar errs = temp__5735__auto__;\nthrow cljs.core.ex_info.cljs$core$IFn$_invoke$arity$2(\"Invalid event\",new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\"given\",\"given\",716253602),x,new cljs.core.Keyword(null,\"errors\",\"errors\",-908790718),errs], null));\n} else {\nreturn null;\n}\n});\n/**\n * Valid [ev-id ?ev-data] form?\n */\ntaoensso.sente.event_QMARK_ = (function taoensso$sente$event_QMARK_(x){\nreturn (taoensso.sente.validate_event(x) == null);\n});\ntaoensso.sente.as_event = (function taoensso$sente$as_event(x){\nvar temp__5733__auto__ = taoensso.sente.validate_event(x);\nif(cljs.core.truth_(temp__5733__auto__)){\nvar errs = temp__5733__auto__;\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"chsk\",\"bad-event\",\"chsk/bad-event\",-565206930),x], null);\n} else {\nreturn x;\n}\n});\ntaoensso.sente.client_event_msg_QMARK_ = (function taoensso$sente$client_event_msg_QMARK_(x){\nif(cljs.core.map_QMARK_(x)){\nif(taoensso.encore.ks_EQ_(new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null,\"ch-recv\",\"ch-recv\",-990916861),null,new cljs.core.Keyword(null,\"state\",\"state\",-1988618099),null,new cljs.core.Keyword(null,\"event\",\"event\",301435442),null,new cljs.core.Keyword(null,\"id\",\"id\",-1388402092),null,new cljs.core.Keyword(null,\"?data\",\"?data\",-9471433),null,new cljs.core.Keyword(null,\"send-fn\",\"send-fn\",351002041),null], null), null),x)){\nvar map__43321 = x;\nvar map__43321__$1 = (((((!((map__43321 == null))))?(((((map__43321.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__43321.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__43321):map__43321);\nvar ch_recv = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__43321__$1,new cljs.core.Keyword(null,\"ch-recv\",\"ch-recv\",-990916861));\nvar send_fn = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__43321__$1,new cljs.core.Keyword(null,\"send-fn\",\"send-fn\",351002041));\nvar state = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__43321__$1,new cljs.core.Keyword(null,\"state\",\"state\",-1988618099));\nvar event = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__43321__$1,new cljs.core.Keyword(null,\"event\",\"event\",301435442));\nreturn ((taoensso.encore.chan_QMARK_(ch_recv)) && (cljs.core.ifn_QMARK_(send_fn)) && (taoensso.encore.atom_QMARK_(state)) && (taoensso.sente.event_QMARK_(event)));\n} else {\nreturn false;\n}\n} else {\nreturn false;\n}\n});\ntaoensso.sente.server_event_msg_QMARK_ = (function taoensso$sente$server_event_msg_QMARK_(x){\nif(cljs.core.map_QMARK_(x)){\nif(taoensso.encore.ks_EQ_(new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 10, [new cljs.core.Keyword(null,\"?reply-fn\",\"?reply-fn\",-1479510592),null,new cljs.core.Keyword(null,\"ch-recv\",\"ch-recv\",-990916861),null,new cljs.core.Keyword(null,\"client-id\",\"client-id\",-464622140),null,new cljs.core.Keyword(null,\"connected-uids\",\"connected-uids\",1454332231),null,new cljs.core.Keyword(null,\"uid\",\"uid\",-1447769400),null,new cljs.core.Keyword(null,\"event\",\"event\",301435442),null,new cljs.core.Keyword(null,\"id\",\"id\",-1388402092),null,new cljs.core.Keyword(null,\"ring-req\",\"ring-req\",-747861961),null,new cljs.core.Keyword(null,\"?data\",\"?data\",-9471433),null,new cljs.core.Keyword(null,\"send-fn\",\"send-fn\",351002041),null], null), null),x)){\nvar map__43327 = x;\nvar map__43327__$1 = (((((!((map__43327 == null))))?(((((map__43327.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__43327.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__43327):map__43327);\nvar ch_recv = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__43327__$1,new cljs.core.Keyword(null,\"ch-recv\",\"ch-recv\",-990916861));\nvar send_fn = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__43327__$1,new cljs.core.Keyword(null,\"send-fn\",\"send-fn\",351002041));\nvar connected_uids = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__43327__$1,new cljs.core.Keyword(null,\"connected-uids\",\"connected-uids\",1454332231));\nvar ring_req = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__43327__$1,new cljs.core.Keyword(null,\"ring-req\",\"ring-req\",-747861961));\nvar client_id = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__43327__$1,new cljs.core.Keyword(null,\"client-id\",\"client-id\",-464622140));\nvar event = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__43327__$1,new cljs.core.Keyword(null,\"event\",\"event\",301435442));\nvar _QMARK_reply_fn = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__43327__$1,new cljs.core.Keyword(null,\"?reply-fn\",\"?reply-fn\",-1479510592));\nreturn ((taoensso.encore.chan_QMARK_(ch_recv)) && (cljs.core.ifn_QMARK_(send_fn)) && (taoensso.encore.atom_QMARK_(connected_uids)) && (cljs.core.map_QMARK_(ring_req)) && (taoensso.encore.nblank_str_QMARK_(client_id)) && (taoensso.sente.event_QMARK_(event)) && ((((_QMARK_reply_fn == null)) || (cljs.core.ifn_QMARK_(_QMARK_reply_fn)))));\n} else {\nreturn false;\n}\n} else {\nreturn false;\n}\n});\n/**\n * All server `event-msg`s go through this\n */\ntaoensso.sente.put_server_event_msg_GT_ch_recv_BANG_ = (function taoensso$sente$put_server_event_msg_GT_ch_recv_BANG_(ch_recv,p__43329){\nvar map__43330 = p__43329;\nvar map__43330__$1 = (((((!((map__43330 == null))))?(((((map__43330.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__43330.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__43330):map__43330);\nvar ev_msg = map__43330__$1;\nvar event = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__43330__$1,new cljs.core.Keyword(null,\"event\",\"event\",301435442));\nvar _QMARK_reply_fn = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__43330__$1,new cljs.core.Keyword(null,\"?reply-fn\",\"?reply-fn\",-1479510592));\nvar vec__43332 = taoensso.sente.as_event(event);\nvar ev_id = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__43332,(0),null);\nvar ev__QMARK_data = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__43332,(1),null);\nvar valid_event = vec__43332;\nvar ev_msg_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([ev_msg,new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null,\"event\",\"event\",301435442),valid_event,new cljs.core.Keyword(null,\"?reply-fn\",\"?reply-fn\",-1479510592),_QMARK_reply_fn,new cljs.core.Keyword(null,\"id\",\"id\",-1388402092),ev_id,new cljs.core.Keyword(null,\"?data\",\"?data\",-9471433),ev__QMARK_data], null)], 0));\nif((!(taoensso.sente.server_event_msg_QMARK_(ev_msg_STAR_)))){\nreturn taoensso.timbre._log_BANG_.cljs$core$IFn$_invoke$arity$10(taoensso.timbre._STAR_config_STAR_,new cljs.core.Keyword(null,\"warn\",\"warn\",-436710552),\"taoensso.sente\",null,187,new cljs.core.Keyword(null,\"f\",\"f\",-1597136552),new cljs.core.Keyword(null,\"auto\",\"auto\",-566279492),(new cljs.core.Delay((function (){\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [\"Bad ev-msg: %s\",ev_msg], null);\n}),null)),null,1690674802);\n} else {\nreturn cljs.core.async.put_BANG_.cljs$core$IFn$_invoke$arity$2(ch_recv,ev_msg_STAR_);\n}\n});\ntaoensso.sente.cb_error_QMARK_ = (function taoensso$sente$cb_error_QMARK_(cb_reply_clj){\nvar fexpr__43335 = new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(\"chsk\",\"closed\",\"chsk/closed\",-922855264),null,new cljs.core.Keyword(\"chsk\",\"error\",\"chsk/error\",-984175439),null,new cljs.core.Keyword(\"chsk\",\"timeout\",\"chsk/timeout\",-319776489),null], null), null);\nreturn (fexpr__43335.cljs$core$IFn$_invoke$arity$1 ? fexpr__43335.cljs$core$IFn$_invoke$arity$1(cb_reply_clj) : fexpr__43335.call(null,cb_reply_clj));\n});\ntaoensso.sente.cb_success_QMARK_ = (function taoensso$sente$cb_success_QMARK_(cb_reply_clj){\nreturn cljs.core.not(taoensso.sente.cb_error_QMARK_(cb_reply_clj));\n});\n/**\n * prefixed-pstr->[clj ?cb-uuid]\n */\ntaoensso.sente.unpack = (function taoensso$sente$unpack(packer,prefixed_pstr){\nif(typeof prefixed_pstr === 'string'){\n} else {\ntaoensso.truss.impl._invar_violation_BANG_(true,\"taoensso.sente\",201,\"(string? prefixed-pstr)\",prefixed_pstr,null,null);\n}\n\nvar wrapped_QMARK_ = taoensso.encore.str_starts_with_QMARK_(prefixed_pstr,\"+\");\nvar pstr = cljs.core.subs.cljs$core$IFn$_invoke$arity$2(prefixed_pstr,(1));\nvar clj = (function (){try{return taoensso.sente.interfaces.unpack(packer,pstr);\n}catch (e43339){var t = e43339;\ntaoensso.timbre._log_BANG_.cljs$core$IFn$_invoke$arity$10(taoensso.timbre._STAR_config_STAR_,new cljs.core.Keyword(null,\"debug\",\"debug\",-1608172596),\"taoensso.sente\",null,208,new cljs.core.Keyword(null,\"f\",\"f\",-1597136552),new cljs.core.Keyword(null,\"auto\",\"auto\",-566279492),(new cljs.core.Delay((function (){\nreturn new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [\"Bad package: %s (%s)\",pstr,t], null);\n}),null)),null,-717992685);\n\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"chsk\",\"bad-package\",\"chsk/bad-package\",501893679),pstr], null);\n}})();\nvar vec__43336 = ((wrapped_QMARK_)?clj:new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [clj,null], null));\nvar clj__$1 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__43336,(0),null);\nvar _QMARK_cb_uuid = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__43336,(1),null);\nvar _QMARK_cb_uuid__$1 = ((cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2((0),_QMARK_cb_uuid))?new cljs.core.Keyword(null,\"ajax-cb\",\"ajax-cb\",-807060321):_QMARK_cb_uuid);\ntaoensso.timbre._log_BANG_.cljs$core$IFn$_invoke$arity$10(taoensso.timbre._STAR_config_STAR_,new cljs.core.Keyword(null,\"trace\",\"trace\",-1082747415),\"taoensso.sente\",null,214,new cljs.core.Keyword(null,\"f\",\"f\",-1597136552),new cljs.core.Keyword(null,\"auto\",\"auto\",-566279492),(new cljs.core.Delay((function (){\nreturn new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [\"Unpacking: %s -> %s\",prefixed_pstr,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [clj__$1,_QMARK_cb_uuid__$1], null)], null);\n}),null)),null,-1714991514);\n\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [clj__$1,_QMARK_cb_uuid__$1], null);\n});\n/**\n * clj->prefixed-pstr\n */\ntaoensso.sente.pack = (function taoensso$sente$pack(var_args){\nvar G__43341 = arguments.length;\nswitch (G__43341) {\ncase 2:\nreturn taoensso.sente.pack.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\n\nbreak;\ncase 3:\nreturn taoensso.sente.pack.cljs$core$IFn$_invoke$arity$3((arguments[(0)]),(arguments[(1)]),(arguments[(2)]));\n\nbreak;\ndefault:\nthrow (new Error([\"Invalid arity: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join('')));\n\n}\n});\n\n(taoensso.sente.pack.cljs$core$IFn$_invoke$arity$2 = (function (packer,clj){\nvar pstr = [\"-\",cljs.core.str.cljs$core$IFn$_invoke$arity$1(taoensso.sente.interfaces.pack(packer,clj))].join('');\ntaoensso.timbre._log_BANG_.cljs$core$IFn$_invoke$arity$10(taoensso.timbre._STAR_config_STAR_,new cljs.core.Keyword(null,\"trace\",\"trace\",-1082747415),\"taoensso.sente\",null,221,new cljs.core.Keyword(null,\"f\",\"f\",-1597136552),new cljs.core.Keyword(null,\"auto\",\"auto\",-566279492),(new cljs.core.Delay((function (){\nreturn new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [\"Packing (unwrapped): %s -> %s\",clj,pstr], null);\n}),null)),null,-1378349884);\n\nreturn pstr;\n}));\n\n(taoensso.sente.pack.cljs$core$IFn$_invoke$arity$3 = (function (packer,clj,_QMARK_cb_uuid){\nvar _QMARK_cb_uuid__$1 = ((cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(_QMARK_cb_uuid,new cljs.core.Keyword(null,\"ajax-cb\",\"ajax-cb\",-807060321)))?(0):_QMARK_cb_uuid);\nvar wrapped_clj = (cljs.core.truth_(_QMARK_cb_uuid__$1)?new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [clj,_QMARK_cb_uuid__$1], null):new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [clj], null));\nvar pstr = [\"+\",cljs.core.str.cljs$core$IFn$_invoke$arity$1(taoensso.sente.interfaces.pack(packer,wrapped_clj))].join('');\ntaoensso.timbre._log_BANG_.cljs$core$IFn$_invoke$arity$10(taoensso.timbre._STAR_config_STAR_,new cljs.core.Keyword(null,\"trace\",\"trace\",-1082747415),\"taoensso.sente\",null,230,new cljs.core.Keyword(null,\"f\",\"f\",-1597136552),new cljs.core.Keyword(null,\"auto\",\"auto\",-566279492),(new cljs.core.Delay((function (){\nreturn new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [\"Packing (wrapped): %s -> %s\",wrapped_clj,pstr], null);\n}),null)),null,59340213);\n\nreturn pstr;\n}));\n\n(taoensso.sente.pack.cljs$lang$maxFixedArity = 3);\n\n\n/**\n* @constructor\n * @implements {taoensso.sente.interfaces.IPacker}\n*/\ntaoensso.sente.EdnPacker = (function (){\n});\n(taoensso.sente.EdnPacker.prototype.taoensso$sente$interfaces$IPacker$ = cljs.core.PROTOCOL_SENTINEL);\n\n(taoensso.sente.EdnPacker.prototype.taoensso$sente$interfaces$IPacker$pack$arity$2 = (function (_,x){\nvar self__ = this;\nvar ___$1 = this;\nreturn taoensso.encore.pr_edn.cljs$core$IFn$_invoke$arity$1(x);\n}));\n\n(taoensso.sente.EdnPacker.prototype.taoensso$sente$interfaces$IPacker$unpack$arity$2 = (function (_,s){\nvar self__ = this;\nvar ___$1 = this;\nreturn taoensso.encore.read_edn.cljs$core$IFn$_invoke$arity$1(s);\n}));\n\n(taoensso.sente.EdnPacker.getBasis = (function (){\nreturn cljs.core.PersistentVector.EMPTY;\n}));\n\n(taoensso.sente.EdnPacker.cljs$lang$type = true);\n\n(taoensso.sente.EdnPacker.cljs$lang$ctorStr = \"taoensso.sente/EdnPacker\");\n\n(taoensso.sente.EdnPacker.cljs$lang$ctorPrWriter = (function (this__4369__auto__,writer__4370__auto__,opt__4371__auto__){\nreturn cljs.core._write(writer__4370__auto__,\"taoensso.sente/EdnPacker\");\n}));\n\n/**\n * Positional factory function for taoensso.sente/EdnPacker.\n */\ntaoensso.sente.__GT_EdnPacker = (function taoensso$sente$__GT_EdnPacker(){\nreturn (new taoensso.sente.EdnPacker());\n});\n\ntaoensso.sente.default_edn_packer = (new taoensso.sente.EdnPacker());\ntaoensso.sente.coerce_packer = (function taoensso$sente$coerce_packer(x){\nif(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(x,new cljs.core.Keyword(null,\"edn\",\"edn\",1317840885))){\nreturn taoensso.sente.default_edn_packer;\n} else {\nvar e = (function (){try{if((function (p1__43342_SHARP_){\nif((!((p1__43342_SHARP_ == null)))){\nif(((false) || ((cljs.core.PROTOCOL_SENTINEL === p1__43342_SHARP_.taoensso$sente$interfaces$IPacker$)))){\nreturn true;\n} else {\nif((!p1__43342_SHARP_.cljs$lang$protocol_mask$partition$)){\nreturn cljs.core.native_satisfies_QMARK_(taoensso.sente.interfaces.IPacker,p1__43342_SHARP_);\n} else {\nreturn false;\n}\n}\n} else {\nreturn cljs.core.native_satisfies_QMARK_(taoensso.sente.interfaces.IPacker,p1__43342_SHARP_);\n}\n})(x)){\nreturn null;\n} else {\nreturn taoensso.truss.impl._dummy_error;\n}\n}catch (e43343){if((e43343 instanceof Error)){\nvar e = e43343;\nreturn e;\n} else {\nthrow e43343;\n\n}\n}})();\nif((e == null)){\nreturn x;\n} else {\nreturn taoensso.truss.impl._invar_violation_BANG_(true,\"taoensso.sente\",243,\"((fn* [p1__43342#] (satisfies? interfaces/IPacker p1__43342#)) x)\",x,e,null);\n}\n}\n});\ntaoensso.sente.next_idx_BANG_ = taoensso.encore.idx_fn();\n\n\n/**\n * Takes a web server adapter[1] and returns a map with keys:\n *  :ch-recv ; core.async channel to receive `event-msg`s (internal or from clients).\n *  :send-fn ; (fn [user-id ev] for server>user push.\n *  :ajax-post-fn                ; (fn [ring-req]) for Ring CSRF-POST + chsk URL.\n *  :ajax-get-or-ws-handshake-fn ; (fn [ring-req]) for Ring GET + chsk URL.\n *  :connected-uids ; Watchable, read-only (atom {:ws #{_} :ajax #{_} :any #{_}}).\n * \n *   Common options:\n *  :user-id-fn        ; (fn [ring-req]) -> unique user-id for server>user push.\n *  :csrf-token-fn     ; (fn [ring-req]) -> CSRF token for Ajax POSTs.\n *  :handshake-data-fn ; (fn [ring-req]) -> arb user data to append to handshake evs.\n *  :ws-kalive-ms      ; Ping to keep a WebSocket conn alive if no activity\n *                     ; w/in given msecs. Should be different to client's :ws-kalive-ms.\n *  :lp-timeout-ms     ; Timeout (repoll) long-polling Ajax conns after given msecs.\n *  :send-buf-ms-ajax  ; [2]\n *  :send-buf-ms-ws    ; [2]\n *  :packer            ; :edn (default), or an IPacker implementation.\n * \n *   [1] e.g. `(taoensso.sente.server-adapters.http-kit/get-sch-adapter)` or\n *         `(taoensso.sente.server-adapters.immutant/get-sch-adapter)`.\n *    You must have the necessary web-server dependency in your project.clj and\n *    the necessary entry in your namespace's `ns` form.\n * \n *   [2] Optimization to allow transparent batching of rapidly-triggered\n *    server>user pushes. This is esp. important for Ajax clients which use a\n *    (slow) reconnecting poller. Actual event dispatch may occur <= given ms\n *    after send call (larger values => larger batch windows).\n */\ntaoensso.sente.make_channel_socket_server_BANG_ = (function taoensso$sente$make_channel_socket_server_BANG_(var_args){\nvar args__4742__auto__ = [];\nvar len__4736__auto___44114 = arguments.length;\nvar i__4737__auto___44115 = (0);\nwhile(true){\nif((i__4737__auto___44115 < len__4736__auto___44114)){\nargs__4742__auto__.push((arguments[i__4737__auto___44115]));\n\nvar G__44116 = (i__4737__auto___44115 + (1));\ni__4737__auto___44115 = G__44116;\ncontinue;\n} else {\n}\nbreak;\n}\n\nvar argseq__4743__auto__ = ((((1) < args__4742__auto__.length))?(new cljs.core.IndexedSeq(args__4742__auto__.slice((1)),(0),null)):null);\nreturn taoensso.sente.make_channel_socket_server_BANG_.cljs$core$IFn$_invoke$arity$variadic((arguments[(0)]),argseq__4743__auto__);\n});\n\n(taoensso.sente.make_channel_socket_server_BANG_.cljs$core$IFn$_invoke$arity$variadic = (function (web_server_ch_adapter,p__43348){\nvar vec__43349 = p__43348;\nvar map__43352 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__43349,(0),null);\nvar map__43352__$1 = (((((!((map__43352 == null))))?(((((map__43352.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__43352.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__43352):map__43352);\nvar ws_kalive_ms = cljs.core.get.cljs$core$IFn$_invoke$arity$3(map__43352__$1,new cljs.core.Keyword(null,\"ws-kalive-ms\",\"ws-kalive-ms\",1442179968),taoensso.encore.ms.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([new cljs.core.Keyword(null,\"secs\",\"secs\",1532330091),(25)], 0)));\nvar send_buf_ms_ws = cljs.core.get.cljs$core$IFn$_invoke$arity$3(map__43352__$1,new cljs.core.Keyword(null,\"send-buf-ms-ws\",\"send-buf-ms-ws\",-1149586238),(30));\nvar lp_timeout_ms = cljs.core.get.cljs$core$IFn$_invoke$arity$3(map__43352__$1,new cljs.core.Keyword(null,\"lp-timeout-ms\",\"lp-timeout-ms\",-1451963133),taoensso.encore.ms.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([new cljs.core.Keyword(null,\"secs\",\"secs\",1532330091),(20)], 0)));\nvar csrf_token_fn = cljs.core.get.cljs$core$IFn$_invoke$arity$3(map__43352__$1,new cljs.core.Keyword(null,\"csrf-token-fn\",\"csrf-token-fn\",-1846298394),(function (ring_req){\nvar or__4126__auto__ = new cljs.core.Keyword(null,\"anti-forgery-token\",\"anti-forgery-token\",806990841).cljs$core$IFn$_invoke$arity$1(ring_req);\nif(cljs.core.truth_(or__4126__auto__)){\nreturn or__4126__auto__;\n} else {\nvar or__4126__auto____$1 = cljs.core.get_in.cljs$core$IFn$_invoke$arity$2(ring_req,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"session\",\"session\",1008279103),new cljs.core.Keyword(null,\"csrf-token\",\"csrf-token\",-1872302856)], null));\nif(cljs.core.truth_(or__4126__auto____$1)){\nreturn or__4126__auto____$1;\n} else {\nvar or__4126__auto____$2 = cljs.core.get_in.cljs$core$IFn$_invoke$arity$2(ring_req,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"session\",\"session\",1008279103),new cljs.core.Keyword(\"ring.middleware.anti-forgery\",\"anti-forgery-token\",\"ring.middleware.anti-forgery/anti-forgery-token\",571563484)], null));\nif(cljs.core.truth_(or__4126__auto____$2)){\nreturn or__4126__auto____$2;\n} else {\nreturn cljs.core.get_in.cljs$core$IFn$_invoke$arity$2(ring_req,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"session\",\"session\",1008279103),\"__anti-forgery-token\"], null));\n}\n}\n}\n}));\nvar packer = cljs.core.get.cljs$core$IFn$_invoke$arity$3(map__43352__$1,new cljs.core.Keyword(null,\"packer\",\"packer\",66077544),new cljs.core.Keyword(null,\"edn\",\"edn\",1317840885));\nvar send_buf_ms_ajax = cljs.core.get.cljs$core$IFn$_invoke$arity$3(map__43352__$1,new cljs.core.Keyword(null,\"send-buf-ms-ajax\",\"send-buf-ms-ajax\",1546129037),(100));\nvar handshake_data_fn = cljs.core.get.cljs$core$IFn$_invoke$arity$3(map__43352__$1,new cljs.core.Keyword(null,\"handshake-data-fn\",\"handshake-data-fn\",2011983089),(function (ring_req){\nreturn null;\n}));\nvar user_id_fn = cljs.core.get.cljs$core$IFn$_invoke$arity$3(map__43352__$1,new cljs.core.Keyword(null,\"user-id-fn\",\"user-id-fn\",-1532150029),(function (ring_req){\nreturn cljs.core.get_in.cljs$core$IFn$_invoke$arity$2(ring_req,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"session\",\"session\",1008279103),new cljs.core.Keyword(null,\"uid\",\"uid\",-1447769400)], null));\n}));\nvar recv_buf_or_n = cljs.core.get.cljs$core$IFn$_invoke$arity$3(map__43352__$1,new cljs.core.Keyword(null,\"recv-buf-or-n\",\"recv-buf-or-n\",1363950355),cljs.core.async.sliding_buffer((1000)));\nnew cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var e = (function (){try{if(taoensso.encore.pos_int_QMARK_(send_buf_ms_ajax)){\nreturn null;\n} else {\nreturn taoensso.truss.impl._dummy_error;\n}\n}catch (e43354){if((e43354 instanceof Error)){\nvar e = e43354;\nreturn e;\n} else {\nthrow e43354;\n\n}\n}})();\nif((e == null)){\nreturn true;\n} else {\nreturn taoensso.truss.impl._invar_violation_BANG_(true,\"taoensso.sente\",314,\"(enc/pos-int? send-buf-ms-ajax)\",send_buf_ms_ajax,e,null);\n}\n})(),(function (){var e = (function (){try{if(taoensso.encore.pos_int_QMARK_(send_buf_ms_ws)){\nreturn null;\n} else {\nreturn taoensso.truss.impl._dummy_error;\n}\n}catch (e43355){if((e43355 instanceof Error)){\nvar e = e43355;\nreturn e;\n} else {\nthrow e43355;\n\n}\n}})();\nif((e == null)){\nreturn true;\n} else {\nreturn taoensso.truss.impl._invar_violation_BANG_(true,\"taoensso.sente\",314,\"(enc/pos-int? send-buf-ms-ws)\",send_buf_ms_ws,e,null);\n}\n})()], null);\n\nvar e_44117 = (function (){try{if((function (p1__43345_SHARP_){\nif((!((p1__43345_SHARP_ == null)))){\nif(((false) || ((cljs.core.PROTOCOL_SENTINEL === p1__43345_SHARP_.taoensso$sente$interfaces$IServerChanAdapter$)))){\nreturn true;\n} else {\nif((!p1__43345_SHARP_.cljs$lang$protocol_mask$partition$)){\nreturn cljs.core.native_satisfies_QMARK_(taoensso.sente.interfaces.IServerChanAdapter,p1__43345_SHARP_);\n} else {\nreturn false;\n}\n}\n} else {\nreturn cljs.core.native_satisfies_QMARK_(taoensso.sente.interfaces.IServerChanAdapter,p1__43345_SHARP_);\n}\n})(web_server_ch_adapter)){\nreturn null;\n} else {\nreturn taoensso.truss.impl._dummy_error;\n}\n}catch (e43356){if((e43356 instanceof Error)){\nvar e_44117 = e43356;\nreturn e_44117;\n} else {\nthrow e43356;\n\n}\n}})();\nif((e_44117 == null)){\n} else {\ntaoensso.truss.impl._invar_violation_BANG_(true,\"taoensso.sente\",315,\"((fn* [p1__43345#] (satisfies? interfaces/IServerChanAdapter p1__43345#)) web-server-ch-adapter)\",web_server_ch_adapter,e_44117,null);\n}\n\nvar max_ms_44118 = taoensso.sente.default_client_side_ajax_timeout_ms;\nif((lp_timeout_ms >= max_ms_44118)){\nthrow cljs.core.ex_info.cljs$core$IFn$_invoke$arity$2([\":lp-timeout-ms must be < \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(max_ms_44118)].join(''),new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\"lp-timeout-ms\",\"lp-timeout-ms\",-1451963133),lp_timeout_ms,new cljs.core.Keyword(null,\"default-client-side-ajax-timeout-ms\",\"default-client-side-ajax-timeout-ms\",1149929762),max_ms_44118], null));\n} else {\n}\n\nvar packer__$1 = taoensso.sente.coerce_packer(packer);\nvar ch_recv = cljs.core.async.chan.cljs$core$IFn$_invoke$arity$1(recv_buf_or_n);\nvar user_id_fn__$1 = (function (ring_req,client_id){\nvar or__4126__auto__ = (function (){var G__43359 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(ring_req,new cljs.core.Keyword(null,\"client-id\",\"client-id\",-464622140),client_id);\nreturn (user_id_fn.cljs$core$IFn$_invoke$arity$1 ? user_id_fn.cljs$core$IFn$_invoke$arity$1(G__43359) : user_id_fn.call(null,G__43359));\n})();\nif(cljs.core.truth_(or__4126__auto__)){\nreturn or__4126__auto__;\n} else {\nreturn new cljs.core.Keyword(\"taoensso.sente\",\"nil-uid\",\"taoensso.sente/nil-uid\",-2111603486);\n}\n});\nvar conns_ = cljs.core.atom.cljs$core$IFn$_invoke$arity$1(new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\"ws\",\"ws\",86841443),cljs.core.PersistentArrayMap.EMPTY,new cljs.core.Keyword(null,\"ajax\",\"ajax\",814345549),cljs.core.PersistentArrayMap.EMPTY], null));\nvar send_buffers_ = cljs.core.atom.cljs$core$IFn$_invoke$arity$1(new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\"ws\",\"ws\",86841443),cljs.core.PersistentArrayMap.EMPTY,new cljs.core.Keyword(null,\"ajax\",\"ajax\",814345549),cljs.core.PersistentArrayMap.EMPTY], null));\nvar connected_uids_ = cljs.core.atom.cljs$core$IFn$_invoke$arity$1(new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,\"ws\",\"ws\",86841443),cljs.core.PersistentHashSet.EMPTY,new cljs.core.Keyword(null,\"ajax\",\"ajax\",814345549),cljs.core.PersistentHashSet.EMPTY,new cljs.core.Keyword(null,\"any\",\"any\",1705907423),cljs.core.PersistentHashSet.EMPTY], null));\nvar upd_conn_BANG_ = (function() {\nvar G__44119 = null;\nvar G__44119__3 = (function (conn_type,uid,client_id){\nreturn taoensso.encore.swap_in_BANG_.cljs$core$IFn$_invoke$arity$3(conns_,new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [conn_type,uid,client_id], null),(function (_QMARK_v){\nvar vec__43360 = _QMARK_v;\nvar _QMARK_sch = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__43360,(0),null);\nvar _udt = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__43360,(1),null);\nvar new_udt = taoensso.encore.now_udt();\nreturn taoensso.encore.swapped(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [_QMARK_sch,new_udt], null),new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,\"init?\",\"init?\",438181499),(_QMARK_v == null),new cljs.core.Keyword(null,\"udt\",\"udt\",2011712751),new_udt,new cljs.core.Keyword(null,\"?sch\",\"?sch\",2064493898),_QMARK_sch], null));\n}));\n});\nvar G__44119__4 = (function (conn_type,uid,client_id,new__QMARK_sch){\nreturn taoensso.encore.swap_in_BANG_.cljs$core$IFn$_invoke$arity$3(conns_,new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [conn_type,uid,client_id], null),(function (_QMARK_v){\nvar new_udt = taoensso.encore.now_udt();\nreturn taoensso.encore.swapped(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new__QMARK_sch,new_udt], null),new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,\"init?\",\"init?\",438181499),(_QMARK_v == null),new cljs.core.Keyword(null,\"udt\",\"udt\",2011712751),new_udt,new cljs.core.Keyword(null,\"?sch\",\"?sch\",2064493898),new__QMARK_sch], null));\n}));\n});\nG__44119 = function(conn_type,uid,client_id,new__QMARK_sch){\nswitch(arguments.length){\ncase 3:\nreturn G__44119__3.call(this,conn_type,uid,client_id);\ncase 4:\nreturn G__44119__4.call(this,conn_type,uid,client_id,new__QMARK_sch);\n}\nthrow(new Error('Invalid arity: ' + arguments.length));\n};\nG__44119.cljs$core$IFn$_invoke$arity$3 = G__44119__3;\nG__44119.cljs$core$IFn$_invoke$arity$4 = G__44119__4;\nreturn G__44119;\n})()\n;\nvar connect_uid_BANG_ = (function (conn_type,uid){\nif(cljs.core.truth_((function (){var e = (function (){try{if(taoensso.truss.impl.some_QMARK_(uid)){\nreturn null;\n} else {\nreturn taoensso.truss.impl._dummy_error;\n}\n}catch (e43363){if((e43363 instanceof Error)){\nvar e = e43363;\nreturn e;\n} else {\nthrow e43363;\n\n}\n}})();\nif((e == null)){\nreturn true;\n} else {\nreturn taoensso.truss.impl._invar_violation_BANG_(true,\"taoensso.sente\",359,\"(taoensso.truss.impl/some? uid)\",uid,e,null);\n}\n})())){\n} else {\nthrow (new Error(\"Assert failed: (have? uid)\"));\n}\n\nvar newly_connected_QMARK_ = taoensso.encore.swap_in_BANG_.cljs$core$IFn$_invoke$arity$3(connected_uids_,cljs.core.PersistentVector.EMPTY,(function (p__43364){\nvar map__43365 = p__43364;\nvar map__43365__$1 = (((((!((map__43365 == null))))?(((((map__43365.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__43365.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__43365):map__43365);\nvar old_m = map__43365__$1;\nvar ws = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__43365__$1,new cljs.core.Keyword(null,\"ws\",\"ws\",86841443));\nvar ajax = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__43365__$1,new cljs.core.Keyword(null,\"ajax\",\"ajax\",814345549));\nvar any = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__43365__$1,new cljs.core.Keyword(null,\"any\",\"any\",1705907423));\nvar new_m = (function (){var G__43367 = conn_type;\nvar G__43367__$1 = (((G__43367 instanceof cljs.core.Keyword))?G__43367.fqn:null);\nswitch (G__43367__$1) {\ncase \"ws\":\nreturn new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,\"ws\",\"ws\",86841443),cljs.core.conj.cljs$core$IFn$_invoke$arity$2(ws,uid),new cljs.core.Keyword(null,\"ajax\",\"ajax\",814345549),ajax,new cljs.core.Keyword(null,\"any\",\"any\",1705907423),cljs.core.conj.cljs$core$IFn$_invoke$arity$2(any,uid)], null);\n\nbreak;\ncase \"ajax\":\nreturn new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,\"ws\",\"ws\",86841443),ws,new cljs.core.Keyword(null,\"ajax\",\"ajax\",814345549),cljs.core.conj.cljs$core$IFn$_invoke$arity$2(ajax,uid),new cljs.core.Keyword(null,\"any\",\"any\",1705907423),cljs.core.conj.cljs$core$IFn$_invoke$arity$2(any,uid)], null);\n\nbreak;\ndefault:\nthrow (new Error([\"No matching clause: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(G__43367__$1)].join('')));\n\n}\n})();\nreturn taoensso.encore.swapped(new_m,(function (){var old_any = new cljs.core.Keyword(null,\"any\",\"any\",1705907423).cljs$core$IFn$_invoke$arity$1(old_m);\nvar new_any = new cljs.core.Keyword(null,\"any\",\"any\",1705907423).cljs$core$IFn$_invoke$arity$1(new_m);\nif((((!(cljs.core.contains_QMARK_(old_any,uid)))) && (cljs.core.contains_QMARK_(new_any,uid)))){\nreturn new cljs.core.Keyword(null,\"newly-connected\",\"newly-connected\",-2029862681);\n} else {\nreturn null;\n}\n})());\n}));\nreturn newly_connected_QMARK_;\n});\nvar upd_connected_uid_BANG_ = (function (uid){\nif(cljs.core.truth_((function (){var e = (function (){try{if(taoensso.truss.impl.some_QMARK_(uid)){\nreturn null;\n} else {\nreturn taoensso.truss.impl._dummy_error;\n}\n}catch (e43368){if((e43368 instanceof Error)){\nvar e = e43368;\nreturn e;\n} else {\nthrow e43368;\n\n}\n}})();\nif((e == null)){\nreturn true;\n} else {\nreturn taoensso.truss.impl._invar_violation_BANG_(true,\"taoensso.sente\",376,\"(taoensso.truss.impl/some? uid)\",uid,e,null);\n}\n})())){\n} else {\nthrow (new Error(\"Assert failed: (have? uid)\"));\n}\n\nvar newly_disconnected_QMARK_ = taoensso.encore.swap_in_BANG_.cljs$core$IFn$_invoke$arity$3(connected_uids_,cljs.core.PersistentVector.EMPTY,(function (p__43369){\nvar map__43370 = p__43369;\nvar map__43370__$1 = (((((!((map__43370 == null))))?(((((map__43370.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__43370.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__43370):map__43370);\nvar old_m = map__43370__$1;\nvar ws = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__43370__$1,new cljs.core.Keyword(null,\"ws\",\"ws\",86841443));\nvar ajax = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__43370__$1,new cljs.core.Keyword(null,\"ajax\",\"ajax\",814345549));\nvar any = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__43370__$1,new cljs.core.Keyword(null,\"any\",\"any\",1705907423));\nvar conns_SINGLEQUOTE_ = cljs.core.deref(conns_);\nvar any_ws_clients_QMARK_ = cljs.core.contains_QMARK_(new cljs.core.Keyword(null,\"ws\",\"ws\",86841443).cljs$core$IFn$_invoke$arity$1(conns_SINGLEQUOTE_),uid);\nvar any_ajax_clients_QMARK_ = cljs.core.contains_QMARK_(new cljs.core.Keyword(null,\"ajax\",\"ajax\",814345549).cljs$core$IFn$_invoke$arity$1(conns_SINGLEQUOTE_),uid);\nvar any_clients_QMARK_ = ((any_ws_clients_QMARK_) || (any_ajax_clients_QMARK_));\nvar new_m = new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,\"ws\",\"ws\",86841443),((any_ws_clients_QMARK_)?cljs.core.conj.cljs$core$IFn$_invoke$arity$2(ws,uid):cljs.core.disj.cljs$core$IFn$_invoke$arity$2(ws,uid)),new cljs.core.Keyword(null,\"ajax\",\"ajax\",814345549),((any_ajax_clients_QMARK_)?cljs.core.conj.cljs$core$IFn$_invoke$arity$2(ajax,uid):cljs.core.disj.cljs$core$IFn$_invoke$arity$2(ajax,uid)),new cljs.core.Keyword(null,\"any\",\"any\",1705907423),((any_clients_QMARK_)?cljs.core.conj.cljs$core$IFn$_invoke$arity$2(any,uid):cljs.core.disj.cljs$core$IFn$_invoke$arity$2(any,uid))], null);\nreturn taoensso.encore.swapped(new_m,(function (){var old_any = new cljs.core.Keyword(null,\"any\",\"any\",1705907423).cljs$core$IFn$_invoke$arity$1(old_m);\nvar new_any = new cljs.core.Keyword(null,\"any\",\"any\",1705907423).cljs$core$IFn$_invoke$arity$1(new_m);\nif(((cljs.core.contains_QMARK_(old_any,uid)) && ((!(cljs.core.contains_QMARK_(new_any,uid)))))){\nreturn new cljs.core.Keyword(null,\"newly-disconnected\",\"newly-disconnected\",-1586164962);\n} else {\nreturn null;\n}\n})());\n}));\nreturn newly_disconnected_QMARK_;\n});\nvar send_fn = (function() { \nvar G__44125__delegate = function (user_id,ev,p__43372){\nvar vec__43373 = p__43372;\nvar map__43376 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__43373,(0),null);\nvar map__43376__$1 = (((((!((map__43376 == null))))?(((((map__43376.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__43376.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__43376):map__43376);\nvar opts = map__43376__$1;\nvar flush_QMARK_ = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__43376__$1,new cljs.core.Keyword(null,\"flush?\",\"flush?\",-108887231));\nvar uid_44126 = ((cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(user_id,new cljs.core.Keyword(\"sente\",\"all-users-without-uid\",\"sente/all-users-without-uid\",-42979578)))?new cljs.core.Keyword(\"taoensso.sente\",\"nil-uid\",\"taoensso.sente/nil-uid\",-2111603486):user_id);\nvar __44127 = taoensso.timbre._log_BANG_.cljs$core$IFn$_invoke$arity$10(taoensso.timbre._STAR_config_STAR_,new cljs.core.Keyword(null,\"trace\",\"trace\",-1082747415),\"taoensso.sente\",null,402,new cljs.core.Keyword(null,\"f\",\"f\",-1597136552),new cljs.core.Keyword(null,\"auto\",\"auto\",-566279492),(new cljs.core.Delay((function (){\nreturn new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [\"Chsk send: (->uid %s) %s\",uid_44126,ev], null);\n}),null)),null,1549398373);\nvar __44128__$1 = (cljs.core.truth_(uid_44126)?null:(function(){throw (new Error([\"Assert failed: \",[\"Support for sending to `nil` user-ids has been REMOVED. \",\"Please send to `:sente/all-users-without-uid` instead.\"].join(''),\"\\n\",\"uid\"].join('')))})());\nvar __44129__$2 = taoensso.sente.assert_event(ev);\nvar ev_uuid_44130 = taoensso.encore.uuid_str.cljs$core$IFn$_invoke$arity$0();\nvar flush_buffer_BANG__44131 = (function (conn_type){\nvar temp__5735__auto__ = taoensso.encore.swap_in_BANG_.cljs$core$IFn$_invoke$arity$3(send_buffers_,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [conn_type], null),(function (m){\nvar vec__43378 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,uid_44126);\nvar ___$3 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__43378,(0),null);\nvar ev_uuids = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__43378,(1),null);\nif(cljs.core.contains_QMARK_(ev_uuids,ev_uuid_44130)){\nreturn taoensso.encore.swapped(cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(m,uid_44126),cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,uid_44126));\n} else {\nreturn taoensso.encore.swapped(m,null);\n}\n}));\nif(cljs.core.truth_(temp__5735__auto__)){\nvar pulled = temp__5735__auto__;\nvar vec__43381 = pulled;\nvar buffered_evs = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__43381,(0),null);\nvar ev_uuids = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__43381,(1),null);\nif(cljs.core.vector_QMARK_(buffered_evs)){\n} else {\ntaoensso.truss.impl._invar_violation_BANG_(true,\"taoensso.sente\",429,\"(vector? buffered-evs)\",buffered_evs,null,null);\n}\n\nif(cljs.core.set_QMARK_(ev_uuids)){\n} else {\ntaoensso.truss.impl._invar_violation_BANG_(true,\"taoensso.sente\",430,\"(set? ev-uuids)\",ev_uuids,null,null);\n}\n\nvar buffered_evs_ppstr = taoensso.sente.pack.cljs$core$IFn$_invoke$arity$2(packer__$1,buffered_evs);\ntaoensso.timbre._log_BANG_.cljs$core$IFn$_invoke$arity$10(taoensso.timbre._STAR_config_STAR_,new cljs.core.Keyword(null,\"trace\",\"trace\",-1082747415),\"taoensso.sente\",null,433,new cljs.core.Keyword(null,\"f\",\"f\",-1597136552),new cljs.core.Keyword(null,\"auto\",\"auto\",-566279492),(new cljs.core.Delay((function (){\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [\"buffered-evs-ppstr: %s\",buffered_evs_ppstr], null);\n}),null)),null,1598836278);\n\nvar G__43384 = conn_type;\nvar G__43384__$1 = (((G__43384 instanceof cljs.core.Keyword))?G__43384.fqn:null);\nswitch (G__43384__$1) {\ncase \"ws\":\nreturn (taoensso.sente.send_buffered_server_evs_GT_ws_clients_BANG_.cljs$core$IFn$_invoke$arity$4 ? taoensso.sente.send_buffered_server_evs_GT_ws_clients_BANG_.cljs$core$IFn$_invoke$arity$4(conns_,uid_44126,buffered_evs_ppstr,upd_conn_BANG_) : taoensso.sente.send_buffered_server_evs_GT_ws_clients_BANG_.call(null,conns_,uid_44126,buffered_evs_ppstr,upd_conn_BANG_));\n\nbreak;\ncase \"ajax\":\nreturn (taoensso.sente.send_buffered_server_evs_GT_ajax_clients_BANG_.cljs$core$IFn$_invoke$arity$3 ? taoensso.sente.send_buffered_server_evs_GT_ajax_clients_BANG_.cljs$core$IFn$_invoke$arity$3(conns_,uid_44126,buffered_evs_ppstr) : taoensso.sente.send_buffered_server_evs_GT_ajax_clients_BANG_.call(null,conns_,uid_44126,buffered_evs_ppstr));\n\nbreak;\ndefault:\nthrow (new Error([\"No matching clause: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(G__43384__$1)].join('')));\n\n}\n} else {\nreturn null;\n}\n});\nif(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(ev,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"chsk\",\"close\",\"chsk/close\",1840295819)], null))){\ntaoensso.timbre._log_BANG_.cljs$core$IFn$_invoke$arity$10(taoensso.timbre._STAR_config_STAR_,new cljs.core.Keyword(null,\"debug\",\"debug\",-1608172596),\"taoensso.sente\",null,442,new cljs.core.Keyword(null,\"f\",\"f\",-1597136552),new cljs.core.Keyword(null,\"auto\",\"auto\",-566279492),(new cljs.core.Delay((function (){\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [\"Chsk closing (client may reconnect): %s\",uid_44126], null);\n}),null)),null,1129712710);\n\nif(cljs.core.truth_(flush_QMARK_)){\nflush_buffer_BANG__44131(new cljs.core.Keyword(null,\"ws\",\"ws\",86841443));\n\nflush_buffer_BANG__44131(new cljs.core.Keyword(null,\"ajax\",\"ajax\",814345549));\n} else {\n}\n\nvar seq__43385_44133 = cljs.core.seq(cljs.core.vals(cljs.core.get_in.cljs$core$IFn$_invoke$arity$2(cljs.core.deref(conns_),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"ws\",\"ws\",86841443),uid_44126], null))));\nvar chunk__43386_44134 = null;\nvar count__43387_44135 = (0);\nvar i__43388_44136 = (0);\nwhile(true){\nif((i__43388_44136 < count__43387_44135)){\nvar vec__43395_44137 = chunk__43386_44134.cljs$core$IIndexed$_nth$arity$2(null,i__43388_44136);\nvar _QMARK_sch_44138 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__43395_44137,(0),null);\nvar _udt_44139 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__43395_44137,(1),null);\nvar temp__5735__auto___44140 = _QMARK_sch_44138;\nif(cljs.core.truth_(temp__5735__auto___44140)){\nvar sch_44141 = temp__5735__auto___44140;\ntaoensso.sente.interfaces.sch_close_BANG_(sch_44141);\n} else {\n}\n\n\nvar G__44142 = seq__43385_44133;\nvar G__44143 = chunk__43386_44134;\nvar G__44144 = count__43387_44135;\nvar G__44145 = (i__43388_44136 + (1));\nseq__43385_44133 = G__44142;\nchunk__43386_44134 = G__44143;\ncount__43387_44135 = G__44144;\ni__43388_44136 = G__44145;\ncontinue;\n} else {\nvar temp__5735__auto___44146 = cljs.core.seq(seq__43385_44133);\nif(temp__5735__auto___44146){\nvar seq__43385_44147__$1 = temp__5735__auto___44146;\nif(cljs.core.chunked_seq_QMARK_(seq__43385_44147__$1)){\nvar c__4556__auto___44148 = cljs.core.chunk_first(seq__43385_44147__$1);\nvar G__44149 = cljs.core.chunk_rest(seq__43385_44147__$1);\nvar G__44150 = c__4556__auto___44148;\nvar G__44151 = cljs.core.count(c__4556__auto___44148);\nvar G__44152 = (0);\nseq__43385_44133 = G__44149;\nchunk__43386_44134 = G__44150;\ncount__43387_44135 = G__44151;\ni__43388_44136 = G__44152;\ncontinue;\n} else {\nvar vec__43398_44153 = cljs.core.first(seq__43385_44147__$1);\nvar _QMARK_sch_44154 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__43398_44153,(0),null);\nvar _udt_44155 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__43398_44153,(1),null);\nvar temp__5735__auto___44157__$1 = _QMARK_sch_44154;\nif(cljs.core.truth_(temp__5735__auto___44157__$1)){\nvar sch_44161 = temp__5735__auto___44157__$1;\ntaoensso.sente.interfaces.sch_close_BANG_(sch_44161);\n} else {\n}\n\n\nvar G__44162 = cljs.core.next(seq__43385_44147__$1);\nvar G__44163 = null;\nvar G__44164 = (0);\nvar G__44165 = (0);\nseq__43385_44133 = G__44162;\nchunk__43386_44134 = G__44163;\ncount__43387_44135 = G__44164;\ni__43388_44136 = G__44165;\ncontinue;\n}\n} else {\n}\n}\nbreak;\n}\n\nvar seq__43401_44166 = cljs.core.seq(cljs.core.vals(cljs.core.get_in.cljs$core$IFn$_invoke$arity$2(cljs.core.deref(conns_),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"ajax\",\"ajax\",814345549),uid_44126], null))));\nvar chunk__43402_44167 = null;\nvar count__43403_44168 = (0);\nvar i__43404_44169 = (0);\nwhile(true){\nif((i__43404_44169 < count__43403_44168)){\nvar vec__43411_44170 = chunk__43402_44167.cljs$core$IIndexed$_nth$arity$2(null,i__43404_44169);\nvar _QMARK_sch_44171 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__43411_44170,(0),null);\nvar _udt_44172 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__43411_44170,(1),null);\nvar temp__5735__auto___44173 = _QMARK_sch_44171;\nif(cljs.core.truth_(temp__5735__auto___44173)){\nvar sch_44174 = temp__5735__auto___44173;\ntaoensso.sente.interfaces.sch_close_BANG_(sch_44174);\n} else {\n}\n\n\nvar G__44175 = seq__43401_44166;\nvar G__44176 = chunk__43402_44167;\nvar G__44177 = count__43403_44168;\nvar G__44178 = (i__43404_44169 + (1));\nseq__43401_44166 = G__44175;\nchunk__43402_44167 = G__44176;\ncount__43403_44168 = G__44177;\ni__43404_44169 = G__44178;\ncontinue;\n} else {\nvar temp__5735__auto___44179 = cljs.core.seq(seq__43401_44166);\nif(temp__5735__auto___44179){\nvar seq__43401_44180__$1 = temp__5735__auto___44179;\nif(cljs.core.chunked_seq_QMARK_(seq__43401_44180__$1)){\nvar c__4556__auto___44181 = cljs.core.chunk_first(seq__43401_44180__$1);\nvar G__44182 = cljs.core.chunk_rest(seq__43401_44180__$1);\nvar G__44183 = c__4556__auto___44181;\nvar G__44184 = cljs.core.count(c__4556__auto___44181);\nvar G__44185 = (0);\nseq__43401_44166 = G__44182;\nchunk__43402_44167 = G__44183;\ncount__43403_44168 = G__44184;\ni__43404_44169 = G__44185;\ncontinue;\n} else {\nvar vec__43414_44186 = cljs.core.first(seq__43401_44180__$1);\nvar _QMARK_sch_44187 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__43414_44186,(0),null);\nvar _udt_44188 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__43414_44186,(1),null);\nvar temp__5735__auto___44189__$1 = _QMARK_sch_44187;\nif(cljs.core.truth_(temp__5735__auto___44189__$1)){\nvar sch_44190 = temp__5735__auto___44189__$1;\ntaoensso.sente.interfaces.sch_close_BANG_(sch_44190);\n} else {\n}\n\n\nvar G__44191 = cljs.core.next(seq__43401_44180__$1);\nvar G__44192 = null;\nvar G__44193 = (0);\nvar G__44194 = (0);\nseq__43401_44166 = G__44191;\nchunk__43402_44167 = G__44192;\ncount__43403_44168 = G__44193;\ni__43404_44169 = G__44194;\ncontinue;\n}\n} else {\n}\n}\nbreak;\n}\n} else {\nvar seq__43417_44195 = cljs.core.seq(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"ws\",\"ws\",86841443),new cljs.core.Keyword(null,\"ajax\",\"ajax\",814345549)], null));\nvar chunk__43418_44196 = null;\nvar count__43419_44197 = (0);\nvar i__43420_44198 = (0);\nwhile(true){\nif((i__43420_44198 < count__43419_44197)){\nvar conn_type_44199 = chunk__43418_44196.cljs$core$IIndexed$_nth$arity$2(null,i__43420_44198);\ntaoensso.encore.swap_in_BANG_.cljs$core$IFn$_invoke$arity$3(send_buffers_,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [conn_type_44199,uid_44126], null),((function (seq__43417_44195,chunk__43418_44196,count__43419_44197,i__43420_44198,conn_type_44199,uid_44126,__44127,__44128__$1,__44129__$2,ev_uuid_44130,flush_buffer_BANG__44131,vec__43373,map__43376,map__43376__$1,opts,flush_QMARK_,packer__$1,ch_recv,user_id_fn__$1,conns_,send_buffers_,connected_uids_,upd_conn_BANG_,connect_uid_BANG_,upd_connected_uid_BANG_,vec__43349,map__43352,map__43352__$1,ws_kalive_ms,send_buf_ms_ws,lp_timeout_ms,csrf_token_fn,packer,send_buf_ms_ajax,handshake_data_fn,user_id_fn,recv_buf_or_n){\nreturn (function (_QMARK_v){\nif(cljs.core.not(_QMARK_v)){\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [ev], null),cljs.core.PersistentHashSet.createAsIfByAssoc([ev_uuid_44130])], null);\n} else {\nvar vec__43427 = _QMARK_v;\nvar buffered_evs = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__43427,(0),null);\nvar ev_uuids = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__43427,(1),null);\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.conj.cljs$core$IFn$_invoke$arity$2(buffered_evs,ev),cljs.core.conj.cljs$core$IFn$_invoke$arity$2(ev_uuids,ev_uuid_44130)], null);\n}\n});})(seq__43417_44195,chunk__43418_44196,count__43419_44197,i__43420_44198,conn_type_44199,uid_44126,__44127,__44128__$1,__44129__$2,ev_uuid_44130,flush_buffer_BANG__44131,vec__43373,map__43376,map__43376__$1,opts,flush_QMARK_,packer__$1,ch_recv,user_id_fn__$1,conns_,send_buffers_,connected_uids_,upd_conn_BANG_,connect_uid_BANG_,upd_connected_uid_BANG_,vec__43349,map__43352,map__43352__$1,ws_kalive_ms,send_buf_ms_ws,lp_timeout_ms,csrf_token_fn,packer,send_buf_ms_ajax,handshake_data_fn,user_id_fn,recv_buf_or_n))\n);\n\n\nvar G__44204 = seq__43417_44195;\nvar G__44205 = chunk__43418_44196;\nvar G__44206 = count__43419_44197;\nvar G__44207 = (i__43420_44198 + (1));\nseq__43417_44195 = G__44204;\nchunk__43418_44196 = G__44205;\ncount__43419_44197 = G__44206;\ni__43420_44198 = G__44207;\ncontinue;\n} else {\nvar temp__5735__auto___44208 = cljs.core.seq(seq__43417_44195);\nif(temp__5735__auto___44208){\nvar seq__43417_44209__$1 = temp__5735__auto___44208;\nif(cljs.core.chunked_seq_QMARK_(seq__43417_44209__$1)){\nvar c__4556__auto___44210 = cljs.core.chunk_first(seq__43417_44209__$1);\nvar G__44211 = cljs.core.chunk_rest(seq__43417_44209__$1);\nvar G__44212 = c__4556__auto___44210;\nvar G__44213 = cljs.core.count(c__4556__auto___44210);\nvar G__44214 = (0);\nseq__43417_44195 = G__44211;\nchunk__43418_44196 = G__44212;\ncount__43419_44197 = G__44213;\ni__43420_44198 = G__44214;\ncontinue;\n} else {\nvar conn_type_44215 = cljs.core.first(seq__43417_44209__$1);\ntaoensso.encore.swap_in_BANG_.cljs$core$IFn$_invoke$arity$3(send_buffers_,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [conn_type_44215,uid_44126], null),((function (seq__43417_44195,chunk__43418_44196,count__43419_44197,i__43420_44198,conn_type_44215,seq__43417_44209__$1,temp__5735__auto___44208,uid_44126,__44127,__44128__$1,__44129__$2,ev_uuid_44130,flush_buffer_BANG__44131,vec__43373,map__43376,map__43376__$1,opts,flush_QMARK_,packer__$1,ch_recv,user_id_fn__$1,conns_,send_buffers_,connected_uids_,upd_conn_BANG_,connect_uid_BANG_,upd_connected_uid_BANG_,vec__43349,map__43352,map__43352__$1,ws_kalive_ms,send_buf_ms_ws,lp_timeout_ms,csrf_token_fn,packer,send_buf_ms_ajax,handshake_data_fn,user_id_fn,recv_buf_or_n){\nreturn (function (_QMARK_v){\nif(cljs.core.not(_QMARK_v)){\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [ev], null),cljs.core.PersistentHashSet.createAsIfByAssoc([ev_uuid_44130])], null);\n} else {\nvar vec__43430 = _QMARK_v;\nvar buffered_evs = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__43430,(0),null);\nvar ev_uuids = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__43430,(1),null);\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.conj.cljs$core$IFn$_invoke$arity$2(buffered_evs,ev),cljs.core.conj.cljs$core$IFn$_invoke$arity$2(ev_uuids,ev_uuid_44130)], null);\n}\n});})(seq__43417_44195,chunk__43418_44196,count__43419_44197,i__43420_44198,conn_type_44215,seq__43417_44209__$1,temp__5735__auto___44208,uid_44126,__44127,__44128__$1,__44129__$2,ev_uuid_44130,flush_buffer_BANG__44131,vec__43373,map__43376,map__43376__$1,opts,flush_QMARK_,packer__$1,ch_recv,user_id_fn__$1,conns_,send_buffers_,connected_uids_,upd_conn_BANG_,connect_uid_BANG_,upd_connected_uid_BANG_,vec__43349,map__43352,map__43352__$1,ws_kalive_ms,send_buf_ms_ws,lp_timeout_ms,csrf_token_fn,packer,send_buf_ms_ajax,handshake_data_fn,user_id_fn,recv_buf_or_n))\n);\n\n\nvar G__44216 = cljs.core.next(seq__43417_44209__$1);\nvar G__44217 = null;\nvar G__44218 = (0);\nvar G__44219 = (0);\nseq__43417_44195 = G__44216;\nchunk__43418_44196 = G__44217;\ncount__43419_44197 = G__44218;\ni__43420_44198 = G__44219;\ncontinue;\n}\n} else {\n}\n}\nbreak;\n}\n\nif(cljs.core.truth_(flush_QMARK_)){\nflush_buffer_BANG__44131(new cljs.core.Keyword(null,\"ws\",\"ws\",86841443));\n\nflush_buffer_BANG__44131(new cljs.core.Keyword(null,\"ajax\",\"ajax\",814345549));\n} else {\nvar ws_timeout_44220 = cljs.core.async.timeout(send_buf_ms_ws);\nvar ajax_timeout_44221 = cljs.core.async.timeout(send_buf_ms_ajax);\nvar c__38372__auto___44222 = cljs.core.async.chan.cljs$core$IFn$_invoke$arity$1((1));\ncljs.core.async.impl.dispatch.run((function (){\nvar f__38373__auto__ = (function (){var switch__38280__auto__ = (function (state_43437){\nvar state_val_43438 = (state_43437[(1)]);\nif((state_val_43438 === (1))){\nvar state_43437__$1 = state_43437;\nreturn cljs.core.async.impl.ioc_helpers.take_BANG_(state_43437__$1,(2),ws_timeout_44220);\n} else {\nif((state_val_43438 === (2))){\nvar inst_43434 = (state_43437[(2)]);\nvar inst_43435 = flush_buffer_BANG__44131(new cljs.core.Keyword(null,\"ws\",\"ws\",86841443));\nvar state_43437__$1 = (function (){var statearr_43439 = state_43437;\n(statearr_43439[(7)] = inst_43434);\n\nreturn statearr_43439;\n})();\nreturn cljs.core.async.impl.ioc_helpers.return_chan(state_43437__$1,inst_43435);\n} else {\nreturn null;\n}\n}\n});\nreturn (function() {\nvar taoensso$sente$state_machine__38281__auto__ = null;\nvar taoensso$sente$state_machine__38281__auto____0 = (function (){\nvar statearr_43440 = [null,null,null,null,null,null,null,null];\n(statearr_43440[(0)] = taoensso$sente$state_machine__38281__auto__);\n\n(statearr_43440[(1)] = (1));\n\nreturn statearr_43440;\n});\nvar taoensso$sente$state_machine__38281__auto____1 = (function (state_43437){\nwhile(true){\nvar ret_value__38282__auto__ = (function (){try{while(true){\nvar result__38283__auto__ = switch__38280__auto__(state_43437);\nif(cljs.core.keyword_identical_QMARK_(result__38283__auto__,new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268))){\ncontinue;\n} else {\nreturn result__38283__auto__;\n}\nbreak;\n}\n}catch (e43441){var ex__38284__auto__ = e43441;\nvar statearr_43442_44223 = state_43437;\n(statearr_43442_44223[(2)] = ex__38284__auto__);\n\n\nif(cljs.core.seq((state_43437[(4)]))){\nvar statearr_43443_44224 = state_43437;\n(statearr_43443_44224[(1)] = cljs.core.first((state_43437[(4)])));\n\n} else {\nthrow ex__38284__auto__;\n}\n\nreturn new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268);\n}})();\nif(cljs.core.keyword_identical_QMARK_(ret_value__38282__auto__,new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268))){\nvar G__44225 = state_43437;\nstate_43437 = G__44225;\ncontinue;\n} else {\nreturn ret_value__38282__auto__;\n}\nbreak;\n}\n});\ntaoensso$sente$state_machine__38281__auto__ = function(state_43437){\nswitch(arguments.length){\ncase 0:\nreturn taoensso$sente$state_machine__38281__auto____0.call(this);\ncase 1:\nreturn taoensso$sente$state_machine__38281__auto____1.call(this,state_43437);\n}\nthrow(new Error('Invalid arity: ' + arguments.length));\n};\ntaoensso$sente$state_machine__38281__auto__.cljs$core$IFn$_invoke$arity$0 = taoensso$sente$state_machine__38281__auto____0;\ntaoensso$sente$state_machine__38281__auto__.cljs$core$IFn$_invoke$arity$1 = taoensso$sente$state_machine__38281__auto____1;\nreturn taoensso$sente$state_machine__38281__auto__;\n})()\n})();\nvar state__38374__auto__ = (function (){var statearr_43444 = f__38373__auto__();\n(statearr_43444[(6)] = c__38372__auto___44222);\n\nreturn statearr_43444;\n})();\nreturn cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped(state__38374__auto__);\n}));\n\n\nvar c__38372__auto___44226 = cljs.core.async.chan.cljs$core$IFn$_invoke$arity$1((1));\ncljs.core.async.impl.dispatch.run((function (){\nvar f__38373__auto__ = (function (){var switch__38280__auto__ = (function (state_43449){\nvar state_val_43450 = (state_43449[(1)]);\nif((state_val_43450 === (1))){\nvar state_43449__$1 = state_43449;\nreturn cljs.core.async.impl.ioc_helpers.take_BANG_(state_43449__$1,(2),ajax_timeout_44221);\n} else {\nif((state_val_43450 === (2))){\nvar inst_43446 = (state_43449[(2)]);\nvar inst_43447 = flush_buffer_BANG__44131(new cljs.core.Keyword(null,\"ajax\",\"ajax\",814345549));\nvar state_43449__$1 = (function (){var statearr_43451 = state_43449;\n(statearr_43451[(7)] = inst_43446);\n\nreturn statearr_43451;\n})();\nreturn cljs.core.async.impl.ioc_helpers.return_chan(state_43449__$1,inst_43447);\n} else {\nreturn null;\n}\n}\n});\nreturn (function() {\nvar taoensso$sente$state_machine__38281__auto__ = null;\nvar taoensso$sente$state_machine__38281__auto____0 = (function (){\nvar statearr_43452 = [null,null,null,null,null,null,null,null];\n(statearr_43452[(0)] = taoensso$sente$state_machine__38281__auto__);\n\n(statearr_43452[(1)] = (1));\n\nreturn statearr_43452;\n});\nvar taoensso$sente$state_machine__38281__auto____1 = (function (state_43449){\nwhile(true){\nvar ret_value__38282__auto__ = (function (){try{while(true){\nvar result__38283__auto__ = switch__38280__auto__(state_43449);\nif(cljs.core.keyword_identical_QMARK_(result__38283__auto__,new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268))){\ncontinue;\n} else {\nreturn result__38283__auto__;\n}\nbreak;\n}\n}catch (e43453){var ex__38284__auto__ = e43453;\nvar statearr_43454_44227 = state_43449;\n(statearr_43454_44227[(2)] = ex__38284__auto__);\n\n\nif(cljs.core.seq((state_43449[(4)]))){\nvar statearr_43455_44228 = state_43449;\n(statearr_43455_44228[(1)] = cljs.core.first((state_43449[(4)])));\n\n} else {\nthrow ex__38284__auto__;\n}\n\nreturn new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268);\n}})();\nif(cljs.core.keyword_identical_QMARK_(ret_value__38282__auto__,new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268))){\nvar G__44229 = state_43449;\nstate_43449 = G__44229;\ncontinue;\n} else {\nreturn ret_value__38282__auto__;\n}\nbreak;\n}\n});\ntaoensso$sente$state_machine__38281__auto__ = function(state_43449){\nswitch(arguments.length){\ncase 0:\nreturn taoensso$sente$state_machine__38281__auto____0.call(this);\ncase 1:\nreturn taoensso$sente$state_machine__38281__auto____1.call(this,state_43449);\n}\nthrow(new Error('Invalid arity: ' + arguments.length));\n};\ntaoensso$sente$state_machine__38281__auto__.cljs$core$IFn$_invoke$arity$0 = taoensso$sente$state_machine__38281__auto____0;\ntaoensso$sente$state_machine__38281__auto__.cljs$core$IFn$_invoke$arity$1 = taoensso$sente$state_machine__38281__auto____1;\nreturn taoensso$sente$state_machine__38281__auto__;\n})()\n})();\nvar state__38374__auto__ = (function (){var statearr_43456 = f__38373__auto__();\n(statearr_43456[(6)] = c__38372__auto___44226);\n\nreturn statearr_43456;\n})();\nreturn cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped(state__38374__auto__);\n}));\n\n}\n}\n\nreturn null;\n};\nvar G__44125 = function (user_id,ev,var_args){\nvar p__43372 = null;\nif (arguments.length > 2) {\nvar G__44230__i = 0, G__44230__a = new Array(arguments.length -  2);\nwhile (G__44230__i < G__44230__a.length) {G__44230__a[G__44230__i] = arguments[G__44230__i + 2]; ++G__44230__i;}\n  p__43372 = new cljs.core.IndexedSeq(G__44230__a,0,null);\n} \nreturn G__44125__delegate.call(this,user_id,ev,p__43372);};\nG__44125.cljs$lang$maxFixedArity = 2;\nG__44125.cljs$lang$applyTo = (function (arglist__44231){\nvar user_id = cljs.core.first(arglist__44231);\narglist__44231 = cljs.core.next(arglist__44231);\nvar ev = cljs.core.first(arglist__44231);\nvar p__43372 = cljs.core.rest(arglist__44231);\nreturn G__44125__delegate(user_id,ev,p__43372);\n});\nG__44125.cljs$core$IFn$_invoke$arity$variadic = G__44125__delegate;\nreturn G__44125;\n})()\n;\nvar ev_msg_const = new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,\"ch-recv\",\"ch-recv\",-990916861),ch_recv,new cljs.core.Keyword(null,\"send-fn\",\"send-fn\",351002041),send_fn,new cljs.core.Keyword(null,\"connected-uids\",\"connected-uids\",1454332231),connected_uids_], null);\nreturn new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null,\"ch-recv\",\"ch-recv\",-990916861),ch_recv,new cljs.core.Keyword(null,\"send-fn\",\"send-fn\",351002041),send_fn,new cljs.core.Keyword(null,\"connected-uids\",\"connected-uids\",1454332231),connected_uids_,new cljs.core.Keyword(null,\"ajax-post-fn\",\"ajax-post-fn\",1830071264),(function (ring_req){\nreturn taoensso.sente.interfaces.ring_req__GT_server_ch_resp(web_server_ch_adapter,ring_req,new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"on-open\",\"on-open\",-1391088163),(function (server_ch,websocket_QMARK_){\nif(cljs.core.not(websocket_QMARK_)){\n} else {\nthrow (new Error(\"Assert failed: (not websocket?)\"));\n}\n\nvar params = cljs.core.get.cljs$core$IFn$_invoke$arity$2(ring_req,new cljs.core.Keyword(null,\"params\",\"params\",710516235));\nvar ppstr = cljs.core.get.cljs$core$IFn$_invoke$arity$2(params,new cljs.core.Keyword(null,\"ppstr\",\"ppstr\",1557495252));\nvar client_id = cljs.core.get.cljs$core$IFn$_invoke$arity$2(params,new cljs.core.Keyword(null,\"client-id\",\"client-id\",-464622140));\nvar vec__43457 = taoensso.sente.unpack(packer__$1,ppstr);\nvar clj = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__43457,(0),null);\nvar has_cb_QMARK_ = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__43457,(1),null);\nvar reply_fn = (function (){var replied_QMARK__ = cljs.core.atom.cljs$core$IFn$_invoke$arity$1(false);\nreturn (function (resp_clj){\nif(cljs.core.compare_and_set_BANG_(replied_QMARK__,false,true)){\ntaoensso.timbre._log_BANG_.cljs$core$IFn$_invoke$arity$10(taoensso.timbre._STAR_config_STAR_,new cljs.core.Keyword(null,\"trace\",\"trace\",-1082747415),\"taoensso.sente\",null,511,new cljs.core.Keyword(null,\"f\",\"f\",-1597136552),new cljs.core.Keyword(null,\"auto\",\"auto\",-566279492),(new cljs.core.Delay((function (){\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [\"Chsk send (ajax post reply): %s\",resp_clj], null);\n}),null)),null,-1987776424);\n\nreturn taoensso.sente.interfaces.sch_send_BANG_(server_ch,websocket_QMARK_,taoensso.sente.pack.cljs$core$IFn$_invoke$arity$2(packer__$1,resp_clj));\n} else {\nreturn null;\n}\n});\n})();\ntaoensso.sente.put_server_event_msg_GT_ch_recv_BANG_(ch_recv,cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([ev_msg_const,new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null,\"client-id\",\"client-id\",-464622140),client_id,new cljs.core.Keyword(null,\"ring-req\",\"ring-req\",-747861961),ring_req,new cljs.core.Keyword(null,\"event\",\"event\",301435442),clj,new cljs.core.Keyword(null,\"uid\",\"uid\",-1447769400),user_id_fn__$1(ring_req,client_id),new cljs.core.Keyword(null,\"?reply-fn\",\"?reply-fn\",-1479510592),(cljs.core.truth_(has_cb_QMARK_)?reply_fn:null)], null)], 0)));\n\nif(cljs.core.truth_(has_cb_QMARK_)){\nvar temp__5735__auto__ = lp_timeout_ms;\nif(cljs.core.truth_(temp__5735__auto__)){\nvar ms = temp__5735__auto__;\nvar c__38372__auto__ = cljs.core.async.chan.cljs$core$IFn$_invoke$arity$1((1));\ncljs.core.async.impl.dispatch.run((function (){\nvar f__38373__auto__ = (function (){var switch__38280__auto__ = (function (state_43465){\nvar state_val_43466 = (state_43465[(1)]);\nif((state_val_43466 === (1))){\nvar inst_43460 = cljs.core.async.timeout(ms);\nvar state_43465__$1 = state_43465;\nreturn cljs.core.async.impl.ioc_helpers.take_BANG_(state_43465__$1,(2),inst_43460);\n} else {\nif((state_val_43466 === (2))){\nvar inst_43462 = (state_43465[(2)]);\nvar inst_43463 = reply_fn(new cljs.core.Keyword(\"chsk\",\"timeout\",\"chsk/timeout\",-319776489));\nvar state_43465__$1 = (function (){var statearr_43467 = state_43465;\n(statearr_43467[(7)] = inst_43462);\n\nreturn statearr_43467;\n})();\nreturn cljs.core.async.impl.ioc_helpers.return_chan(state_43465__$1,inst_43463);\n} else {\nreturn null;\n}\n}\n});\nreturn (function() {\nvar taoensso$sente$state_machine__38281__auto__ = null;\nvar taoensso$sente$state_machine__38281__auto____0 = (function (){\nvar statearr_43468 = [null,null,null,null,null,null,null,null];\n(statearr_43468[(0)] = taoensso$sente$state_machine__38281__auto__);\n\n(statearr_43468[(1)] = (1));\n\nreturn statearr_43468;\n});\nvar taoensso$sente$state_machine__38281__auto____1 = (function (state_43465){\nwhile(true){\nvar ret_value__38282__auto__ = (function (){try{while(true){\nvar result__38283__auto__ = switch__38280__auto__(state_43465);\nif(cljs.core.keyword_identical_QMARK_(result__38283__auto__,new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268))){\ncontinue;\n} else {\nreturn result__38283__auto__;\n}\nbreak;\n}\n}catch (e43469){var ex__38284__auto__ = e43469;\nvar statearr_43470_44232 = state_43465;\n(statearr_43470_44232[(2)] = ex__38284__auto__);\n\n\nif(cljs.core.seq((state_43465[(4)]))){\nvar statearr_43471_44233 = state_43465;\n(statearr_43471_44233[(1)] = cljs.core.first((state_43465[(4)])));\n\n} else {\nthrow ex__38284__auto__;\n}\n\nreturn new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268);\n}})();\nif(cljs.core.keyword_identical_QMARK_(ret_value__38282__auto__,new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268))){\nvar G__44234 = state_43465;\nstate_43465 = G__44234;\ncontinue;\n} else {\nreturn ret_value__38282__auto__;\n}\nbreak;\n}\n});\ntaoensso$sente$state_machine__38281__auto__ = function(state_43465){\nswitch(arguments.length){\ncase 0:\nreturn taoensso$sente$state_machine__38281__auto____0.call(this);\ncase 1:\nreturn taoensso$sente$state_machine__38281__auto____1.call(this,state_43465);\n}\nthrow(new Error('Invalid arity: ' + arguments.length));\n};\ntaoensso$sente$state_machine__38281__auto__.cljs$core$IFn$_invoke$arity$0 = taoensso$sente$state_machine__38281__auto____0;\ntaoensso$sente$state_machine__38281__auto__.cljs$core$IFn$_invoke$arity$1 = taoensso$sente$state_machine__38281__auto____1;\nreturn taoensso$sente$state_machine__38281__auto__;\n})()\n})();\nvar state__38374__auto__ = (function (){var statearr_43472 = f__38373__auto__();\n(statearr_43472[(6)] = c__38372__auto__);\n\nreturn statearr_43472;\n})();\nreturn cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped(state__38374__auto__);\n}));\n\nreturn c__38372__auto__;\n} else {\nreturn null;\n}\n} else {\nreturn reply_fn(new cljs.core.Keyword(\"chsk\",\"dummy-cb-200\",\"chsk/dummy-cb-200\",-1663130337));\n}\n})], null));\n}),new cljs.core.Keyword(null,\"ajax-get-or-ws-handshake-fn\",\"ajax-get-or-ws-handshake-fn\",-1210409233),(function (ring_req){\nvar sch_uuid = taoensso.encore.uuid_str.cljs$core$IFn$_invoke$arity$1((6));\nvar params = cljs.core.get.cljs$core$IFn$_invoke$arity$2(ring_req,new cljs.core.Keyword(null,\"params\",\"params\",710516235));\nvar client_id = cljs.core.get.cljs$core$IFn$_invoke$arity$2(params,new cljs.core.Keyword(null,\"client-id\",\"client-id\",-464622140));\nvar csrf_token = (csrf_token_fn.cljs$core$IFn$_invoke$arity$1 ? csrf_token_fn.cljs$core$IFn$_invoke$arity$1(ring_req) : csrf_token_fn.call(null,ring_req));\nvar uid = user_id_fn__$1(ring_req,client_id);\nvar receive_event_msg_BANG_ = (function() {\nvar taoensso$sente$self = null;\nvar taoensso$sente$self__1 = (function (event){\nreturn taoensso$sente$self.cljs$core$IFn$_invoke$arity$2(event,null);\n});\nvar taoensso$sente$self__2 = (function (event,_QMARK_reply_fn){\nreturn taoensso.sente.put_server_event_msg_GT_ch_recv_BANG_(ch_recv,cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([ev_msg_const,new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null,\"client-id\",\"client-id\",-464622140),client_id,new cljs.core.Keyword(null,\"ring-req\",\"ring-req\",-747861961),ring_req,new cljs.core.Keyword(null,\"event\",\"event\",301435442),event,new cljs.core.Keyword(null,\"?reply-fn\",\"?reply-fn\",-1479510592),_QMARK_reply_fn,new cljs.core.Keyword(null,\"uid\",\"uid\",-1447769400),uid], null)], 0)));\n});\ntaoensso$sente$self = function(event,_QMARK_reply_fn){\nswitch(arguments.length){\ncase 1:\nreturn taoensso$sente$self__1.call(this,event);\ncase 2:\nreturn taoensso$sente$self__2.call(this,event,_QMARK_reply_fn);\n}\nthrow(new Error('Invalid arity: ' + arguments.length));\n};\ntaoensso$sente$self.cljs$core$IFn$_invoke$arity$1 = taoensso$sente$self__1;\ntaoensso$sente$self.cljs$core$IFn$_invoke$arity$2 = taoensso$sente$self__2;\nreturn taoensso$sente$self;\n})()\n;\nvar send_handshake_BANG_ = (function (server_ch,websocket_QMARK_){\ntaoensso.timbre._log_BANG_.cljs$core$IFn$_invoke$arity$10(taoensso.timbre._STAR_config_STAR_,new cljs.core.Keyword(null,\"trace\",\"trace\",-1082747415),\"taoensso.sente\",null,556,new cljs.core.Keyword(null,\"f\",\"f\",-1597136552),new cljs.core.Keyword(null,\"auto\",\"auto\",-566279492),(new cljs.core.Delay((function (){\nreturn new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [\"send-handshake!\"], null);\n}),null)),null,-1139477377);\n\nvar _QMARK_handshake_data = (handshake_data_fn.cljs$core$IFn$_invoke$arity$1 ? handshake_data_fn.cljs$core$IFn$_invoke$arity$1(ring_req) : handshake_data_fn.call(null,ring_req));\nvar handshake_ev = (((_QMARK_handshake_data == null))?new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"chsk\",\"handshake\",\"chsk/handshake\",64910686),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [uid,csrf_token], null)], null):new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"chsk\",\"handshake\",\"chsk/handshake\",64910686),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [uid,csrf_token,_QMARK_handshake_data], null)], null));\nreturn taoensso.sente.interfaces.sch_send_BANG_(server_ch,websocket_QMARK_,taoensso.sente.pack.cljs$core$IFn$_invoke$arity$2(packer__$1,handshake_ev));\n});\nif(clojure.string.blank_QMARK_(client_id)){\nvar err_msg = \"Client's Ring request doesn't have a client id. Does your server have the necessary keyword Ring middleware (`wrap-params` & `wrap-keyword-params`)?\";\ntaoensso.timbre._log_BANG_.cljs$core$IFn$_invoke$arity$10(taoensso.timbre._STAR_config_STAR_,new cljs.core.Keyword(null,\"error\",\"error\",-978969032),\"taoensso.sente\",null,567,new cljs.core.Keyword(null,\"f\",\"f\",-1597136552),new cljs.core.Keyword(null,\"auto\",\"auto\",-566279492),(new cljs.core.Delay((function (){\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [[err_msg,\": %s\"].join(''),ring_req], null);\n}),null)),null,553378184);\n\nthrow cljs.core.ex_info.cljs$core$IFn$_invoke$arity$2(err_msg,new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"ring-req\",\"ring-req\",-747861961),ring_req], null));\n} else {\nreturn taoensso.sente.interfaces.ring_req__GT_server_ch_resp(web_server_ch_adapter,ring_req,new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null,\"on-open\",\"on-open\",-1391088163),(function (server_ch,websocket_QMARK_){\nif(cljs.core.truth_(websocket_QMARK_)){\nvar _ = taoensso.timbre._log_BANG_.cljs$core$IFn$_invoke$arity$10(taoensso.timbre._STAR_config_STAR_,new cljs.core.Keyword(null,\"trace\",\"trace\",-1082747415),\"taoensso.sente\",null,576,new cljs.core.Keyword(null,\"f\",\"f\",-1597136552),new cljs.core.Keyword(null,\"auto\",\"auto\",-566279492),(new cljs.core.Delay((function (){\nreturn new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [\"New WebSocket channel: %s (%s)\",uid,sch_uuid], null);\n}),null)),null,-331498850);\nvar updated_conn = upd_conn_BANG_(new cljs.core.Keyword(null,\"ws\",\"ws\",86841443),uid,client_id,server_ch);\nvar udt_open = new cljs.core.Keyword(null,\"udt\",\"udt\",2011712751).cljs$core$IFn$_invoke$arity$1(updated_conn);\nif(cljs.core.truth_(connect_uid_BANG_(new cljs.core.Keyword(null,\"ws\",\"ws\",86841443),uid))){\nreceive_event_msg_BANG_(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"chsk\",\"uidport-open\",\"chsk/uidport-open\",1685786954),uid], null));\n} else {\n}\n\nsend_handshake_BANG_(server_ch,websocket_QMARK_);\n\nvar temp__5735__auto__ = ws_kalive_ms;\nif(cljs.core.truth_(temp__5735__auto__)){\nvar ms = temp__5735__auto__;\nvar c__38372__auto__ = cljs.core.async.chan.cljs$core$IFn$_invoke$arity$1((1));\ncljs.core.async.impl.dispatch.run((function (){\nvar f__38373__auto__ = (function (){var switch__38280__auto__ = (function (state_43509){\nvar state_val_43510 = (state_43509[(1)]);\nif((state_val_43510 === (7))){\nvar inst_43505 = (state_43509[(2)]);\nvar state_43509__$1 = state_43509;\nvar statearr_43511_44235 = state_43509__$1;\n(statearr_43511_44235[(2)] = inst_43505);\n\n(statearr_43511_44235[(1)] = (3));\n\n\nreturn new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268);\n} else {\nif((state_val_43510 === (1))){\nvar inst_43473 = udt_open;\nvar inst_43474 = inst_43473;\nvar state_43509__$1 = (function (){var statearr_43512 = state_43509;\n(statearr_43512[(7)] = inst_43474);\n\nreturn statearr_43512;\n})();\nvar statearr_43513_44236 = state_43509__$1;\n(statearr_43513_44236[(2)] = null);\n\n(statearr_43513_44236[(1)] = (2));\n\n\nreturn new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268);\n} else {\nif((state_val_43510 === (4))){\nvar inst_43483 = (state_43509[(8)]);\nvar inst_43478 = (state_43509[(2)]);\nvar inst_43479 = cljs.core.deref(conns_);\nvar inst_43480 = cljs.core.PersistentVector.EMPTY_NODE;\nvar inst_43481 = [new cljs.core.Keyword(null,\"ws\",\"ws\",86841443),uid,client_id];\nvar inst_43482 = (new cljs.core.PersistentVector(null,3,(5),inst_43480,inst_43481,null));\nvar inst_43483__$1 = cljs.core.get_in.cljs$core$IFn$_invoke$arity$2(inst_43479,inst_43482);\nvar state_43509__$1 = (function (){var statearr_43514 = state_43509;\n(statearr_43514[(9)] = inst_43478);\n\n(statearr_43514[(8)] = inst_43483__$1);\n\nreturn statearr_43514;\n})();\nif(cljs.core.truth_(inst_43483__$1)){\nvar statearr_43515_44237 = state_43509__$1;\n(statearr_43515_44237[(1)] = (5));\n\n} else {\nvar statearr_43516_44238 = state_43509__$1;\n(statearr_43516_44238[(1)] = (6));\n\n}\n\nreturn new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268);\n} else {\nif((state_val_43510 === (13))){\nvar inst_43489 = (state_43509[(10)]);\nvar inst_43498 = (state_43509[(2)]);\nvar inst_43474 = inst_43489;\nvar state_43509__$1 = (function (){var statearr_43517 = state_43509;\n(statearr_43517[(11)] = inst_43498);\n\n(statearr_43517[(7)] = inst_43474);\n\nreturn statearr_43517;\n})();\nvar statearr_43518_44239 = state_43509__$1;\n(statearr_43518_44239[(2)] = null);\n\n(statearr_43518_44239[(1)] = (2));\n\n\nreturn new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268);\n} else {\nif((state_val_43510 === (6))){\nvar state_43509__$1 = state_43509;\nvar statearr_43519_44240 = state_43509__$1;\n(statearr_43519_44240[(2)] = null);\n\n(statearr_43519_44240[(1)] = (7));\n\n\nreturn new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268);\n} else {\nif((state_val_43510 === (3))){\nvar inst_43507 = (state_43509[(2)]);\nvar state_43509__$1 = state_43509;\nreturn cljs.core.async.impl.ioc_helpers.return_chan(state_43509__$1,inst_43507);\n} else {\nif((state_val_43510 === (12))){\nvar state_43509__$1 = state_43509;\nvar statearr_43520_44241 = state_43509__$1;\n(statearr_43520_44241[(2)] = null);\n\n(statearr_43520_44241[(1)] = (13));\n\n\nreturn new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268);\n} else {\nif((state_val_43510 === (2))){\nvar inst_43476 = cljs.core.async.timeout(ms);\nvar state_43509__$1 = state_43509;\nreturn cljs.core.async.impl.ioc_helpers.take_BANG_(state_43509__$1,(4),inst_43476);\n} else {\nif((state_val_43510 === (11))){\nvar inst_43494 = taoensso.sente.pack.cljs$core$IFn$_invoke$arity$2(packer__$1,new cljs.core.Keyword(\"chsk\",\"ws-ping\",\"chsk/ws-ping\",191675304));\nvar inst_43495 = taoensso.sente.interfaces.sch_send_BANG_(server_ch,websocket_QMARK_,inst_43494);\nvar state_43509__$1 = state_43509;\nvar statearr_43521_44242 = state_43509__$1;\n(statearr_43521_44242[(2)] = inst_43495);\n\n(statearr_43521_44242[(1)] = (13));\n\n\nreturn new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268);\n} else {\nif((state_val_43510 === (9))){\nvar state_43509__$1 = state_43509;\nvar statearr_43522_44243 = state_43509__$1;\n(statearr_43522_44243[(2)] = null);\n\n(statearr_43522_44243[(1)] = (10));\n\n\nreturn new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268);\n} else {\nif((state_val_43510 === (5))){\nvar inst_43483 = (state_43509[(8)]);\nvar inst_43488 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(inst_43483,(0),null);\nvar inst_43489 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(inst_43483,(1),null);\nvar inst_43490 = taoensso.sente.interfaces.sch_open_QMARK_(server_ch);\nvar state_43509__$1 = (function (){var statearr_43523 = state_43509;\n(statearr_43523[(10)] = inst_43489);\n\n(statearr_43523[(12)] = inst_43488);\n\nreturn statearr_43523;\n})();\nif(cljs.core.truth_(inst_43490)){\nvar statearr_43524_44244 = state_43509__$1;\n(statearr_43524_44244[(1)] = (8));\n\n} else {\nvar statearr_43525_44245 = state_43509__$1;\n(statearr_43525_44245[(1)] = (9));\n\n}\n\nreturn new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268);\n} else {\nif((state_val_43510 === (10))){\nvar inst_43502 = (state_43509[(2)]);\nvar state_43509__$1 = state_43509;\nvar statearr_43526_44246 = state_43509__$1;\n(statearr_43526_44246[(2)] = inst_43502);\n\n(statearr_43526_44246[(1)] = (7));\n\n\nreturn new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268);\n} else {\nif((state_val_43510 === (8))){\nvar inst_43489 = (state_43509[(10)]);\nvar inst_43474 = (state_43509[(7)]);\nvar inst_43492 = cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(inst_43489,inst_43474);\nvar state_43509__$1 = state_43509;\nif(inst_43492){\nvar statearr_43527_44247 = state_43509__$1;\n(statearr_43527_44247[(1)] = (11));\n\n} else {\nvar statearr_43528_44248 = state_43509__$1;\n(statearr_43528_44248[(1)] = (12));\n\n}\n\nreturn new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268);\n} else {\nreturn null;\n}\n}\n}\n}\n}\n}\n}\n}\n}\n}\n}\n}\n}\n});\nreturn (function() {\nvar taoensso$sente$state_machine__38281__auto__ = null;\nvar taoensso$sente$state_machine__38281__auto____0 = (function (){\nvar statearr_43529 = [null,null,null,null,null,null,null,null,null,null,null,null,null];\n(statearr_43529[(0)] = taoensso$sente$state_machine__38281__auto__);\n\n(statearr_43529[(1)] = (1));\n\nreturn statearr_43529;\n});\nvar taoensso$sente$state_machine__38281__auto____1 = (function (state_43509){\nwhile(true){\nvar ret_value__38282__auto__ = (function (){try{while(true){\nvar result__38283__auto__ = switch__38280__auto__(state_43509);\nif(cljs.core.keyword_identical_QMARK_(result__38283__auto__,new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268))){\ncontinue;\n} else {\nreturn result__38283__auto__;\n}\nbreak;\n}\n}catch (e43530){var ex__38284__auto__ = e43530;\nvar statearr_43531_44249 = state_43509;\n(statearr_43531_44249[(2)] = ex__38284__auto__);\n\n\nif(cljs.core.seq((state_43509[(4)]))){\nvar statearr_43532_44250 = state_43509;\n(statearr_43532_44250[(1)] = cljs.core.first((state_43509[(4)])));\n\n} else {\nthrow ex__38284__auto__;\n}\n\nreturn new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268);\n}})();\nif(cljs.core.keyword_identical_QMARK_(ret_value__38282__auto__,new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268))){\nvar G__44251 = state_43509;\nstate_43509 = G__44251;\ncontinue;\n} else {\nreturn ret_value__38282__auto__;\n}\nbreak;\n}\n});\ntaoensso$sente$state_machine__38281__auto__ = function(state_43509){\nswitch(arguments.length){\ncase 0:\nreturn taoensso$sente$state_machine__38281__auto____0.call(this);\ncase 1:\nreturn taoensso$sente$state_machine__38281__auto____1.call(this,state_43509);\n}\nthrow(new Error('Invalid arity: ' + arguments.length));\n};\ntaoensso$sente$state_machine__38281__auto__.cljs$core$IFn$_invoke$arity$0 = taoensso$sente$state_machine__38281__auto____0;\ntaoensso$sente$state_machine__38281__auto__.cljs$core$IFn$_invoke$arity$1 = taoensso$sente$state_machine__38281__auto____1;\nreturn taoensso$sente$state_machine__38281__auto__;\n})()\n})();\nvar state__38374__auto__ = (function (){var statearr_43533 = f__38373__auto__();\n(statearr_43533[(6)] = c__38372__auto__);\n\nreturn statearr_43533;\n})();\nreturn cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped(state__38374__auto__);\n}));\n\nreturn c__38372__auto__;\n} else {\nreturn null;\n}\n} else {\nvar _ = taoensso.timbre._log_BANG_.cljs$core$IFn$_invoke$arity$10(taoensso.timbre._STAR_config_STAR_,new cljs.core.Keyword(null,\"trace\",\"trace\",-1082747415),\"taoensso.sente\",null,605,new cljs.core.Keyword(null,\"f\",\"f\",-1597136552),new cljs.core.Keyword(null,\"auto\",\"auto\",-566279492),(new cljs.core.Delay((function (){\nreturn new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [\"New Ajax handshake/poll: %s (%s)\",uid,sch_uuid], null);\n}),null)),null,-1651039990);\nvar updated_conn = upd_conn_BANG_(new cljs.core.Keyword(null,\"ajax\",\"ajax\",814345549),uid,client_id,server_ch);\nvar udt_open = new cljs.core.Keyword(null,\"udt\",\"udt\",2011712751).cljs$core$IFn$_invoke$arity$1(updated_conn);\nvar handshake_QMARK_ = (function (){var or__4126__auto__ = new cljs.core.Keyword(null,\"init?\",\"init?\",438181499).cljs$core$IFn$_invoke$arity$1(updated_conn);\nif(cljs.core.truth_(or__4126__auto__)){\nreturn or__4126__auto__;\n} else {\nreturn new cljs.core.Keyword(null,\"handshake?\",\"handshake?\",-423743093).cljs$core$IFn$_invoke$arity$1(params);\n}\n})();\nif(cljs.core.truth_(connect_uid_BANG_(new cljs.core.Keyword(null,\"ajax\",\"ajax\",814345549),uid))){\nreceive_event_msg_BANG_(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"chsk\",\"uidport-open\",\"chsk/uidport-open\",1685786954),uid], null));\n} else {\n}\n\nif(cljs.core.truth_(handshake_QMARK_)){\nreturn send_handshake_BANG_(server_ch,websocket_QMARK_);\n} else {\nvar temp__5735__auto__ = lp_timeout_ms;\nif(cljs.core.truth_(temp__5735__auto__)){\nvar ms = temp__5735__auto__;\nvar c__38372__auto__ = cljs.core.async.chan.cljs$core$IFn$_invoke$arity$1((1));\ncljs.core.async.impl.dispatch.run((function (){\nvar f__38373__auto__ = (function (){var switch__38280__auto__ = (function (state_43559){\nvar state_val_43560 = (state_43559[(1)]);\nif((state_val_43560 === (1))){\nvar inst_43534 = cljs.core.async.timeout(ms);\nvar state_43559__$1 = state_43559;\nreturn cljs.core.async.impl.ioc_helpers.take_BANG_(state_43559__$1,(2),inst_43534);\n} else {\nif((state_val_43560 === (2))){\nvar inst_43541 = (state_43559[(7)]);\nvar inst_43536 = (state_43559[(2)]);\nvar inst_43537 = cljs.core.deref(conns_);\nvar inst_43538 = cljs.core.PersistentVector.EMPTY_NODE;\nvar inst_43539 = [new cljs.core.Keyword(null,\"ajax\",\"ajax\",814345549),uid,client_id];\nvar inst_43540 = (new cljs.core.PersistentVector(null,3,(5),inst_43538,inst_43539,null));\nvar inst_43541__$1 = cljs.core.get_in.cljs$core$IFn$_invoke$arity$2(inst_43537,inst_43540);\nvar state_43559__$1 = (function (){var statearr_43561 = state_43559;\n(statearr_43561[(8)] = inst_43536);\n\n(statearr_43561[(7)] = inst_43541__$1);\n\nreturn statearr_43561;\n})();\nif(cljs.core.truth_(inst_43541__$1)){\nvar statearr_43562_44252 = state_43559__$1;\n(statearr_43562_44252[(1)] = (3));\n\n} else {\nvar statearr_43563_44253 = state_43559__$1;\n(statearr_43563_44253[(1)] = (4));\n\n}\n\nreturn new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268);\n} else {\nif((state_val_43560 === (3))){\nvar inst_43541 = (state_43559[(7)]);\nvar inst_43546 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(inst_43541,(0),null);\nvar inst_43547 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(inst_43541,(1),null);\nvar inst_43548 = cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(inst_43547,udt_open);\nvar state_43559__$1 = (function (){var statearr_43564 = state_43559;\n(statearr_43564[(9)] = inst_43546);\n\nreturn statearr_43564;\n})();\nif(inst_43548){\nvar statearr_43565_44254 = state_43559__$1;\n(statearr_43565_44254[(1)] = (6));\n\n} else {\nvar statearr_43566_44255 = state_43559__$1;\n(statearr_43566_44255[(1)] = (7));\n\n}\n\nreturn new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268);\n} else {\nif((state_val_43560 === (4))){\nvar state_43559__$1 = state_43559;\nvar statearr_43567_44256 = state_43559__$1;\n(statearr_43567_44256[(2)] = null);\n\n(statearr_43567_44256[(1)] = (5));\n\n\nreturn new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268);\n} else {\nif((state_val_43560 === (5))){\nvar inst_43557 = (state_43559[(2)]);\nvar state_43559__$1 = state_43559;\nreturn cljs.core.async.impl.ioc_helpers.return_chan(state_43559__$1,inst_43557);\n} else {\nif((state_val_43560 === (6))){\nvar inst_43550 = taoensso.sente.pack.cljs$core$IFn$_invoke$arity$2(packer__$1,new cljs.core.Keyword(\"chsk\",\"timeout\",\"chsk/timeout\",-319776489));\nvar inst_43551 = taoensso.sente.interfaces.sch_send_BANG_(server_ch,websocket_QMARK_,inst_43550);\nvar state_43559__$1 = state_43559;\nvar statearr_43568_44257 = state_43559__$1;\n(statearr_43568_44257[(2)] = inst_43551);\n\n(statearr_43568_44257[(1)] = (8));\n\n\nreturn new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268);\n} else {\nif((state_val_43560 === (7))){\nvar state_43559__$1 = state_43559;\nvar statearr_43569_44258 = state_43559__$1;\n(statearr_43569_44258[(2)] = null);\n\n(statearr_43569_44258[(1)] = (8));\n\n\nreturn new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268);\n} else {\nif((state_val_43560 === (8))){\nvar inst_43554 = (state_43559[(2)]);\nvar state_43559__$1 = state_43559;\nvar statearr_43570_44259 = state_43559__$1;\n(statearr_43570_44259[(2)] = inst_43554);\n\n(statearr_43570_44259[(1)] = (5));\n\n\nreturn new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268);\n} else {\nreturn null;\n}\n}\n}\n}\n}\n}\n}\n}\n});\nreturn (function() {\nvar taoensso$sente$state_machine__38281__auto__ = null;\nvar taoensso$sente$state_machine__38281__auto____0 = (function (){\nvar statearr_43571 = [null,null,null,null,null,null,null,null,null,null];\n(statearr_43571[(0)] = taoensso$sente$state_machine__38281__auto__);\n\n(statearr_43571[(1)] = (1));\n\nreturn statearr_43571;\n});\nvar taoensso$sente$state_machine__38281__auto____1 = (function (state_43559){\nwhile(true){\nvar ret_value__38282__auto__ = (function (){try{while(true){\nvar result__38283__auto__ = switch__38280__auto__(state_43559);\nif(cljs.core.keyword_identical_QMARK_(result__38283__auto__,new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268))){\ncontinue;\n} else {\nreturn result__38283__auto__;\n}\nbreak;\n}\n}catch (e43572){var ex__38284__auto__ = e43572;\nvar statearr_43573_44260 = state_43559;\n(statearr_43573_44260[(2)] = ex__38284__auto__);\n\n\nif(cljs.core.seq((state_43559[(4)]))){\nvar statearr_43574_44261 = state_43559;\n(statearr_43574_44261[(1)] = cljs.core.first((state_43559[(4)])));\n\n} else {\nthrow ex__38284__auto__;\n}\n\nreturn new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268);\n}})();\nif(cljs.core.keyword_identical_QMARK_(ret_value__38282__auto__,new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268))){\nvar G__44262 = state_43559;\nstate_43559 = G__44262;\ncontinue;\n} else {\nreturn ret_value__38282__auto__;\n}\nbreak;\n}\n});\ntaoensso$sente$state_machine__38281__auto__ = function(state_43559){\nswitch(arguments.length){\ncase 0:\nreturn taoensso$sente$state_machine__38281__auto____0.call(this);\ncase 1:\nreturn taoensso$sente$state_machine__38281__auto____1.call(this,state_43559);\n}\nthrow(new Error('Invalid arity: ' + arguments.length));\n};\ntaoensso$sente$state_machine__38281__auto__.cljs$core$IFn$_invoke$arity$0 = taoensso$sente$state_machine__38281__auto____0;\ntaoensso$sente$state_machine__38281__auto__.cljs$core$IFn$_invoke$arity$1 = taoensso$sente$state_machine__38281__auto____1;\nreturn taoensso$sente$state_machine__38281__auto__;\n})()\n})();\nvar state__38374__auto__ = (function (){var statearr_43575 = f__38373__auto__();\n(statearr_43575[(6)] = c__38372__auto__);\n\nreturn statearr_43575;\n})();\nreturn cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped(state__38374__auto__);\n}));\n\nreturn c__38372__auto__;\n} else {\nreturn null;\n}\n}\n}\n}),new cljs.core.Keyword(null,\"on-msg\",\"on-msg\",-2021925279),(function (server_ch,websocket_QMARK_,req_ppstr){\nif(cljs.core.truth_(websocket_QMARK_)){\n} else {\nthrow (new Error(\"Assert failed: websocket?\"));\n}\n\nupd_conn_BANG_(new cljs.core.Keyword(null,\"ws\",\"ws\",86841443),uid,client_id);\n\nvar vec__43576 = taoensso.sente.unpack(packer__$1,req_ppstr);\nvar clj = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__43576,(0),null);\nvar _QMARK_cb_uuid = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__43576,(1),null);\nreturn receive_event_msg_BANG_(clj,(cljs.core.truth_(_QMARK_cb_uuid)?(function taoensso$sente$reply_fn(resp_clj){\ntaoensso.timbre._log_BANG_.cljs$core$IFn$_invoke$arity$10(taoensso.timbre._STAR_config_STAR_,new cljs.core.Keyword(null,\"trace\",\"trace\",-1082747415),\"taoensso.sente\",null,635,new cljs.core.Keyword(null,\"f\",\"f\",-1597136552),new cljs.core.Keyword(null,\"auto\",\"auto\",-566279492),(new cljs.core.Delay((function (){\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [\"Chsk send (ws reply): %s\",resp_clj], null);\n}),null)),null,-385296411);\n\nreturn taoensso.sente.interfaces.sch_send_BANG_(server_ch,websocket_QMARK_,taoensso.sente.pack.cljs$core$IFn$_invoke$arity$3(packer__$1,resp_clj,_QMARK_cb_uuid));\n}):null));\n}),new cljs.core.Keyword(null,\"on-close\",\"on-close\",-761178394),(function (server_ch,websocket_QMARK_,_status){\nvar conn_type = (cljs.core.truth_(websocket_QMARK_)?new cljs.core.Keyword(null,\"ws\",\"ws\",86841443):new cljs.core.Keyword(null,\"ajax\",\"ajax\",814345549));\nvar _ = taoensso.timbre._log_BANG_.cljs$core$IFn$_invoke$arity$10(taoensso.timbre._STAR_config_STAR_,new cljs.core.Keyword(null,\"trace\",\"trace\",-1082747415),\"taoensso.sente\",null,644,new cljs.core.Keyword(null,\"f\",\"f\",-1597136552),new cljs.core.Keyword(null,\"auto\",\"auto\",-566279492),(new cljs.core.Delay((function (){\nreturn new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [\"%s channel closed: %s (%s)\",(cljs.core.truth_(websocket_QMARK_)?\"WebSocket\":\"Ajax\"),uid,sch_uuid], null);\n}),null)),null,980693020);\nvar updated_conn = upd_conn_BANG_(conn_type,uid,client_id,null);\nvar udt_close = new cljs.core.Keyword(null,\"udt\",\"udt\",2011712751).cljs$core$IFn$_invoke$arity$1(updated_conn);\nvar c__38372__auto__ = cljs.core.async.chan.cljs$core$IFn$_invoke$arity$1((1));\ncljs.core.async.impl.dispatch.run((function (){\nvar f__38373__auto__ = (function (){var switch__38280__auto__ = (function (state_43630){\nvar state_val_43631 = (state_43630[(1)]);\nif((state_val_43631 === (7))){\nvar state_43630__$1 = state_43630;\nvar statearr_43632_44263 = state_43630__$1;\n(statearr_43632_44263[(2)] = null);\n\n(statearr_43632_44263[(1)] = (8));\n\n\nreturn new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268);\n} else {\nif((state_val_43631 === (1))){\nvar inst_43579 = cljs.core.async.timeout((5000));\nvar state_43630__$1 = state_43630;\nreturn cljs.core.async.impl.ioc_helpers.take_BANG_(state_43630__$1,(2),inst_43579);\n} else {\nif((state_val_43631 === (4))){\nvar state_43630__$1 = state_43630;\nvar statearr_43633_44264 = state_43630__$1;\n(statearr_43633_44264[(2)] = null);\n\n(statearr_43633_44264[(1)] = (5));\n\n\nreturn new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268);\n} else {\nif((state_val_43631 === (13))){\nvar state_43630__$1 = state_43630;\nvar statearr_43634_44265 = state_43630__$1;\n(statearr_43634_44265[(2)] = null);\n\n(statearr_43634_44265[(1)] = (14));\n\n\nreturn new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268);\n} else {\nif((state_val_43631 === (6))){\nvar inst_43591 = (state_43630[(7)]);\nvar inst_43589 = (state_43630[(8)]);\nvar inst_43607 = (state_43630[(9)]);\nvar inst_43590 = (state_43630[(10)]);\nvar inst_43602 = cljs.core.PersistentVector.EMPTY_NODE;\nvar inst_43603 = [conn_type,uid,client_id];\nvar inst_43604 = (new cljs.core.PersistentVector(null,3,(5),inst_43602,inst_43603,null));\nvar inst_43606 = (function (){var vec__43582 = inst_43589;\nvar __QMARK_sch = inst_43590;\nvar udt_t1 = inst_43591;\nreturn (function (p__43605){\nvar vec__43635 = p__43605;\nvar _sch = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__43635,(0),null);\nvar udt_t1__$1 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__43635,(1),null);\nif(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(udt_t1__$1,udt_close)){\nreturn taoensso.encore.swapped(new cljs.core.Keyword(\"swap\",\"dissoc\",\"swap/dissoc\",-605373782),true);\n} else {\nreturn taoensso.encore.swapped(udt_t1__$1,false);\n}\n});\n})();\nvar inst_43607__$1 = taoensso.encore.swap_in_BANG_.cljs$core$IFn$_invoke$arity$3(conns_,inst_43604,inst_43606);\nvar state_43630__$1 = (function (){var statearr_43638 = state_43630;\n(statearr_43638[(9)] = inst_43607__$1);\n\nreturn statearr_43638;\n})();\nif(cljs.core.truth_(inst_43607__$1)){\nvar statearr_43639_44266 = state_43630__$1;\n(statearr_43639_44266[(1)] = (9));\n\n} else {\nvar statearr_43640_44267 = state_43630__$1;\n(statearr_43640_44267[(1)] = (10));\n\n}\n\nreturn new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268);\n} else {\nif((state_val_43631 === (3))){\nvar inst_43591 = (state_43630[(7)]);\nvar inst_43589 = (state_43630[(8)]);\nvar inst_43590 = (state_43630[(10)]);\nvar inst_43594 = (function (){var vec__43582 = inst_43589;\nvar __QMARK_sch = inst_43590;\nvar udt_t1 = inst_43591;\nreturn (function (){\nreturn new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [\"close-timeout: %s %s %s %s\",conn_type,uid,sch_uuid,new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(udt_t1,udt_close),udt_t1,udt_close], null)], null);\n});\n})();\nvar inst_43595 = (new cljs.core.Delay(inst_43594,null));\nvar inst_43596 = taoensso.timbre._log_BANG_.cljs$core$IFn$_invoke$arity$10(taoensso.timbre._STAR_config_STAR_,new cljs.core.Keyword(null,\"debug\",\"debug\",-1608172596),\"taoensso.sente\",null,658,new cljs.core.Keyword(null,\"f\",\"f\",-1597136552),new cljs.core.Keyword(null,\"auto\",\"auto\",-566279492),inst_43595,null,-1053111907);\nvar state_43630__$1 = state_43630;\nvar statearr_43641_44268 = state_43630__$1;\n(statearr_43641_44268[(2)] = inst_43596);\n\n(statearr_43641_44268[(1)] = (5));\n\n\nreturn new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268);\n} else {\nif((state_val_43631 === (12))){\nvar inst_43616 = cljs.core.PersistentVector.EMPTY_NODE;\nvar inst_43617 = [new cljs.core.Keyword(\"chsk\",\"uidport-close\",\"chsk/uidport-close\",901058678),uid];\nvar inst_43618 = (new cljs.core.PersistentVector(null,2,(5),inst_43616,inst_43617,null));\nvar inst_43619 = receive_event_msg_BANG_(inst_43618);\nvar state_43630__$1 = state_43630;\nvar statearr_43642_44269 = state_43630__$1;\n(statearr_43642_44269[(2)] = inst_43619);\n\n(statearr_43642_44269[(1)] = (14));\n\n\nreturn new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268);\n} else {\nif((state_val_43631 === (2))){\nvar inst_43589 = (state_43630[(8)]);\nvar inst_43581 = (state_43630[(2)]);\nvar inst_43585 = cljs.core.deref(conns_);\nvar inst_43586 = cljs.core.PersistentVector.EMPTY_NODE;\nvar inst_43587 = [conn_type,uid,client_id];\nvar inst_43588 = (new cljs.core.PersistentVector(null,3,(5),inst_43586,inst_43587,null));\nvar inst_43589__$1 = cljs.core.get_in.cljs$core$IFn$_invoke$arity$2(inst_43585,inst_43588);\nvar inst_43590 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(inst_43589__$1,(0),null);\nvar inst_43591 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(inst_43589__$1,(1),null);\nvar inst_43592 = cljs.core.deref(taoensso.sente.debug_mode_QMARK__);\nvar state_43630__$1 = (function (){var statearr_43643 = state_43630;\n(statearr_43643[(7)] = inst_43591);\n\n(statearr_43643[(8)] = inst_43589__$1);\n\n(statearr_43643[(11)] = inst_43581);\n\n(statearr_43643[(10)] = inst_43590);\n\nreturn statearr_43643;\n})();\nif(cljs.core.truth_(inst_43592)){\nvar statearr_43644_44270 = state_43630__$1;\n(statearr_43644_44270[(1)] = (3));\n\n} else {\nvar statearr_43645_44271 = state_43630__$1;\n(statearr_43645_44271[(1)] = (4));\n\n}\n\nreturn new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268);\n} else {\nif((state_val_43631 === (11))){\nvar inst_43625 = (state_43630[(2)]);\nvar state_43630__$1 = state_43630;\nvar statearr_43646_44272 = state_43630__$1;\n(statearr_43646_44272[(2)] = inst_43625);\n\n(statearr_43646_44272[(1)] = (8));\n\n\nreturn new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268);\n} else {\nif((state_val_43631 === (9))){\nvar inst_43591 = (state_43630[(7)]);\nvar inst_43589 = (state_43630[(8)]);\nvar inst_43607 = (state_43630[(9)]);\nvar inst_43590 = (state_43630[(10)]);\nvar inst_43609 = cljs.core.PersistentVector.EMPTY_NODE;\nvar inst_43610 = [conn_type,uid];\nvar inst_43611 = (new cljs.core.PersistentVector(null,2,(5),inst_43609,inst_43610,null));\nvar inst_43612 = (function (){var vec__43582 = inst_43589;\nvar __QMARK_sch = inst_43590;\nvar udt_t1 = inst_43591;\nvar disconnect_QMARK_ = inst_43607;\nreturn (function (_QMARK_m){\nif(cljs.core.empty_QMARK_(_QMARK_m)){\nreturn new cljs.core.Keyword(\"swap\",\"dissoc\",\"swap/dissoc\",-605373782);\n} else {\nreturn _QMARK_m;\n}\n});\n})();\nvar inst_43613 = taoensso.encore.swap_in_BANG_.cljs$core$IFn$_invoke$arity$3(conns_,inst_43611,inst_43612);\nvar inst_43614 = upd_connected_uid_BANG_(uid);\nvar state_43630__$1 = (function (){var statearr_43647 = state_43630;\n(statearr_43647[(12)] = inst_43613);\n\nreturn statearr_43647;\n})();\nif(cljs.core.truth_(inst_43614)){\nvar statearr_43648_44273 = state_43630__$1;\n(statearr_43648_44273[(1)] = (12));\n\n} else {\nvar statearr_43649_44274 = state_43630__$1;\n(statearr_43649_44274[(1)] = (13));\n\n}\n\nreturn new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268);\n} else {\nif((state_val_43631 === (5))){\nvar inst_43591 = (state_43630[(7)]);\nvar inst_43599 = (state_43630[(2)]);\nvar inst_43600 = cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(inst_43591,udt_close);\nvar state_43630__$1 = (function (){var statearr_43650 = state_43630;\n(statearr_43650[(13)] = inst_43599);\n\nreturn statearr_43650;\n})();\nif(inst_43600){\nvar statearr_43651_44275 = state_43630__$1;\n(statearr_43651_44275[(1)] = (6));\n\n} else {\nvar statearr_43652_44276 = state_43630__$1;\n(statearr_43652_44276[(1)] = (7));\n\n}\n\nreturn new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268);\n} else {\nif((state_val_43631 === (14))){\nvar inst_43622 = (state_43630[(2)]);\nvar state_43630__$1 = state_43630;\nvar statearr_43653_44277 = state_43630__$1;\n(statearr_43653_44277[(2)] = inst_43622);\n\n(statearr_43653_44277[(1)] = (11));\n\n\nreturn new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268);\n} else {\nif((state_val_43631 === (10))){\nvar state_43630__$1 = state_43630;\nvar statearr_43654_44278 = state_43630__$1;\n(statearr_43654_44278[(2)] = null);\n\n(statearr_43654_44278[(1)] = (11));\n\n\nreturn new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268);\n} else {\nif((state_val_43631 === (8))){\nvar inst_43628 = (state_43630[(2)]);\nvar state_43630__$1 = state_43630;\nreturn cljs.core.async.impl.ioc_helpers.return_chan(state_43630__$1,inst_43628);\n} else {\nreturn null;\n}\n}\n}\n}\n}\n}\n}\n}\n}\n}\n}\n}\n}\n}\n});\nreturn (function() {\nvar taoensso$sente$state_machine__38281__auto__ = null;\nvar taoensso$sente$state_machine__38281__auto____0 = (function (){\nvar statearr_43655 = [null,null,null,null,null,null,null,null,null,null,null,null,null,null];\n(statearr_43655[(0)] = taoensso$sente$state_machine__38281__auto__);\n\n(statearr_43655[(1)] = (1));\n\nreturn statearr_43655;\n});\nvar taoensso$sente$state_machine__38281__auto____1 = (function (state_43630){\nwhile(true){\nvar ret_value__38282__auto__ = (function (){try{while(true){\nvar result__38283__auto__ = switch__38280__auto__(state_43630);\nif(cljs.core.keyword_identical_QMARK_(result__38283__auto__,new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268))){\ncontinue;\n} else {\nreturn result__38283__auto__;\n}\nbreak;\n}\n}catch (e43656){var ex__38284__auto__ = e43656;\nvar statearr_43657_44279 = state_43630;\n(statearr_43657_44279[(2)] = ex__38284__auto__);\n\n\nif(cljs.core.seq((state_43630[(4)]))){\nvar statearr_43658_44280 = state_43630;\n(statearr_43658_44280[(1)] = cljs.core.first((state_43630[(4)])));\n\n} else {\nthrow ex__38284__auto__;\n}\n\nreturn new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268);\n}})();\nif(cljs.core.keyword_identical_QMARK_(ret_value__38282__auto__,new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268))){\nvar G__44281 = state_43630;\nstate_43630 = G__44281;\ncontinue;\n} else {\nreturn ret_value__38282__auto__;\n}\nbreak;\n}\n});\ntaoensso$sente$state_machine__38281__auto__ = function(state_43630){\nswitch(arguments.length){\ncase 0:\nreturn taoensso$sente$state_machine__38281__auto____0.call(this);\ncase 1:\nreturn taoensso$sente$state_machine__38281__auto____1.call(this,state_43630);\n}\nthrow(new Error('Invalid arity: ' + arguments.length));\n};\ntaoensso$sente$state_machine__38281__auto__.cljs$core$IFn$_invoke$arity$0 = taoensso$sente$state_machine__38281__auto____0;\ntaoensso$sente$state_machine__38281__auto__.cljs$core$IFn$_invoke$arity$1 = taoensso$sente$state_machine__38281__auto____1;\nreturn taoensso$sente$state_machine__38281__auto__;\n})()\n})();\nvar state__38374__auto__ = (function (){var statearr_43659 = f__38373__auto__();\n(statearr_43659[(6)] = c__38372__auto__);\n\nreturn statearr_43659;\n})();\nreturn cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped(state__38374__auto__);\n}));\n\nreturn c__38372__auto__;\n}),new cljs.core.Keyword(null,\"on-error\",\"on-error\",1728533530),(function (server_ch,websocket_QMARK_,error){\nreturn taoensso.timbre._log_BANG_.cljs$core$IFn$_invoke$arity$10(taoensso.timbre._STAR_config_STAR_,new cljs.core.Keyword(null,\"error\",\"error\",-978969032),\"taoensso.sente\",null,680,new cljs.core.Keyword(null,\"f\",\"f\",-1597136552),new cljs.core.Keyword(null,\"auto\",\"auto\",-566279492),(new cljs.core.Delay((function (){\nreturn new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [\"ring-req->server-ch-resp error: %s (%s)\",error,uid,sch_uuid], null);\n}),null)),null,-596832455);\n})], null));\n}\n})], null);\n}));\n\n(taoensso.sente.make_channel_socket_server_BANG_.cljs$lang$maxFixedArity = (1));\n\n/** @this {Function} */\n(taoensso.sente.make_channel_socket_server_BANG_.cljs$lang$applyTo = (function (seq43346){\nvar G__43347 = cljs.core.first(seq43346);\nvar seq43346__$1 = cljs.core.next(seq43346);\nvar self__4723__auto__ = this;\nreturn self__4723__auto__.cljs$core$IFn$_invoke$arity$variadic(G__43347,seq43346__$1);\n}));\n\n/**\n * Actually pushes buffered events (as packed-str) to all uid's WebSocket conns.\n */\ntaoensso.sente.send_buffered_server_evs_GT_ws_clients_BANG_ = (function taoensso$sente$send_buffered_server_evs_GT_ws_clients_BANG_(conns_,uid,buffered_evs_pstr,upd_conn_BANG_){\ntaoensso.timbre._log_BANG_.cljs$core$IFn$_invoke$arity$10(taoensso.timbre._STAR_config_STAR_,new cljs.core.Keyword(null,\"trace\",\"trace\",-1082747415),\"taoensso.sente\",null,686,new cljs.core.Keyword(null,\"f\",\"f\",-1597136552),new cljs.core.Keyword(null,\"auto\",\"auto\",-566279492),(new cljs.core.Delay((function (){\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [\"send-buffered-server-evs>ws-clients!: %s\",buffered_evs_pstr], null);\n}),null)),null,1481263939);\n\nvar seq__43660 = cljs.core.seq(cljs.core.get_in.cljs$core$IFn$_invoke$arity$2(cljs.core.deref(conns_),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"ws\",\"ws\",86841443),uid], null)));\nvar chunk__43661 = null;\nvar count__43662 = (0);\nvar i__43663 = (0);\nwhile(true){\nif((i__43663 < count__43662)){\nvar vec__43676 = chunk__43661.cljs$core$IIndexed$_nth$arity$2(null,i__43663);\nvar client_id = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__43676,(0),null);\nvar vec__43679 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__43676,(1),null);\nvar _QMARK_sch = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__43679,(0),null);\nvar _udt = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__43679,(1),null);\nvar temp__5735__auto___44282 = _QMARK_sch;\nif(cljs.core.truth_(temp__5735__auto___44282)){\nvar sch_44283 = temp__5735__auto___44282;\n(upd_conn_BANG_.cljs$core$IFn$_invoke$arity$3 ? upd_conn_BANG_.cljs$core$IFn$_invoke$arity$3(new cljs.core.Keyword(null,\"ws\",\"ws\",86841443),uid,client_id) : upd_conn_BANG_.call(null,new cljs.core.Keyword(null,\"ws\",\"ws\",86841443),uid,client_id));\n\ntaoensso.sente.interfaces.sch_send_BANG_(sch_44283,new cljs.core.Keyword(null,\"websocket\",\"websocket\",-1714963101),buffered_evs_pstr);\n} else {\n}\n\n\nvar G__44284 = seq__43660;\nvar G__44285 = chunk__43661;\nvar G__44286 = count__43662;\nvar G__44287 = (i__43663 + (1));\nseq__43660 = G__44284;\nchunk__43661 = G__44285;\ncount__43662 = G__44286;\ni__43663 = G__44287;\ncontinue;\n} else {\nvar temp__5735__auto__ = cljs.core.seq(seq__43660);\nif(temp__5735__auto__){\nvar seq__43660__$1 = temp__5735__auto__;\nif(cljs.core.chunked_seq_QMARK_(seq__43660__$1)){\nvar c__4556__auto__ = cljs.core.chunk_first(seq__43660__$1);\nvar G__44288 = cljs.core.chunk_rest(seq__43660__$1);\nvar G__44289 = c__4556__auto__;\nvar G__44290 = cljs.core.count(c__4556__auto__);\nvar G__44291 = (0);\nseq__43660 = G__44288;\nchunk__43661 = G__44289;\ncount__43662 = G__44290;\ni__43663 = G__44291;\ncontinue;\n} else {\nvar vec__43682 = cljs.core.first(seq__43660__$1);\nvar client_id = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__43682,(0),null);\nvar vec__43685 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__43682,(1),null);\nvar _QMARK_sch = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__43685,(0),null);\nvar _udt = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__43685,(1),null);\nvar temp__5735__auto___44292__$1 = _QMARK_sch;\nif(cljs.core.truth_(temp__5735__auto___44292__$1)){\nvar sch_44293 = temp__5735__auto___44292__$1;\n(upd_conn_BANG_.cljs$core$IFn$_invoke$arity$3 ? upd_conn_BANG_.cljs$core$IFn$_invoke$arity$3(new cljs.core.Keyword(null,\"ws\",\"ws\",86841443),uid,client_id) : upd_conn_BANG_.call(null,new cljs.core.Keyword(null,\"ws\",\"ws\",86841443),uid,client_id));\n\ntaoensso.sente.interfaces.sch_send_BANG_(sch_44293,new cljs.core.Keyword(null,\"websocket\",\"websocket\",-1714963101),buffered_evs_pstr);\n} else {\n}\n\n\nvar G__44294 = cljs.core.next(seq__43660__$1);\nvar G__44295 = null;\nvar G__44296 = (0);\nvar G__44297 = (0);\nseq__43660 = G__44294;\nchunk__43661 = G__44295;\ncount__43662 = G__44296;\ni__43663 = G__44297;\ncontinue;\n}\n} else {\nreturn null;\n}\n}\nbreak;\n}\n});\n/**\n * Actually pushes buffered events (as packed-str) to all uid's Ajax conns.\n *   Allows some time for possible Ajax poller reconnects.\n */\ntaoensso.sente.send_buffered_server_evs_GT_ajax_clients_BANG_ = (function taoensso$sente$send_buffered_server_evs_GT_ajax_clients_BANG_(conns_,uid,buffered_evs_pstr){\ntaoensso.timbre._log_BANG_.cljs$core$IFn$_invoke$arity$10(taoensso.timbre._STAR_config_STAR_,new cljs.core.Keyword(null,\"trace\",\"trace\",-1082747415),\"taoensso.sente\",null,696,new cljs.core.Keyword(null,\"f\",\"f\",-1597136552),new cljs.core.Keyword(null,\"auto\",\"auto\",-566279492),(new cljs.core.Delay((function (){\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [\"send-buffered-server-evs>ajax-clients!: %s\",buffered_evs_pstr], null);\n}),null)),null,-1328074439);\n\nvar ms_backoffs = new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [(90),(180),(360),(720),(1440)], null);\nvar client_ids_unsatisfied = cljs.core.keys(cljs.core.get_in.cljs$core$IFn$_invoke$arity$2(cljs.core.deref(conns_),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"ajax\",\"ajax\",814345549),uid], null)));\nif(cljs.core.empty_QMARK_(client_ids_unsatisfied)){\nreturn null;\n} else {\nvar c__38372__auto__ = cljs.core.async.chan.cljs$core$IFn$_invoke$arity$1((1));\ncljs.core.async.impl.dispatch.run((function (){\nvar f__38373__auto__ = (function (){var switch__38280__auto__ = (function (state_43734){\nvar state_val_43735 = (state_43734[(1)]);\nif((state_val_43735 === (7))){\nvar inst_43696 = (state_43734[(7)]);\nvar inst_43689 = (state_43734[(8)]);\nvar inst_43690 = (state_43734[(9)]);\nvar inst_43706 = (function (){var n = inst_43689;\nvar client_ids_satisfied = inst_43690;\nvar _QMARK_pulled = inst_43696;\nreturn (function (s,client_id,p__43705){\nvar vec__43736 = p__43705;\nvar _QMARK_sch = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__43736,(0),null);\nvar _udt = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__43736,(1),null);\nvar sent_QMARK_ = (function (){var temp__5735__auto__ = _QMARK_sch;\nif(cljs.core.truth_(temp__5735__auto__)){\nvar sch = temp__5735__auto__;\nreturn taoensso.sente.interfaces.sch_send_BANG_(_QMARK_sch,cljs.core.not(new cljs.core.Keyword(null,\"websocket\",\"websocket\",-1714963101)),buffered_evs_pstr);\n} else {\nreturn null;\n}\n})();\nif(cljs.core.truth_(sent_QMARK_)){\nreturn cljs.core.conj.cljs$core$IFn$_invoke$arity$2(s,client_id);\n} else {\nreturn s;\n}\n});\n})();\nvar inst_43707 = cljs.core.PersistentHashSet.EMPTY;\nvar inst_43708 = cljs.core.reduce_kv(inst_43706,inst_43707,inst_43696);\nvar state_43734__$1 = state_43734;\nvar statearr_43739_44298 = state_43734__$1;\n(statearr_43739_44298[(2)] = inst_43708);\n\n(statearr_43739_44298[(1)] = (9));\n\n\nreturn new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268);\n} else {\nif((state_val_43735 === (1))){\nvar inst_43688 = cljs.core.PersistentHashSet.EMPTY;\nvar inst_43689 = (0);\nvar inst_43690 = inst_43688;\nvar state_43734__$1 = (function (){var statearr_43740 = state_43734;\n(statearr_43740[(8)] = inst_43689);\n\n(statearr_43740[(9)] = inst_43690);\n\nreturn statearr_43740;\n})();\nvar statearr_43741_44299 = state_43734__$1;\n(statearr_43741_44299[(2)] = null);\n\n(statearr_43741_44299[(1)] = (2));\n\n\nreturn new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268);\n} else {\nif((state_val_43735 === (4))){\nvar state_43734__$1 = state_43734;\nvar statearr_43742_44300 = state_43734__$1;\n(statearr_43742_44300[(2)] = true);\n\n(statearr_43742_44300[(1)] = (6));\n\n\nreturn new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268);\n} else {\nif((state_val_43735 === (15))){\nvar inst_43727 = (state_43734[(2)]);\nvar state_43734__$1 = state_43734;\nvar statearr_43743_44301 = state_43734__$1;\n(statearr_43743_44301[(2)] = inst_43727);\n\n(statearr_43743_44301[(1)] = (12));\n\n\nreturn new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268);\n} else {\nif((state_val_43735 === (13))){\nvar inst_43713 = (state_43734[(10)]);\nvar inst_43718 = cljs.core.rand_int(inst_43713);\nvar inst_43719 = (inst_43713 + inst_43718);\nvar inst_43720 = cljs.core.async.timeout(inst_43719);\nvar state_43734__$1 = state_43734;\nreturn cljs.core.async.impl.ioc_helpers.take_BANG_(state_43734__$1,(16),inst_43720);\n} else {\nif((state_val_43735 === (6))){\nvar inst_43696 = (state_43734[(7)]);\nvar inst_43703 = (state_43734[(2)]);\nvar state_43734__$1 = (function (){var statearr_43744 = state_43734;\n(statearr_43744[(11)] = inst_43703);\n\nreturn statearr_43744;\n})();\nif(cljs.core.truth_(inst_43696)){\nvar statearr_43745_44302 = state_43734__$1;\n(statearr_43745_44302[(1)] = (7));\n\n} else {\nvar statearr_43746_44303 = state_43734__$1;\n(statearr_43746_44303[(1)] = (8));\n\n}\n\nreturn new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268);\n} else {\nif((state_val_43735 === (3))){\nvar inst_43732 = (state_43734[(2)]);\nvar state_43734__$1 = state_43734;\nreturn cljs.core.async.impl.ioc_helpers.return_chan(state_43734__$1,inst_43732);\n} else {\nif((state_val_43735 === (12))){\nvar inst_43730 = (state_43734[(2)]);\nvar state_43734__$1 = state_43734;\nvar statearr_43747_44304 = state_43734__$1;\n(statearr_43747_44304[(2)] = inst_43730);\n\n(statearr_43747_44304[(1)] = (3));\n\n\nreturn new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268);\n} else {\nif((state_val_43735 === (2))){\nvar inst_43696 = (state_43734[(7)]);\nvar inst_43689 = (state_43734[(8)]);\nvar inst_43690 = (state_43734[(9)]);\nvar inst_43692 = cljs.core.PersistentVector.EMPTY_NODE;\nvar inst_43693 = [new cljs.core.Keyword(null,\"ajax\",\"ajax\",814345549),uid];\nvar inst_43694 = (new cljs.core.PersistentVector(null,2,(5),inst_43692,inst_43693,null));\nvar inst_43695 = (function (){var n = inst_43689;\nvar client_ids_satisfied = inst_43690;\nreturn (function (m){\nvar ks_to_pull = cljs.core.remove.cljs$core$IFn$_invoke$arity$2(client_ids_satisfied,cljs.core.keys(m));\nif(cljs.core.empty_QMARK_(ks_to_pull)){\nreturn taoensso.encore.swapped(m,null);\n} else {\nreturn taoensso.encore.swapped(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (m__$1,k){\nvar vec__43748 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m__$1,k);\nvar _QMARK_sch = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__43748,(0),null);\nvar udt = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__43748,(1),null);\nreturn cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m__$1,k,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null,udt], null));\n}),m,ks_to_pull),cljs.core.select_keys(m,ks_to_pull));\n}\n});\n})();\nvar inst_43696__$1 = taoensso.encore.swap_in_BANG_.cljs$core$IFn$_invoke$arity$3(conns_,inst_43694,inst_43695);\nvar inst_43697 = (function (){var n = inst_43689;\nvar client_ids_satisfied = inst_43690;\nvar _QMARK_pulled = inst_43696__$1;\nreturn (function (x){\nvar or__4126__auto__ = (x == null);\nif(or__4126__auto__){\nreturn or__4126__auto__;\n} else {\nreturn taoensso.truss.impl.non_throwing(cljs.core.map_QMARK_)(x);\n}\n});\n})();\nvar inst_43698 = inst_43697(inst_43696__$1);\nvar state_43734__$1 = (function (){var statearr_43751 = state_43734;\n(statearr_43751[(7)] = inst_43696__$1);\n\nreturn statearr_43751;\n})();\nif(cljs.core.truth_(inst_43698)){\nvar statearr_43752_44305 = state_43734__$1;\n(statearr_43752_44305[(1)] = (4));\n\n} else {\nvar statearr_43753_44306 = state_43734__$1;\n(statearr_43753_44306[(1)] = (5));\n\n}\n\nreturn new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268);\n} else {\nif((state_val_43735 === (11))){\nvar state_43734__$1 = state_43734;\nvar statearr_43754_44307 = state_43734__$1;\n(statearr_43754_44307[(2)] = null);\n\n(statearr_43754_44307[(1)] = (12));\n\n\nreturn new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268);\n} else {\nif((state_val_43735 === (9))){\nvar inst_43713 = (state_43734[(10)]);\nvar inst_43689 = (state_43734[(8)]);\nvar inst_43690 = (state_43734[(9)]);\nvar inst_43711 = (state_43734[(2)]);\nvar inst_43712 = cljs.core.into.cljs$core$IFn$_invoke$arity$2(inst_43690,inst_43711);\nvar inst_43713__$1 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(ms_backoffs,inst_43689);\nvar state_43734__$1 = (function (){var statearr_43755 = state_43734;\n(statearr_43755[(10)] = inst_43713__$1);\n\n(statearr_43755[(12)] = inst_43712);\n\nreturn statearr_43755;\n})();\nif(cljs.core.truth_(inst_43713__$1)){\nvar statearr_43756_44308 = state_43734__$1;\n(statearr_43756_44308[(1)] = (10));\n\n} else {\nvar statearr_43757_44309 = state_43734__$1;\n(statearr_43757_44309[(1)] = (11));\n\n}\n\nreturn new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268);\n} else {\nif((state_val_43735 === (5))){\nvar inst_43696 = (state_43734[(7)]);\nvar inst_43701 = taoensso.truss.impl._invar_violation_BANG_(true,\"taoensso.sente\",723,\"([:or nil? map?] ?pulled)\",inst_43696,null,null);\nvar state_43734__$1 = state_43734;\nvar statearr_43758_44310 = state_43734__$1;\n(statearr_43758_44310[(2)] = inst_43701);\n\n(statearr_43758_44310[(1)] = (6));\n\n\nreturn new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268);\n} else {\nif((state_val_43735 === (14))){\nvar state_43734__$1 = state_43734;\nvar statearr_43759_44311 = state_43734__$1;\n(statearr_43759_44311[(2)] = null);\n\n(statearr_43759_44311[(1)] = (15));\n\n\nreturn new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268);\n} else {\nif((state_val_43735 === (16))){\nvar inst_43712 = (state_43734[(12)]);\nvar inst_43689 = (state_43734[(8)]);\nvar inst_43722 = (state_43734[(2)]);\nvar inst_43723 = (inst_43689 + (1));\nvar inst_43689__$1 = inst_43723;\nvar inst_43690 = inst_43712;\nvar state_43734__$1 = (function (){var statearr_43760 = state_43734;\n(statearr_43760[(13)] = inst_43722);\n\n(statearr_43760[(8)] = inst_43689__$1);\n\n(statearr_43760[(9)] = inst_43690);\n\nreturn statearr_43760;\n})();\nvar statearr_43761_44312 = state_43734__$1;\n(statearr_43761_44312[(2)] = null);\n\n(statearr_43761_44312[(1)] = (2));\n\n\nreturn new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268);\n} else {\nif((state_val_43735 === (10))){\nvar inst_43712 = (state_43734[(12)]);\nvar inst_43715 = cljs.core.complement(inst_43712);\nvar inst_43716 = taoensso.encore.rsome(inst_43715,client_ids_unsatisfied);\nvar state_43734__$1 = state_43734;\nif(cljs.core.truth_(inst_43716)){\nvar statearr_43762_44313 = state_43734__$1;\n(statearr_43762_44313[(1)] = (13));\n\n} else {\nvar statearr_43763_44314 = state_43734__$1;\n(statearr_43763_44314[(1)] = (14));\n\n}\n\nreturn new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268);\n} else {\nif((state_val_43735 === (8))){\nvar state_43734__$1 = state_43734;\nvar statearr_43764_44315 = state_43734__$1;\n(statearr_43764_44315[(2)] = null);\n\n(statearr_43764_44315[(1)] = (9));\n\n\nreturn new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268);\n} else {\nreturn null;\n}\n}\n}\n}\n}\n}\n}\n}\n}\n}\n}\n}\n}\n}\n}\n}\n});\nreturn (function() {\nvar taoensso$sente$send_buffered_server_evs_GT_ajax_clients_BANG__$_state_machine__38281__auto__ = null;\nvar taoensso$sente$send_buffered_server_evs_GT_ajax_clients_BANG__$_state_machine__38281__auto____0 = (function (){\nvar statearr_43765 = [null,null,null,null,null,null,null,null,null,null,null,null,null,null];\n(statearr_43765[(0)] = taoensso$sente$send_buffered_server_evs_GT_ajax_clients_BANG__$_state_machine__38281__auto__);\n\n(statearr_43765[(1)] = (1));\n\nreturn statearr_43765;\n});\nvar taoensso$sente$send_buffered_server_evs_GT_ajax_clients_BANG__$_state_machine__38281__auto____1 = (function (state_43734){\nwhile(true){\nvar ret_value__38282__auto__ = (function (){try{while(true){\nvar result__38283__auto__ = switch__38280__auto__(state_43734);\nif(cljs.core.keyword_identical_QMARK_(result__38283__auto__,new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268))){\ncontinue;\n} else {\nreturn result__38283__auto__;\n}\nbreak;\n}\n}catch (e43766){var ex__38284__auto__ = e43766;\nvar statearr_43767_44316 = state_43734;\n(statearr_43767_44316[(2)] = ex__38284__auto__);\n\n\nif(cljs.core.seq((state_43734[(4)]))){\nvar statearr_43768_44317 = state_43734;\n(statearr_43768_44317[(1)] = cljs.core.first((state_43734[(4)])));\n\n} else {\nthrow ex__38284__auto__;\n}\n\nreturn new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268);\n}})();\nif(cljs.core.keyword_identical_QMARK_(ret_value__38282__auto__,new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268))){\nvar G__44318 = state_43734;\nstate_43734 = G__44318;\ncontinue;\n} else {\nreturn ret_value__38282__auto__;\n}\nbreak;\n}\n});\ntaoensso$sente$send_buffered_server_evs_GT_ajax_clients_BANG__$_state_machine__38281__auto__ = function(state_43734){\nswitch(arguments.length){\ncase 0:\nreturn taoensso$sente$send_buffered_server_evs_GT_ajax_clients_BANG__$_state_machine__38281__auto____0.call(this);\ncase 1:\nreturn taoensso$sente$send_buffered_server_evs_GT_ajax_clients_BANG__$_state_machine__38281__auto____1.call(this,state_43734);\n}\nthrow(new Error('Invalid arity: ' + arguments.length));\n};\ntaoensso$sente$send_buffered_server_evs_GT_ajax_clients_BANG__$_state_machine__38281__auto__.cljs$core$IFn$_invoke$arity$0 = taoensso$sente$send_buffered_server_evs_GT_ajax_clients_BANG__$_state_machine__38281__auto____0;\ntaoensso$sente$send_buffered_server_evs_GT_ajax_clients_BANG__$_state_machine__38281__auto__.cljs$core$IFn$_invoke$arity$1 = taoensso$sente$send_buffered_server_evs_GT_ajax_clients_BANG__$_state_machine__38281__auto____1;\nreturn taoensso$sente$send_buffered_server_evs_GT_ajax_clients_BANG__$_state_machine__38281__auto__;\n})()\n})();\nvar state__38374__auto__ = (function (){var statearr_43769 = f__38373__auto__();\n(statearr_43769[(6)] = c__38372__auto__);\n\nreturn statearr_43769;\n})();\nreturn cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped(state__38374__auto__);\n}));\n\nreturn c__38372__auto__;\n}\n});\n/**\n * Alias of `taoensso.encore/ajax-lite`\n */\ntaoensso.sente.ajax_lite = taoensso.encore.ajax_lite;\n\n/**\n * @interface\n */\ntaoensso.sente.IChSocket = function(){};\n\nvar taoensso$sente$IChSocket$_chsk_connect_BANG_$dyn_44319 = (function (chsk){\nvar x__4428__auto__ = (((chsk == null))?null:chsk);\nvar m__4429__auto__ = (taoensso.sente._chsk_connect_BANG_[goog.typeOf(x__4428__auto__)]);\nif((!((m__4429__auto__ == null)))){\nreturn (m__4429__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4429__auto__.cljs$core$IFn$_invoke$arity$1(chsk) : m__4429__auto__.call(null,chsk));\n} else {\nvar m__4426__auto__ = (taoensso.sente._chsk_connect_BANG_[\"_\"]);\nif((!((m__4426__auto__ == null)))){\nreturn (m__4426__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4426__auto__.cljs$core$IFn$_invoke$arity$1(chsk) : m__4426__auto__.call(null,chsk));\n} else {\nthrow cljs.core.missing_protocol(\"IChSocket.-chsk-connect!\",chsk);\n}\n}\n});\ntaoensso.sente._chsk_connect_BANG_ = (function taoensso$sente$_chsk_connect_BANG_(chsk){\nif((((!((chsk == null)))) && ((!((chsk.taoensso$sente$IChSocket$_chsk_connect_BANG_$arity$1 == null)))))){\nreturn chsk.taoensso$sente$IChSocket$_chsk_connect_BANG_$arity$1(chsk);\n} else {\nreturn taoensso$sente$IChSocket$_chsk_connect_BANG_$dyn_44319(chsk);\n}\n});\n\nvar taoensso$sente$IChSocket$_chsk_disconnect_BANG_$dyn_44320 = (function (chsk,reason){\nvar x__4428__auto__ = (((chsk == null))?null:chsk);\nvar m__4429__auto__ = (taoensso.sente._chsk_disconnect_BANG_[goog.typeOf(x__4428__auto__)]);\nif((!((m__4429__auto__ == null)))){\nreturn (m__4429__auto__.cljs$core$IFn$_invoke$arity$2 ? m__4429__auto__.cljs$core$IFn$_invoke$arity$2(chsk,reason) : m__4429__auto__.call(null,chsk,reason));\n} else {\nvar m__4426__auto__ = (taoensso.sente._chsk_disconnect_BANG_[\"_\"]);\nif((!((m__4426__auto__ == null)))){\nreturn (m__4426__auto__.cljs$core$IFn$_invoke$arity$2 ? m__4426__auto__.cljs$core$IFn$_invoke$arity$2(chsk,reason) : m__4426__auto__.call(null,chsk,reason));\n} else {\nthrow cljs.core.missing_protocol(\"IChSocket.-chsk-disconnect!\",chsk);\n}\n}\n});\ntaoensso.sente._chsk_disconnect_BANG_ = (function taoensso$sente$_chsk_disconnect_BANG_(chsk,reason){\nif((((!((chsk == null)))) && ((!((chsk.taoensso$sente$IChSocket$_chsk_disconnect_BANG_$arity$2 == null)))))){\nreturn chsk.taoensso$sente$IChSocket$_chsk_disconnect_BANG_$arity$2(chsk,reason);\n} else {\nreturn taoensso$sente$IChSocket$_chsk_disconnect_BANG_$dyn_44320(chsk,reason);\n}\n});\n\nvar taoensso$sente$IChSocket$_chsk_reconnect_BANG_$dyn_44321 = (function (chsk){\nvar x__4428__auto__ = (((chsk == null))?null:chsk);\nvar m__4429__auto__ = (taoensso.sente._chsk_reconnect_BANG_[goog.typeOf(x__4428__auto__)]);\nif((!((m__4429__auto__ == null)))){\nreturn (m__4429__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4429__auto__.cljs$core$IFn$_invoke$arity$1(chsk) : m__4429__auto__.call(null,chsk));\n} else {\nvar m__4426__auto__ = (taoensso.sente._chsk_reconnect_BANG_[\"_\"]);\nif((!((m__4426__auto__ == null)))){\nreturn (m__4426__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4426__auto__.cljs$core$IFn$_invoke$arity$1(chsk) : m__4426__auto__.call(null,chsk));\n} else {\nthrow cljs.core.missing_protocol(\"IChSocket.-chsk-reconnect!\",chsk);\n}\n}\n});\ntaoensso.sente._chsk_reconnect_BANG_ = (function taoensso$sente$_chsk_reconnect_BANG_(chsk){\nif((((!((chsk == null)))) && ((!((chsk.taoensso$sente$IChSocket$_chsk_reconnect_BANG_$arity$1 == null)))))){\nreturn chsk.taoensso$sente$IChSocket$_chsk_reconnect_BANG_$arity$1(chsk);\n} else {\nreturn taoensso$sente$IChSocket$_chsk_reconnect_BANG_$dyn_44321(chsk);\n}\n});\n\nvar taoensso$sente$IChSocket$_chsk_send_BANG_$dyn_44322 = (function (chsk,ev,opts){\nvar x__4428__auto__ = (((chsk == null))?null:chsk);\nvar m__4429__auto__ = (taoensso.sente._chsk_send_BANG_[goog.typeOf(x__4428__auto__)]);\nif((!((m__4429__auto__ == null)))){\nreturn (m__4429__auto__.cljs$core$IFn$_invoke$arity$3 ? m__4429__auto__.cljs$core$IFn$_invoke$arity$3(chsk,ev,opts) : m__4429__auto__.call(null,chsk,ev,opts));\n} else {\nvar m__4426__auto__ = (taoensso.sente._chsk_send_BANG_[\"_\"]);\nif((!((m__4426__auto__ == null)))){\nreturn (m__4426__auto__.cljs$core$IFn$_invoke$arity$3 ? m__4426__auto__.cljs$core$IFn$_invoke$arity$3(chsk,ev,opts) : m__4426__auto__.call(null,chsk,ev,opts));\n} else {\nthrow cljs.core.missing_protocol(\"IChSocket.-chsk-send!\",chsk);\n}\n}\n});\ntaoensso.sente._chsk_send_BANG_ = (function taoensso$sente$_chsk_send_BANG_(chsk,ev,opts){\nif((((!((chsk == null)))) && ((!((chsk.taoensso$sente$IChSocket$_chsk_send_BANG_$arity$3 == null)))))){\nreturn chsk.taoensso$sente$IChSocket$_chsk_send_BANG_$arity$3(chsk,ev,opts);\n} else {\nreturn taoensso$sente$IChSocket$_chsk_send_BANG_$dyn_44322(chsk,ev,opts);\n}\n});\n\ntaoensso.sente.chsk_connect_BANG_ = (function taoensso$sente$chsk_connect_BANG_(chsk){\nreturn taoensso.sente._chsk_connect_BANG_(chsk);\n});\n\ntaoensso.sente.chsk_disconnect_BANG_ = (function taoensso$sente$chsk_disconnect_BANG_(chsk){\nreturn taoensso.sente._chsk_disconnect_BANG_(chsk,new cljs.core.Keyword(null,\"requested-disconnect\",\"requested-disconnect\",1037120641));\n});\n\n/**\n * Useful for reauthenticating after login/logout, etc.\n */\ntaoensso.sente.chsk_reconnect_BANG_ = (function taoensso$sente$chsk_reconnect_BANG_(chsk){\nreturn taoensso.sente._chsk_reconnect_BANG_(chsk);\n});\n\n/**\n * Deprecated\n */\ntaoensso.sente.chsk_destroy_BANG_ = taoensso.sente.chsk_disconnect_BANG_;\n/**\n * Sends `[ev-id ev-?data :as event]`, returns true on apparent success.\n */\ntaoensso.sente.chsk_send_BANG_ = (function taoensso$sente$chsk_send_BANG_(var_args){\nvar G__43771 = arguments.length;\nswitch (G__43771) {\ncase 2:\nreturn taoensso.sente.chsk_send_BANG_.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\n\nbreak;\ncase 4:\nreturn taoensso.sente.chsk_send_BANG_.cljs$core$IFn$_invoke$arity$4((arguments[(0)]),(arguments[(1)]),(arguments[(2)]),(arguments[(3)]));\n\nbreak;\ncase 3:\nreturn taoensso.sente.chsk_send_BANG_.cljs$core$IFn$_invoke$arity$3((arguments[(0)]),(arguments[(1)]),(arguments[(2)]));\n\nbreak;\ndefault:\nthrow (new Error([\"Invalid arity: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join('')));\n\n}\n});\n\n(taoensso.sente.chsk_send_BANG_.cljs$core$IFn$_invoke$arity$2 = (function (chsk,ev){\nreturn taoensso.sente.chsk_send_BANG_.cljs$core$IFn$_invoke$arity$3(chsk,ev,cljs.core.PersistentArrayMap.EMPTY);\n}));\n\n(taoensso.sente.chsk_send_BANG_.cljs$core$IFn$_invoke$arity$4 = (function (chsk,ev,_QMARK_timeout_ms,_QMARK_cb){\nreturn taoensso.sente.chsk_send_BANG_.cljs$core$IFn$_invoke$arity$3(chsk,ev,new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\"timeout-ms\",\"timeout-ms\",754221406),_QMARK_timeout_ms,new cljs.core.Keyword(null,\"cb\",\"cb\",589947841),_QMARK_cb], null));\n}));\n\n(taoensso.sente.chsk_send_BANG_.cljs$core$IFn$_invoke$arity$3 = (function (chsk,ev,opts){\ntaoensso.timbre._log_BANG_.cljs$core$IFn$_invoke$arity$10(taoensso.timbre._STAR_config_STAR_,new cljs.core.Keyword(null,\"trace\",\"trace\",-1082747415),\"taoensso.sente\",null,773,new cljs.core.Keyword(null,\"f\",\"f\",-1597136552),new cljs.core.Keyword(null,\"auto\",\"auto\",-566279492),(new cljs.core.Delay((function (){\nreturn new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [\"Chsk send: (%s) %s\",cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(opts,new cljs.core.Keyword(null,\"cb\",\"cb\",589947841),cljs.core.boolean$(new cljs.core.Keyword(null,\"cb\",\"cb\",589947841).cljs$core$IFn$_invoke$arity$1(opts))),ev], null);\n}),null)),null,-1638613271);\n\nreturn taoensso.sente._chsk_send_BANG_(chsk,ev,opts);\n}));\n\n(taoensso.sente.chsk_send_BANG_.cljs$lang$maxFixedArity = 4);\n\ntaoensso.sente.chsk_send__GT_closed_BANG_ = (function taoensso$sente$chsk_send__GT_closed_BANG_(_QMARK_cb_fn){\ntaoensso.timbre._log_BANG_.cljs$core$IFn$_invoke$arity$10(taoensso.timbre._STAR_config_STAR_,new cljs.core.Keyword(null,\"warn\",\"warn\",-436710552),\"taoensso.sente\",null,778,new cljs.core.Keyword(null,\"f\",\"f\",-1597136552),new cljs.core.Keyword(null,\"auto\",\"auto\",-566279492),(new cljs.core.Delay((function (){\nreturn new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [\"Chsk send against closed chsk.\"], null);\n}),null)),null,1104206099);\n\nif(cljs.core.truth_(_QMARK_cb_fn)){\n(_QMARK_cb_fn.cljs$core$IFn$_invoke$arity$1 ? _QMARK_cb_fn.cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(\"chsk\",\"closed\",\"chsk/closed\",-922855264)) : _QMARK_cb_fn.call(null,new cljs.core.Keyword(\"chsk\",\"closed\",\"chsk/closed\",-922855264)));\n} else {\n}\n\nreturn false;\n});\ntaoensso.sente.assert_send_args = (function taoensso$sente$assert_send_args(x,_QMARK_timeout_ms,_QMARK_cb){\ntaoensso.sente.assert_event(x);\n\nif((((((_QMARK_timeout_ms == null)) && ((_QMARK_cb == null)))) || (taoensso.encore.nat_int_QMARK_(_QMARK_timeout_ms)))){\n} else {\nthrow (new Error([\"Assert failed: \",[\"cb requires a timeout; timeout-ms should be a +ive integer: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(_QMARK_timeout_ms)].join(''),\"\\n\",\"(or (and (nil? ?timeout-ms) (nil? ?cb)) (and (enc/nat-int? ?timeout-ms)))\"].join('')));\n}\n\nif((((_QMARK_cb == null)) || (cljs.core.ifn_QMARK_(_QMARK_cb)) || (taoensso.encore.chan_QMARK_(_QMARK_cb)))){\nreturn null;\n} else {\nthrow (new Error([\"Assert failed: \",[\"cb should be nil, an ifn, or a channel: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.type(_QMARK_cb))].join(''),\"\\n\",\"(or (nil? ?cb) (ifn? ?cb) (enc/chan? ?cb))\"].join('')));\n}\n});\ntaoensso.sente.pull_unused_cb_fn_BANG_ = (function taoensso$sente$pull_unused_cb_fn_BANG_(cbs_waiting_,_QMARK_cb_uuid){\nvar temp__5735__auto__ = _QMARK_cb_uuid;\nif(cljs.core.truth_(temp__5735__auto__)){\nvar cb_uuid = temp__5735__auto__;\nreturn taoensso.encore.swap_in_BANG_.cljs$core$IFn$_invoke$arity$3(cbs_waiting_,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cb_uuid], null),(function (_QMARK_f){\nreturn taoensso.encore.swapped(new cljs.core.Keyword(\"swap\",\"dissoc\",\"swap/dissoc\",-605373782),_QMARK_f);\n}));\n} else {\nreturn null;\n}\n});\n/**\n * Atomically swaps the value of chk's :state_ atom.\n */\ntaoensso.sente.swap_chsk_state_BANG_ = (function taoensso$sente$swap_chsk_state_BANG_(chsk,f){\nvar vec__43772 = taoensso.encore.swap_in_BANG_.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\"state_\",\"state_\",957667102).cljs$core$IFn$_invoke$arity$1(chsk),(function (old_state){\nvar new_state = (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(old_state) : f.call(null,old_state));\nvar new_state__$1 = (cljs.core.truth_(new cljs.core.Keyword(null,\"first-open?\",\"first-open?\",396686530).cljs$core$IFn$_invoke$arity$1(old_state))?cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(new_state,new cljs.core.Keyword(null,\"first-open?\",\"first-open?\",396686530),false):new_state);\nvar new_state__$2 = (cljs.core.truth_(new cljs.core.Keyword(null,\"open?\",\"open?\",1238443125).cljs$core$IFn$_invoke$arity$1(new_state__$1))?cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(new_state__$1,new cljs.core.Keyword(null,\"udt-next-reconnect\",\"udt-next-reconnect\",-1990375733)):new_state__$1);\nreturn taoensso.encore.swapped(new_state__$2,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [old_state,new_state__$2], null));\n}));\nvar old_state = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__43772,(0),null);\nvar new_state = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__43772,(1),null);\nif(cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2(old_state,new_state)){\nvar output = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [old_state,new_state], null);\ncljs.core.async.put_BANG_.cljs$core$IFn$_invoke$arity$2(cljs.core.get_in.cljs$core$IFn$_invoke$arity$2(chsk,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"chs\",\"chs\",376886120),new cljs.core.Keyword(null,\"state\",\"state\",-1988618099)], null)),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"chsk\",\"state\",\"chsk/state\",-1991397620),output], null));\n\nreturn output;\n} else {\nreturn null;\n}\n});\ntaoensso.sente.chsk_state__GT_closed = (function taoensso$sente$chsk_state__GT_closed(state,reason){\nvar e_44324 = (function (){try{if(cljs.core.map_QMARK_(state)){\nreturn null;\n} else {\nreturn taoensso.truss.impl._dummy_error;\n}\n}catch (e43775){if((e43775 instanceof Error)){\nvar e_44324 = e43775;\nreturn e_44324;\n} else {\nthrow e43775;\n\n}\n}})();\nif((e_44324 == null)){\n} else {\ntaoensso.truss.impl._invar_violation_BANG_(true,\"taoensso.sente\",825,\"(map? state)\",state,e_44324,null);\n}\n\nvar e_44325 = (function (){try{if((function (x){\nreturn cljs.core.contains_QMARK_((function (){var G__43777 = new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null,\"requested-disconnect\",\"requested-disconnect\",1037120641),null,new cljs.core.Keyword(null,\"downgrading-ws-to-ajax\",\"downgrading-ws-to-ajax\",402136720),null,new cljs.core.Keyword(null,\"unexpected\",\"unexpected\",-1137752424),null,new cljs.core.Keyword(null,\"requested-reconnect\",\"requested-reconnect\",2008347707),null], null), null);\nreturn (taoensso.truss.impl.set_STAR_.cljs$core$IFn$_invoke$arity$1 ? taoensso.truss.impl.set_STAR_.cljs$core$IFn$_invoke$arity$1(G__43777) : taoensso.truss.impl.set_STAR_.call(null,G__43777));\n})(),x);\n})(reason)){\nreturn null;\n} else {\nreturn taoensso.truss.impl._dummy_error;\n}\n}catch (e43776){if((e43776 instanceof Error)){\nvar e_44325 = e43776;\nreturn e_44325;\n} else {\nthrow e43776;\n\n}\n}})();\nif((e_44325 == null)){\n} else {\ntaoensso.truss.impl._invar_violation_BANG_(true,\"taoensso.sente\",826,\"([:el #{:requested-disconnect :downgrading-ws-to-ajax :unexpected :requested-reconnect}] reason)\",reason,e_44325,null);\n}\n\nif(cljs.core.truth_((function (){var or__4126__auto__ = new cljs.core.Keyword(null,\"open?\",\"open?\",1238443125).cljs$core$IFn$_invoke$arity$1(state);\nif(cljs.core.truth_(or__4126__auto__)){\nreturn or__4126__auto__;\n} else {\nreturn cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2(reason,new cljs.core.Keyword(null,\"unexpected\",\"unexpected\",-1137752424));\n}\n})())){\nreturn cljs.core.assoc.cljs$core$IFn$_invoke$arity$variadic(cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(state,new cljs.core.Keyword(null,\"udt-next-reconnect\",\"udt-next-reconnect\",-1990375733)),new cljs.core.Keyword(null,\"open?\",\"open?\",1238443125),false,cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([new cljs.core.Keyword(null,\"last-close\",\"last-close\",-2054255782),new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\"udt\",\"udt\",2011712751),taoensso.encore.now_udt(),new cljs.core.Keyword(null,\"reason\",\"reason\",-2070751759),reason], null)], 0));\n} else {\nreturn state;\n}\n});\n/**\n * Experimental, undocumented. Allows a core.async channel to be provided\n *   instead of a cb-fn. The channel will receive values of form\n *   [<event-id>.cb <reply>].\n */\ntaoensso.sente.cb_chan_as_fn = (function taoensso$sente$cb_chan_as_fn(_QMARK_cb,ev){\nif((((_QMARK_cb == null)) || (cljs.core.ifn_QMARK_(_QMARK_cb)))){\nreturn _QMARK_cb;\n} else {\nvar e_44326 = (function (){try{if(taoensso.encore.chan_QMARK_(_QMARK_cb)){\nreturn null;\n} else {\nreturn taoensso.truss.impl._dummy_error;\n}\n}catch (e43778){if((e43778 instanceof Error)){\nvar e_44326 = e43778;\nreturn e_44326;\n} else {\nthrow e43778;\n\n}\n}})();\nif((e_44326 == null)){\n} else {\ntaoensso.truss.impl._invar_violation_BANG_(true,\"taoensso.sente\",847,\"(enc/chan? ?cb)\",_QMARK_cb,e_44326,null);\n}\n\ntaoensso.sente.assert_event(ev);\n\nvar vec__43779 = ev;\nvar ev_id = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__43779,(0),null);\nvar _ = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__43779,(1),null);\nvar cb_ch = _QMARK_cb;\nreturn (function (reply){\nreturn cljs.core.async.put_BANG_.cljs$core$IFn$_invoke$arity$2(cb_ch,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.keyword.cljs$core$IFn$_invoke$arity$1([taoensso.encore.as_qname(ev_id),\".cb\"].join('')),reply], null));\n});\n}\n});\ntaoensso.sente.receive_buffered_evs_BANG_ = (function taoensso$sente$receive_buffered_evs_BANG_(chs,clj){\ntaoensso.timbre._log_BANG_.cljs$core$IFn$_invoke$arity$10(taoensso.timbre._STAR_config_STAR_,new cljs.core.Keyword(null,\"trace\",\"trace\",-1082747415),\"taoensso.sente\",null,858,new cljs.core.Keyword(null,\"f\",\"f\",-1597136552),new cljs.core.Keyword(null,\"auto\",\"auto\",-566279492),(new cljs.core.Delay((function (){\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [\"receive-buffered-evs!: %s\",clj], null);\n}),null)),null,-644893982);\n\nvar buffered_evs = ((cljs.core.vector_QMARK_(clj))?clj:taoensso.truss.impl._invar_violation_BANG_(true,\"taoensso.sente\",859,\"(vector? clj)\",clj,null,null));\nvar seq__43782 = cljs.core.seq(buffered_evs);\nvar chunk__43783 = null;\nvar count__43784 = (0);\nvar i__43785 = (0);\nwhile(true){\nif((i__43785 < count__43784)){\nvar ev = chunk__43783.cljs$core$IIndexed$_nth$arity$2(null,i__43785);\ntaoensso.sente.assert_event(ev);\n\nvar vec__43792_44327 = ev;\nvar id_44328 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__43792_44327,(0),null);\nif(cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.namespace(id_44328),\"chsk\")){\n} else {\nthrow (new Error(\"Assert failed: (not= (namespace id) \\\"chsk\\\")\"));\n}\n\ncljs.core.async.put_BANG_.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\"<server\",\"<server\",-2135373537).cljs$core$IFn$_invoke$arity$1(chs),ev);\n\n\nvar G__44329 = seq__43782;\nvar G__44330 = chunk__43783;\nvar G__44331 = count__43784;\nvar G__44332 = (i__43785 + (1));\nseq__43782 = G__44329;\nchunk__43783 = G__44330;\ncount__43784 = G__44331;\ni__43785 = G__44332;\ncontinue;\n} else {\nvar temp__5735__auto__ = cljs.core.seq(seq__43782);\nif(temp__5735__auto__){\nvar seq__43782__$1 = temp__5735__auto__;\nif(cljs.core.chunked_seq_QMARK_(seq__43782__$1)){\nvar c__4556__auto__ = cljs.core.chunk_first(seq__43782__$1);\nvar G__44333 = cljs.core.chunk_rest(seq__43782__$1);\nvar G__44334 = c__4556__auto__;\nvar G__44335 = cljs.core.count(c__4556__auto__);\nvar G__44336 = (0);\nseq__43782 = G__44333;\nchunk__43783 = G__44334;\ncount__43784 = G__44335;\ni__43785 = G__44336;\ncontinue;\n} else {\nvar ev = cljs.core.first(seq__43782__$1);\ntaoensso.sente.assert_event(ev);\n\nvar vec__43795_44337 = ev;\nvar id_44338 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__43795_44337,(0),null);\nif(cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.namespace(id_44338),\"chsk\")){\n} else {\nthrow (new Error(\"Assert failed: (not= (namespace id) \\\"chsk\\\")\"));\n}\n\ncljs.core.async.put_BANG_.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\"<server\",\"<server\",-2135373537).cljs$core$IFn$_invoke$arity$1(chs),ev);\n\n\nvar G__44339 = cljs.core.next(seq__43782__$1);\nvar G__44340 = null;\nvar G__44341 = (0);\nvar G__44342 = (0);\nseq__43782 = G__44339;\nchunk__43783 = G__44340;\ncount__43784 = G__44341;\ni__43785 = G__44342;\ncontinue;\n}\n} else {\nreturn null;\n}\n}\nbreak;\n}\n});\ntaoensso.sente.handshake_QMARK_ = (function taoensso$sente$handshake_QMARK_(x){\nif(cljs.core.vector_QMARK_(x)){\nvar vec__43801 = x;\nvar x1 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__43801,(0),null);\nreturn cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(x1,new cljs.core.Keyword(\"chsk\",\"handshake\",\"chsk/handshake\",64910686));\n} else {\nreturn false;\n}\n});\ntaoensso.sente.receive_handshake_BANG_ = (function taoensso$sente$receive_handshake_BANG_(chsk_type,chsk,clj){\nvar e_44343 = (function (){try{if((function (x){\nreturn cljs.core.contains_QMARK_((function (){var G__43806 = new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\"ws\",\"ws\",86841443),null,new cljs.core.Keyword(null,\"ajax\",\"ajax\",814345549),null], null), null);\nreturn (taoensso.truss.impl.set_STAR_.cljs$core$IFn$_invoke$arity$1 ? taoensso.truss.impl.set_STAR_.cljs$core$IFn$_invoke$arity$1(G__43806) : taoensso.truss.impl.set_STAR_.call(null,G__43806));\n})(),x);\n})(chsk_type)){\nreturn null;\n} else {\nreturn taoensso.truss.impl._dummy_error;\n}\n}catch (e43805){if((e43805 instanceof Error)){\nvar e_44343 = e43805;\nreturn e_44343;\n} else {\nthrow e43805;\n\n}\n}})();\nif((e_44343 == null)){\n} else {\ntaoensso.truss.impl._invar_violation_BANG_(true,\"taoensso.sente\",873,\"([:el #{:ws :ajax}] chsk-type)\",chsk_type,e_44343,null);\n}\n\nvar e_44344 = (function (){try{if(taoensso.sente.handshake_QMARK_(clj)){\nreturn null;\n} else {\nreturn taoensso.truss.impl._dummy_error;\n}\n}catch (e43807){if((e43807 instanceof Error)){\nvar e_44344 = e43807;\nreturn e_44344;\n} else {\nthrow e43807;\n\n}\n}})();\nif((e_44344 == null)){\n} else {\ntaoensso.truss.impl._invar_violation_BANG_(true,\"taoensso.sente\",874,\"(handshake? clj)\",clj,e_44344,null);\n}\n\ntaoensso.timbre._log_BANG_.cljs$core$IFn$_invoke$arity$10(taoensso.timbre._STAR_config_STAR_,new cljs.core.Keyword(null,\"trace\",\"trace\",-1082747415),\"taoensso.sente\",null,875,new cljs.core.Keyword(null,\"f\",\"f\",-1597136552),new cljs.core.Keyword(null,\"auto\",\"auto\",-566279492),(new cljs.core.Delay((function (){\nreturn new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [\"receive-handshake! (%s): %s\",chsk_type,clj], null);\n}),null)),null,-1813591239);\n\nvar vec__43808 = clj;\nvar _ = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__43808,(0),null);\nvar vec__43811 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__43808,(1),null);\nvar _QMARK_uid = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__43811,(0),null);\nvar _QMARK_csrf_token = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__43811,(1),null);\nvar _QMARK_handshake_data = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__43811,(2),null);\nvar map__43814 = chsk;\nvar map__43814__$1 = (((((!((map__43814 == null))))?(((((map__43814.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__43814.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__43814):map__43814);\nvar chs = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__43814__$1,new cljs.core.Keyword(null,\"chs\",\"chs\",376886120));\nvar ever_opened_QMARK__ = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__43814__$1,new cljs.core.Keyword(null,\"ever-opened?_\",\"ever-opened?_\",1641338913));\nvar first_handshake_QMARK_ = cljs.core.compare_and_set_BANG_(ever_opened_QMARK__,false,true);\nvar new_state = new cljs.core.PersistentArrayMap(null, 7, [new cljs.core.Keyword(null,\"type\",\"type\",1174270348),chsk_type,new cljs.core.Keyword(null,\"open?\",\"open?\",1238443125),true,new cljs.core.Keyword(null,\"ever-opened?\",\"ever-opened?\",1128459732),true,new cljs.core.Keyword(null,\"uid\",\"uid\",-1447769400),_QMARK_uid,new cljs.core.Keyword(null,\"csrf-token\",\"csrf-token\",-1872302856),_QMARK_csrf_token,new cljs.core.Keyword(null,\"handshake-data\",\"handshake-data\",-278378864),_QMARK_handshake_data,new cljs.core.Keyword(null,\"first-open?\",\"first-open?\",396686530),first_handshake_QMARK_], null);\nvar handshake_ev = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"chsk\",\"handshake\",\"chsk/handshake\",64910686),new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [_QMARK_uid,_QMARK_csrf_token,_QMARK_handshake_data,first_handshake_QMARK_], null)], null);\ntaoensso.sente.assert_event(handshake_ev);\n\nif(clojure.string.blank_QMARK_(_QMARK_csrf_token)){\ntaoensso.timbre._log_BANG_.cljs$core$IFn$_invoke$arity$10(taoensso.timbre._STAR_config_STAR_,new cljs.core.Keyword(null,\"warn\",\"warn\",-436710552),\"taoensso.sente\",null,894,new cljs.core.Keyword(null,\"f\",\"f\",-1597136552),new cljs.core.Keyword(null,\"auto\",\"auto\",-566279492),(new cljs.core.Delay((function (){\nreturn new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [\"SECURITY WARNING: no CSRF token available for use by Sente\"], null);\n}),null)),null,798984087);\n} else {\n}\n\ntaoensso.sente.swap_chsk_state_BANG_(chsk,(function (p1__43804_SHARP_){\nreturn cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([p1__43804_SHARP_,new_state], 0));\n}));\n\ncljs.core.async.put_BANG_.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\"internal\",\"internal\",-854870097).cljs$core$IFn$_invoke$arity$1(chs),handshake_ev);\n\nreturn new cljs.core.Keyword(null,\"handled\",\"handled\",1889700151);\n});\n/**\n * nnil iff the websocket npm library[1] is available.\n *   Easiest way to install:\n *     1. Add the lein-npm[2] plugin to your `project.clj`,\n *     2. Add: `:npm {:dependencies [[websocket \"1.0.23\"]]}`\n * \n *   [1] Ref. https://www.npmjs.com/package/websocket\n *   [2] Ref. https://github.com/RyanMcG/lein-npm\n */\ntaoensso.sente._QMARK_node_npm_websocket_ = (new cljs.core.Delay((function (){\nif(((taoensso.sente.node_target_QMARK_) && ((typeof require !== 'undefined')))){\ntry{return require(\"websocket\");\n}catch (e43816){var e = e43816;\nreturn null;\n}} else {\nreturn null;\n}\n}),null));\n\n/**\n* @constructor\n * @implements {cljs.core.IRecord}\n * @implements {cljs.core.IKVReduce}\n * @implements {cljs.core.IEquiv}\n * @implements {cljs.core.IHash}\n * @implements {cljs.core.ICollection}\n * @implements {cljs.core.ICounted}\n * @implements {cljs.core.ISeqable}\n * @implements {cljs.core.IMeta}\n * @implements {cljs.core.ICloneable}\n * @implements {cljs.core.IPrintWithWriter}\n * @implements {cljs.core.IIterable}\n * @implements {cljs.core.IWithMeta}\n * @implements {cljs.core.IAssociative}\n * @implements {taoensso.sente.IChSocket}\n * @implements {cljs.core.IMap}\n * @implements {cljs.core.ILookup}\n*/\ntaoensso.sente.ChWebSocket = (function (client_id,chs,params,packer,url,ws_kalive_ms,state_,instance_handle_,retry_count_,ever_opened_QMARK__,backoff_ms_fn,cbs_waiting_,socket_,udt_last_comms_,__meta,__extmap,__hash){\nthis.client_id = client_id;\nthis.chs = chs;\nthis.params = params;\nthis.packer = packer;\nthis.url = url;\nthis.ws_kalive_ms = ws_kalive_ms;\nthis.state_ = state_;\nthis.instance_handle_ = instance_handle_;\nthis.retry_count_ = retry_count_;\nthis.ever_opened_QMARK__ = ever_opened_QMARK__;\nthis.backoff_ms_fn = backoff_ms_fn;\nthis.cbs_waiting_ = cbs_waiting_;\nthis.socket_ = socket_;\nthis.udt_last_comms_ = udt_last_comms_;\nthis.__meta = __meta;\nthis.__extmap = __extmap;\nthis.__hash = __hash;\nthis.cljs$lang$protocol_mask$partition0$ = 2230716170;\nthis.cljs$lang$protocol_mask$partition1$ = 139264;\n});\n(taoensso.sente.ChWebSocket.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (this__4380__auto__,k__4381__auto__){\nvar self__ = this;\nvar this__4380__auto____$1 = this;\nreturn this__4380__auto____$1.cljs$core$ILookup$_lookup$arity$3(null,k__4381__auto__,null);\n}));\n\n(taoensso.sente.ChWebSocket.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (this__4382__auto__,k43823,else__4383__auto__){\nvar self__ = this;\nvar this__4382__auto____$1 = this;\nvar G__43827 = k43823;\nvar G__43827__$1 = (((G__43827 instanceof cljs.core.Keyword))?G__43827.fqn:null);\nswitch (G__43827__$1) {\ncase \"client-id\":\nreturn self__.client_id;\n\nbreak;\ncase \"chs\":\nreturn self__.chs;\n\nbreak;\ncase \"params\":\nreturn self__.params;\n\nbreak;\ncase \"packer\":\nreturn self__.packer;\n\nbreak;\ncase \"url\":\nreturn self__.url;\n\nbreak;\ncase \"ws-kalive-ms\":\nreturn self__.ws_kalive_ms;\n\nbreak;\ncase \"state_\":\nreturn self__.state_;\n\nbreak;\ncase \"instance-handle_\":\nreturn self__.instance_handle_;\n\nbreak;\ncase \"retry-count_\":\nreturn self__.retry_count_;\n\nbreak;\ncase \"ever-opened?_\":\nreturn self__.ever_opened_QMARK__;\n\nbreak;\ncase \"backoff-ms-fn\":\nreturn self__.backoff_ms_fn;\n\nbreak;\ncase \"cbs-waiting_\":\nreturn self__.cbs_waiting_;\n\nbreak;\ncase \"socket_\":\nreturn self__.socket_;\n\nbreak;\ncase \"udt-last-comms_\":\nreturn self__.udt_last_comms_;\n\nbreak;\ndefault:\nreturn cljs.core.get.cljs$core$IFn$_invoke$arity$3(self__.__extmap,k43823,else__4383__auto__);\n\n}\n}));\n\n(taoensso.sente.ChWebSocket.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = (function (this__4399__auto__,f__4400__auto__,init__4401__auto__){\nvar self__ = this;\nvar this__4399__auto____$1 = this;\nreturn cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (ret__4402__auto__,p__43828){\nvar vec__43829 = p__43828;\nvar k__4403__auto__ = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__43829,(0),null);\nvar v__4404__auto__ = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__43829,(1),null);\nreturn (f__4400__auto__.cljs$core$IFn$_invoke$arity$3 ? f__4400__auto__.cljs$core$IFn$_invoke$arity$3(ret__4402__auto__,k__4403__auto__,v__4404__auto__) : f__4400__auto__.call(null,ret__4402__auto__,k__4403__auto__,v__4404__auto__));\n}),init__4401__auto__,this__4399__auto____$1);\n}));\n\n(taoensso.sente.ChWebSocket.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (this__4394__auto__,writer__4395__auto__,opts__4396__auto__){\nvar self__ = this;\nvar this__4394__auto____$1 = this;\nvar pr_pair__4397__auto__ = (function (keyval__4398__auto__){\nreturn cljs.core.pr_sequential_writer(writer__4395__auto__,cljs.core.pr_writer,\"\",\" \",\"\",opts__4396__auto__,keyval__4398__auto__);\n});\nreturn cljs.core.pr_sequential_writer(writer__4395__auto__,pr_pair__4397__auto__,\"#taoensso.sente.ChWebSocket{\",\", \",\"}\",opts__4396__auto__,cljs.core.concat.cljs$core$IFn$_invoke$arity$2(new cljs.core.PersistentVector(null, 14, 5, cljs.core.PersistentVector.EMPTY_NODE, [(new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[new cljs.core.Keyword(null,\"client-id\",\"client-id\",-464622140),self__.client_id],null)),(new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[new cljs.core.Keyword(null,\"chs\",\"chs\",376886120),self__.chs],null)),(new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[new cljs.core.Keyword(null,\"params\",\"params\",710516235),self__.params],null)),(new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[new cljs.core.Keyword(null,\"packer\",\"packer\",66077544),self__.packer],null)),(new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[new cljs.core.Keyword(null,\"url\",\"url\",276297046),self__.url],null)),(new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[new cljs.core.Keyword(null,\"ws-kalive-ms\",\"ws-kalive-ms\",1442179968),self__.ws_kalive_ms],null)),(new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[new cljs.core.Keyword(null,\"state_\",\"state_\",957667102),self__.state_],null)),(new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[new cljs.core.Keyword(null,\"instance-handle_\",\"instance-handle_\",-1923384457),self__.instance_handle_],null)),(new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[new cljs.core.Keyword(null,\"retry-count_\",\"retry-count_\",20238093),self__.retry_count_],null)),(new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[new cljs.core.Keyword(null,\"ever-opened?_\",\"ever-opened?_\",1641338913),self__.ever_opened_QMARK__],null)),(new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[new cljs.core.Keyword(null,\"backoff-ms-fn\",\"backoff-ms-fn\",772895955),self__.backoff_ms_fn],null)),(new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[new cljs.core.Keyword(null,\"cbs-waiting_\",\"cbs-waiting_\",-1519029061),self__.cbs_waiting_],null)),(new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[new cljs.core.Keyword(null,\"socket_\",\"socket_\",-361048908),self__.socket_],null)),(new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[new cljs.core.Keyword(null,\"udt-last-comms_\",\"udt-last-comms_\",-145799639),self__.udt_last_comms_],null))], null),self__.__extmap));\n}));\n\n(taoensso.sente.ChWebSocket.prototype.cljs$core$IIterable$_iterator$arity$1 = (function (G__43822){\nvar self__ = this;\nvar G__43822__$1 = this;\nreturn (new cljs.core.RecordIter((0),G__43822__$1,14,new cljs.core.PersistentVector(null, 14, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"client-id\",\"client-id\",-464622140),new cljs.core.Keyword(null,\"chs\",\"chs\",376886120),new cljs.core.Keyword(null,\"params\",\"params\",710516235),new cljs.core.Keyword(null,\"packer\",\"packer\",66077544),new cljs.core.Keyword(null,\"url\",\"url\",276297046),new cljs.core.Keyword(null,\"ws-kalive-ms\",\"ws-kalive-ms\",1442179968),new cljs.core.Keyword(null,\"state_\",\"state_\",957667102),new cljs.core.Keyword(null,\"instance-handle_\",\"instance-handle_\",-1923384457),new cljs.core.Keyword(null,\"retry-count_\",\"retry-count_\",20238093),new cljs.core.Keyword(null,\"ever-opened?_\",\"ever-opened?_\",1641338913),new cljs.core.Keyword(null,\"backoff-ms-fn\",\"backoff-ms-fn\",772895955),new cljs.core.Keyword(null,\"cbs-waiting_\",\"cbs-waiting_\",-1519029061),new cljs.core.Keyword(null,\"socket_\",\"socket_\",-361048908),new cljs.core.Keyword(null,\"udt-last-comms_\",\"udt-last-comms_\",-145799639)], null),(cljs.core.truth_(self__.__extmap)?cljs.core._iterator(self__.__extmap):cljs.core.nil_iter())));\n}));\n\n(taoensso.sente.ChWebSocket.prototype.cljs$core$IMeta$_meta$arity$1 = (function (this__4378__auto__){\nvar self__ = this;\nvar this__4378__auto____$1 = this;\nreturn self__.__meta;\n}));\n\n(taoensso.sente.ChWebSocket.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (this__4375__auto__){\nvar self__ = this;\nvar this__4375__auto____$1 = this;\nreturn (new taoensso.sente.ChWebSocket(self__.client_id,self__.chs,self__.params,self__.packer,self__.url,self__.ws_kalive_ms,self__.state_,self__.instance_handle_,self__.retry_count_,self__.ever_opened_QMARK__,self__.backoff_ms_fn,self__.cbs_waiting_,self__.socket_,self__.udt_last_comms_,self__.__meta,self__.__extmap,self__.__hash));\n}));\n\n(taoensso.sente.ChWebSocket.prototype.cljs$core$ICounted$_count$arity$1 = (function (this__4384__auto__){\nvar self__ = this;\nvar this__4384__auto____$1 = this;\nreturn (14 + cljs.core.count(self__.__extmap));\n}));\n\n(taoensso.sente.ChWebSocket.prototype.cljs$core$IHash$_hash$arity$1 = (function (this__4376__auto__){\nvar self__ = this;\nvar this__4376__auto____$1 = this;\nvar h__4238__auto__ = self__.__hash;\nif((!((h__4238__auto__ == null)))){\nreturn h__4238__auto__;\n} else {\nvar h__4238__auto____$1 = (function (coll__4377__auto__){\nreturn (1998688700 ^ cljs.core.hash_unordered_coll(coll__4377__auto__));\n})(this__4376__auto____$1);\n(self__.__hash = h__4238__auto____$1);\n\nreturn h__4238__auto____$1;\n}\n}));\n\n(taoensso.sente.ChWebSocket.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (this43824,other43825){\nvar self__ = this;\nvar this43824__$1 = this;\nreturn (((!((other43825 == null)))) && ((this43824__$1.constructor === other43825.constructor)) && (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(this43824__$1.client_id,other43825.client_id)) && (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(this43824__$1.chs,other43825.chs)) && (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(this43824__$1.params,other43825.params)) && (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(this43824__$1.packer,other43825.packer)) && (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(this43824__$1.url,other43825.url)) && (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(this43824__$1.ws_kalive_ms,other43825.ws_kalive_ms)) && (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(this43824__$1.state_,other43825.state_)) && (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(this43824__$1.instance_handle_,other43825.instance_handle_)) && (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(this43824__$1.retry_count_,other43825.retry_count_)) && (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(this43824__$1.ever_opened_QMARK__,other43825.ever_opened_QMARK__)) && (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(this43824__$1.backoff_ms_fn,other43825.backoff_ms_fn)) && (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(this43824__$1.cbs_waiting_,other43825.cbs_waiting_)) && (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(this43824__$1.socket_,other43825.socket_)) && (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(this43824__$1.udt_last_comms_,other43825.udt_last_comms_)) && (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(this43824__$1.__extmap,other43825.__extmap)));\n}));\n\n(taoensso.sente.ChWebSocket.prototype.cljs$core$IMap$_dissoc$arity$2 = (function (this__4389__auto__,k__4390__auto__){\nvar self__ = this;\nvar this__4389__auto____$1 = this;\nif(cljs.core.contains_QMARK_(new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 14, [new cljs.core.Keyword(null,\"ws-kalive-ms\",\"ws-kalive-ms\",1442179968),null,new cljs.core.Keyword(null,\"ever-opened?_\",\"ever-opened?_\",1641338913),null,new cljs.core.Keyword(null,\"client-id\",\"client-id\",-464622140),null,new cljs.core.Keyword(null,\"packer\",\"packer\",66077544),null,new cljs.core.Keyword(null,\"chs\",\"chs\",376886120),null,new cljs.core.Keyword(null,\"udt-last-comms_\",\"udt-last-comms_\",-145799639),null,new cljs.core.Keyword(null,\"params\",\"params\",710516235),null,new cljs.core.Keyword(null,\"retry-count_\",\"retry-count_\",20238093),null,new cljs.core.Keyword(null,\"backoff-ms-fn\",\"backoff-ms-fn\",772895955),null,new cljs.core.Keyword(null,\"socket_\",\"socket_\",-361048908),null,new cljs.core.Keyword(null,\"url\",\"url\",276297046),null,new cljs.core.Keyword(null,\"instance-handle_\",\"instance-handle_\",-1923384457),null,new cljs.core.Keyword(null,\"cbs-waiting_\",\"cbs-waiting_\",-1519029061),null,new cljs.core.Keyword(null,\"state_\",\"state_\",957667102),null], null), null),k__4390__auto__)){\nreturn cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(cljs.core._with_meta(cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentArrayMap.EMPTY,this__4389__auto____$1),self__.__meta),k__4390__auto__);\n} else {\nreturn (new taoensso.sente.ChWebSocket(self__.client_id,self__.chs,self__.params,self__.packer,self__.url,self__.ws_kalive_ms,self__.state_,self__.instance_handle_,self__.retry_count_,self__.ever_opened_QMARK__,self__.backoff_ms_fn,self__.cbs_waiting_,self__.socket_,self__.udt_last_comms_,self__.__meta,cljs.core.not_empty(cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(self__.__extmap,k__4390__auto__)),null));\n}\n}));\n\n(taoensso.sente.ChWebSocket.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (this__4387__auto__,k__4388__auto__,G__43822){\nvar self__ = this;\nvar this__4387__auto____$1 = this;\nvar pred__43832 = cljs.core.keyword_identical_QMARK_;\nvar expr__43833 = k__4388__auto__;\nif(cljs.core.truth_((pred__43832.cljs$core$IFn$_invoke$arity$2 ? pred__43832.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\"client-id\",\"client-id\",-464622140),expr__43833) : pred__43832.call(null,new cljs.core.Keyword(null,\"client-id\",\"client-id\",-464622140),expr__43833)))){\nreturn (new taoensso.sente.ChWebSocket(G__43822,self__.chs,self__.params,self__.packer,self__.url,self__.ws_kalive_ms,self__.state_,self__.instance_handle_,self__.retry_count_,self__.ever_opened_QMARK__,self__.backoff_ms_fn,self__.cbs_waiting_,self__.socket_,self__.udt_last_comms_,self__.__meta,self__.__extmap,null));\n} else {\nif(cljs.core.truth_((pred__43832.cljs$core$IFn$_invoke$arity$2 ? pred__43832.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\"chs\",\"chs\",376886120),expr__43833) : pred__43832.call(null,new cljs.core.Keyword(null,\"chs\",\"chs\",376886120),expr__43833)))){\nreturn (new taoensso.sente.ChWebSocket(self__.client_id,G__43822,self__.params,self__.packer,self__.url,self__.ws_kalive_ms,self__.state_,self__.instance_handle_,self__.retry_count_,self__.ever_opened_QMARK__,self__.backoff_ms_fn,self__.cbs_waiting_,self__.socket_,self__.udt_last_comms_,self__.__meta,self__.__extmap,null));\n} else {\nif(cljs.core.truth_((pred__43832.cljs$core$IFn$_invoke$arity$2 ? pred__43832.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\"params\",\"params\",710516235),expr__43833) : pred__43832.call(null,new cljs.core.Keyword(null,\"params\",\"params\",710516235),expr__43833)))){\nreturn (new taoensso.sente.ChWebSocket(self__.client_id,self__.chs,G__43822,self__.packer,self__.url,self__.ws_kalive_ms,self__.state_,self__.instance_handle_,self__.retry_count_,self__.ever_opened_QMARK__,self__.backoff_ms_fn,self__.cbs_waiting_,self__.socket_,self__.udt_last_comms_,self__.__meta,self__.__extmap,null));\n} else {\nif(cljs.core.truth_((pred__43832.cljs$core$IFn$_invoke$arity$2 ? pred__43832.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\"packer\",\"packer\",66077544),expr__43833) : pred__43832.call(null,new cljs.core.Keyword(null,\"packer\",\"packer\",66077544),expr__43833)))){\nreturn (new taoensso.sente.ChWebSocket(self__.client_id,self__.chs,self__.params,G__43822,self__.url,self__.ws_kalive_ms,self__.state_,self__.instance_handle_,self__.retry_count_,self__.ever_opened_QMARK__,self__.backoff_ms_fn,self__.cbs_waiting_,self__.socket_,self__.udt_last_comms_,self__.__meta,self__.__extmap,null));\n} else {\nif(cljs.core.truth_((pred__43832.cljs$core$IFn$_invoke$arity$2 ? pred__43832.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\"url\",\"url\",276297046),expr__43833) : pred__43832.call(null,new cljs.core.Keyword(null,\"url\",\"url\",276297046),expr__43833)))){\nreturn (new taoensso.sente.ChWebSocket(self__.client_id,self__.chs,self__.params,self__.packer,G__43822,self__.ws_kalive_ms,self__.state_,self__.instance_handle_,self__.retry_count_,self__.ever_opened_QMARK__,self__.backoff_ms_fn,self__.cbs_waiting_,self__.socket_,self__.udt_last_comms_,self__.__meta,self__.__extmap,null));\n} else {\nif(cljs.core.truth_((pred__43832.cljs$core$IFn$_invoke$arity$2 ? pred__43832.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\"ws-kalive-ms\",\"ws-kalive-ms\",1442179968),expr__43833) : pred__43832.call(null,new cljs.core.Keyword(null,\"ws-kalive-ms\",\"ws-kalive-ms\",1442179968),expr__43833)))){\nreturn (new taoensso.sente.ChWebSocket(self__.client_id,self__.chs,self__.params,self__.packer,self__.url,G__43822,self__.state_,self__.instance_handle_,self__.retry_count_,self__.ever_opened_QMARK__,self__.backoff_ms_fn,self__.cbs_waiting_,self__.socket_,self__.udt_last_comms_,self__.__meta,self__.__extmap,null));\n} else {\nif(cljs.core.truth_((pred__43832.cljs$core$IFn$_invoke$arity$2 ? pred__43832.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\"state_\",\"state_\",957667102),expr__43833) : pred__43832.call(null,new cljs.core.Keyword(null,\"state_\",\"state_\",957667102),expr__43833)))){\nreturn (new taoensso.sente.ChWebSocket(self__.client_id,self__.chs,self__.params,self__.packer,self__.url,self__.ws_kalive_ms,G__43822,self__.instance_handle_,self__.retry_count_,self__.ever_opened_QMARK__,self__.backoff_ms_fn,self__.cbs_waiting_,self__.socket_,self__.udt_last_comms_,self__.__meta,self__.__extmap,null));\n} else {\nif(cljs.core.truth_((pred__43832.cljs$core$IFn$_invoke$arity$2 ? pred__43832.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\"instance-handle_\",\"instance-handle_\",-1923384457),expr__43833) : pred__43832.call(null,new cljs.core.Keyword(null,\"instance-handle_\",\"instance-handle_\",-1923384457),expr__43833)))){\nreturn (new taoensso.sente.ChWebSocket(self__.client_id,self__.chs,self__.params,self__.packer,self__.url,self__.ws_kalive_ms,self__.state_,G__43822,self__.retry_count_,self__.ever_opened_QMARK__,self__.backoff_ms_fn,self__.cbs_waiting_,self__.socket_,self__.udt_last_comms_,self__.__meta,self__.__extmap,null));\n} else {\nif(cljs.core.truth_((pred__43832.cljs$core$IFn$_invoke$arity$2 ? pred__43832.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\"retry-count_\",\"retry-count_\",20238093),expr__43833) : pred__43832.call(null,new cljs.core.Keyword(null,\"retry-count_\",\"retry-count_\",20238093),expr__43833)))){\nreturn (new taoensso.sente.ChWebSocket(self__.client_id,self__.chs,self__.params,self__.packer,self__.url,self__.ws_kalive_ms,self__.state_,self__.instance_handle_,G__43822,self__.ever_opened_QMARK__,self__.backoff_ms_fn,self__.cbs_waiting_,self__.socket_,self__.udt_last_comms_,self__.__meta,self__.__extmap,null));\n} else {\nif(cljs.core.truth_((pred__43832.cljs$core$IFn$_invoke$arity$2 ? pred__43832.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\"ever-opened?_\",\"ever-opened?_\",1641338913),expr__43833) : pred__43832.call(null,new cljs.core.Keyword(null,\"ever-opened?_\",\"ever-opened?_\",1641338913),expr__43833)))){\nreturn (new taoensso.sente.ChWebSocket(self__.client_id,self__.chs,self__.params,self__.packer,self__.url,self__.ws_kalive_ms,self__.state_,self__.instance_handle_,self__.retry_count_,G__43822,self__.backoff_ms_fn,self__.cbs_waiting_,self__.socket_,self__.udt_last_comms_,self__.__meta,self__.__extmap,null));\n} else {\nif(cljs.core.truth_((pred__43832.cljs$core$IFn$_invoke$arity$2 ? pred__43832.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\"backoff-ms-fn\",\"backoff-ms-fn\",772895955),expr__43833) : pred__43832.call(null,new cljs.core.Keyword(null,\"backoff-ms-fn\",\"backoff-ms-fn\",772895955),expr__43833)))){\nreturn (new taoensso.sente.ChWebSocket(self__.client_id,self__.chs,self__.params,self__.packer,self__.url,self__.ws_kalive_ms,self__.state_,self__.instance_handle_,self__.retry_count_,self__.ever_opened_QMARK__,G__43822,self__.cbs_waiting_,self__.socket_,self__.udt_last_comms_,self__.__meta,self__.__extmap,null));\n} else {\nif(cljs.core.truth_((pred__43832.cljs$core$IFn$_invoke$arity$2 ? pred__43832.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\"cbs-waiting_\",\"cbs-waiting_\",-1519029061),expr__43833) : pred__43832.call(null,new cljs.core.Keyword(null,\"cbs-waiting_\",\"cbs-waiting_\",-1519029061),expr__43833)))){\nreturn (new taoensso.sente.ChWebSocket(self__.client_id,self__.chs,self__.params,self__.packer,self__.url,self__.ws_kalive_ms,self__.state_,self__.instance_handle_,self__.retry_count_,self__.ever_opened_QMARK__,self__.backoff_ms_fn,G__43822,self__.socket_,self__.udt_last_comms_,self__.__meta,self__.__extmap,null));\n} else {\nif(cljs.core.truth_((pred__43832.cljs$core$IFn$_invoke$arity$2 ? pred__43832.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\"socket_\",\"socket_\",-361048908),expr__43833) : pred__43832.call(null,new cljs.core.Keyword(null,\"socket_\",\"socket_\",-361048908),expr__43833)))){\nreturn (new taoensso.sente.ChWebSocket(self__.client_id,self__.chs,self__.params,self__.packer,self__.url,self__.ws_kalive_ms,self__.state_,self__.instance_handle_,self__.retry_count_,self__.ever_opened_QMARK__,self__.backoff_ms_fn,self__.cbs_waiting_,G__43822,self__.udt_last_comms_,self__.__meta,self__.__extmap,null));\n} else {\nif(cljs.core.truth_((pred__43832.cljs$core$IFn$_invoke$arity$2 ? pred__43832.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\"udt-last-comms_\",\"udt-last-comms_\",-145799639),expr__43833) : pred__43832.call(null,new cljs.core.Keyword(null,\"udt-last-comms_\",\"udt-last-comms_\",-145799639),expr__43833)))){\nreturn (new taoensso.sente.ChWebSocket(self__.client_id,self__.chs,self__.params,self__.packer,self__.url,self__.ws_kalive_ms,self__.state_,self__.instance_handle_,self__.retry_count_,self__.ever_opened_QMARK__,self__.backoff_ms_fn,self__.cbs_waiting_,self__.socket_,G__43822,self__.__meta,self__.__extmap,null));\n} else {\nreturn (new taoensso.sente.ChWebSocket(self__.client_id,self__.chs,self__.params,self__.packer,self__.url,self__.ws_kalive_ms,self__.state_,self__.instance_handle_,self__.retry_count_,self__.ever_opened_QMARK__,self__.backoff_ms_fn,self__.cbs_waiting_,self__.socket_,self__.udt_last_comms_,self__.__meta,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.__extmap,k__4388__auto__,G__43822),null));\n}\n}\n}\n}\n}\n}\n}\n}\n}\n}\n}\n}\n}\n}\n}));\n\n(taoensso.sente.ChWebSocket.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (this__4392__auto__){\nvar self__ = this;\nvar this__4392__auto____$1 = this;\nreturn cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(new cljs.core.PersistentVector(null, 14, 5, cljs.core.PersistentVector.EMPTY_NODE, [(new cljs.core.MapEntry(new cljs.core.Keyword(null,\"client-id\",\"client-id\",-464622140),self__.client_id,null)),(new cljs.core.MapEntry(new cljs.core.Keyword(null,\"chs\",\"chs\",376886120),self__.chs,null)),(new cljs.core.MapEntry(new cljs.core.Keyword(null,\"params\",\"params\",710516235),self__.params,null)),(new cljs.core.MapEntry(new cljs.core.Keyword(null,\"packer\",\"packer\",66077544),self__.packer,null)),(new cljs.core.MapEntry(new cljs.core.Keyword(null,\"url\",\"url\",276297046),self__.url,null)),(new cljs.core.MapEntry(new cljs.core.Keyword(null,\"ws-kalive-ms\",\"ws-kalive-ms\",1442179968),self__.ws_kalive_ms,null)),(new cljs.core.MapEntry(new cljs.core.Keyword(null,\"state_\",\"state_\",957667102),self__.state_,null)),(new cljs.core.MapEntry(new cljs.core.Keyword(null,\"instance-handle_\",\"instance-handle_\",-1923384457),self__.instance_handle_,null)),(new cljs.core.MapEntry(new cljs.core.Keyword(null,\"retry-count_\",\"retry-count_\",20238093),self__.retry_count_,null)),(new cljs.core.MapEntry(new cljs.core.Keyword(null,\"ever-opened?_\",\"ever-opened?_\",1641338913),self__.ever_opened_QMARK__,null)),(new cljs.core.MapEntry(new cljs.core.Keyword(null,\"backoff-ms-fn\",\"backoff-ms-fn\",772895955),self__.backoff_ms_fn,null)),(new cljs.core.MapEntry(new cljs.core.Keyword(null,\"cbs-waiting_\",\"cbs-waiting_\",-1519029061),self__.cbs_waiting_,null)),(new cljs.core.MapEntry(new cljs.core.Keyword(null,\"socket_\",\"socket_\",-361048908),self__.socket_,null)),(new cljs.core.MapEntry(new cljs.core.Keyword(null,\"udt-last-comms_\",\"udt-last-comms_\",-145799639),self__.udt_last_comms_,null))], null),self__.__extmap));\n}));\n\n(taoensso.sente.ChWebSocket.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (this__4379__auto__,G__43822){\nvar self__ = this;\nvar this__4379__auto____$1 = this;\nreturn (new taoensso.sente.ChWebSocket(self__.client_id,self__.chs,self__.params,self__.packer,self__.url,self__.ws_kalive_ms,self__.state_,self__.instance_handle_,self__.retry_count_,self__.ever_opened_QMARK__,self__.backoff_ms_fn,self__.cbs_waiting_,self__.socket_,self__.udt_last_comms_,G__43822,self__.__extmap,self__.__hash));\n}));\n\n(taoensso.sente.ChWebSocket.prototype.cljs$core$ICollection$_conj$arity$2 = (function (this__4385__auto__,entry__4386__auto__){\nvar self__ = this;\nvar this__4385__auto____$1 = this;\nif(cljs.core.vector_QMARK_(entry__4386__auto__)){\nreturn this__4385__auto____$1.cljs$core$IAssociative$_assoc$arity$3(null,cljs.core._nth(entry__4386__auto__,(0)),cljs.core._nth(entry__4386__auto__,(1)));\n} else {\nreturn cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj,this__4385__auto____$1,entry__4386__auto__);\n}\n}));\n\n(taoensso.sente.ChWebSocket.prototype.taoensso$sente$IChSocket$ = cljs.core.PROTOCOL_SENTINEL);\n\n(taoensso.sente.ChWebSocket.prototype.taoensso$sente$IChSocket$_chsk_disconnect_BANG_$arity$2 = (function (chsk,reason){\nvar self__ = this;\nvar chsk__$1 = this;\ncljs.core.reset_BANG_(self__.instance_handle_,null);\n\ntaoensso.sente.swap_chsk_state_BANG_(chsk__$1,(function (p1__43817_SHARP_){\nreturn taoensso.sente.chsk_state__GT_closed(p1__43817_SHARP_,reason);\n}));\n\nvar temp__5735__auto__ = cljs.core.deref(self__.socket_);\nif(cljs.core.truth_(temp__5735__auto__)){\nvar s = temp__5735__auto__;\nreturn s.close((1000),\"CLOSE_NORMAL\");\n} else {\nreturn null;\n}\n}));\n\n(taoensso.sente.ChWebSocket.prototype.taoensso$sente$IChSocket$_chsk_reconnect_BANG_$arity$1 = (function (chsk){\nvar self__ = this;\nvar chsk__$1 = this;\nchsk__$1.taoensso$sente$IChSocket$_chsk_disconnect_BANG_$arity$2(null,new cljs.core.Keyword(null,\"requested-reconnect\",\"requested-reconnect\",2008347707));\n\nreturn chsk__$1.taoensso$sente$IChSocket$_chsk_connect_BANG_$arity$1(null);\n}));\n\n(taoensso.sente.ChWebSocket.prototype.taoensso$sente$IChSocket$_chsk_send_BANG_$arity$3 = (function (chsk,ev,opts){\nvar self__ = this;\nvar chsk__$1 = this;\nvar map__43835 = opts;\nvar map__43835__$1 = (((((!((map__43835 == null))))?(((((map__43835.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__43835.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__43835):map__43835);\nvar _QMARK_timeout_ms = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__43835__$1,new cljs.core.Keyword(null,\"timeout-ms\",\"timeout-ms\",754221406));\nvar _QMARK_cb = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__43835__$1,new cljs.core.Keyword(null,\"cb\",\"cb\",589947841));\nvar flush_QMARK_ = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__43835__$1,new cljs.core.Keyword(null,\"flush?\",\"flush?\",-108887231));\nvar _ = taoensso.sente.assert_send_args(ev,_QMARK_timeout_ms,_QMARK_cb);\nvar _QMARK_cb_fn = taoensso.sente.cb_chan_as_fn(_QMARK_cb,ev);\nif(cljs.core.not(new cljs.core.Keyword(null,\"open?\",\"open?\",1238443125).cljs$core$IFn$_invoke$arity$1(cljs.core.deref(self__.state_)))){\nreturn taoensso.sente.chsk_send__GT_closed_BANG_(_QMARK_cb_fn);\n} else {\nvar _QMARK_cb_uuid = (cljs.core.truth_(_QMARK_cb_fn)?taoensso.encore.uuid_str.cljs$core$IFn$_invoke$arity$1((6)):null);\nvar ppstr = taoensso.sente.pack.cljs$core$IFn$_invoke$arity$3(self__.packer,ev,_QMARK_cb_uuid);\nvar temp__5735__auto___44346 = _QMARK_cb_uuid;\nif(cljs.core.truth_(temp__5735__auto___44346)){\nvar cb_uuid_44347 = temp__5735__auto___44346;\ntaoensso.encore.reset_in_BANG_.cljs$core$IFn$_invoke$arity$3(self__.cbs_waiting_,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cb_uuid_44347], null),(function (){var e = (function (){try{if(taoensso.truss.impl.some_QMARK_(_QMARK_cb_fn)){\nreturn null;\n} else {\nreturn taoensso.truss.impl._dummy_error;\n}\n}catch (e43837){if((e43837 instanceof Error)){\nvar e = e43837;\nreturn e;\n} else {\nthrow e43837;\n\n}\n}})();\nif((e == null)){\nreturn _QMARK_cb_fn;\n} else {\nreturn taoensso.truss.impl._invar_violation_BANG_(true,\"taoensso.sente\",964,\"(taoensso.truss.impl/some? ?cb-fn)\",_QMARK_cb_fn,e,null);\n}\n})());\n\nvar temp__5735__auto___44348__$1 = _QMARK_timeout_ms;\nif(cljs.core.truth_(temp__5735__auto___44348__$1)){\nvar timeout_ms_44349 = temp__5735__auto___44348__$1;\nvar c__38372__auto___44350 = cljs.core.async.chan.cljs$core$IFn$_invoke$arity$1((1));\ncljs.core.async.impl.dispatch.run((function (){\nvar f__38373__auto__ = (function (){var switch__38280__auto__ = (function (state_43848){\nvar state_val_43849 = (state_43848[(1)]);\nif((state_val_43849 === (1))){\nvar inst_43838 = cljs.core.async.timeout(timeout_ms_44349);\nvar state_43848__$1 = state_43848;\nreturn cljs.core.async.impl.ioc_helpers.take_BANG_(state_43848__$1,(2),inst_43838);\n} else {\nif((state_val_43849 === (2))){\nvar inst_43841 = (state_43848[(7)]);\nvar inst_43840 = (state_43848[(2)]);\nvar inst_43841__$1 = taoensso.sente.pull_unused_cb_fn_BANG_(self__.cbs_waiting_,_QMARK_cb_uuid);\nvar state_43848__$1 = (function (){var statearr_43850 = state_43848;\n(statearr_43850[(7)] = inst_43841__$1);\n\n(statearr_43850[(8)] = inst_43840);\n\nreturn statearr_43850;\n})();\nif(cljs.core.truth_(inst_43841__$1)){\nvar statearr_43851_44351 = state_43848__$1;\n(statearr_43851_44351[(1)] = (3));\n\n} else {\nvar statearr_43852_44352 = state_43848__$1;\n(statearr_43852_44352[(1)] = (4));\n\n}\n\nreturn new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268);\n} else {\nif((state_val_43849 === (3))){\nvar inst_43841 = (state_43848[(7)]);\nvar inst_43843 = (inst_43841.cljs$core$IFn$_invoke$arity$1 ? inst_43841.cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(\"chsk\",\"timeout\",\"chsk/timeout\",-319776489)) : inst_43841.call(null,new cljs.core.Keyword(\"chsk\",\"timeout\",\"chsk/timeout\",-319776489)));\nvar state_43848__$1 = state_43848;\nvar statearr_43853_44353 = state_43848__$1;\n(statearr_43853_44353[(2)] = inst_43843);\n\n(statearr_43853_44353[(1)] = (5));\n\n\nreturn new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268);\n} else {\nif((state_val_43849 === (4))){\nvar state_43848__$1 = state_43848;\nvar statearr_43854_44354 = state_43848__$1;\n(statearr_43854_44354[(2)] = null);\n\n(statearr_43854_44354[(1)] = (5));\n\n\nreturn new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268);\n} else {\nif((state_val_43849 === (5))){\nvar inst_43846 = (state_43848[(2)]);\nvar state_43848__$1 = state_43848;\nreturn cljs.core.async.impl.ioc_helpers.return_chan(state_43848__$1,inst_43846);\n} else {\nreturn null;\n}\n}\n}\n}\n}\n});\nreturn (function() {\nvar taoensso$sente$state_machine__38281__auto__ = null;\nvar taoensso$sente$state_machine__38281__auto____0 = (function (){\nvar statearr_43855 = [null,null,null,null,null,null,null,null,null];\n(statearr_43855[(0)] = taoensso$sente$state_machine__38281__auto__);\n\n(statearr_43855[(1)] = (1));\n\nreturn statearr_43855;\n});\nvar taoensso$sente$state_machine__38281__auto____1 = (function (state_43848){\nwhile(true){\nvar ret_value__38282__auto__ = (function (){try{while(true){\nvar result__38283__auto__ = switch__38280__auto__(state_43848);\nif(cljs.core.keyword_identical_QMARK_(result__38283__auto__,new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268))){\ncontinue;\n} else {\nreturn result__38283__auto__;\n}\nbreak;\n}\n}catch (e43856){var ex__38284__auto__ = e43856;\nvar statearr_43857_44355 = state_43848;\n(statearr_43857_44355[(2)] = ex__38284__auto__);\n\n\nif(cljs.core.seq((state_43848[(4)]))){\nvar statearr_43858_44356 = state_43848;\n(statearr_43858_44356[(1)] = cljs.core.first((state_43848[(4)])));\n\n} else {\nthrow ex__38284__auto__;\n}\n\nreturn new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268);\n}})();\nif(cljs.core.keyword_identical_QMARK_(ret_value__38282__auto__,new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268))){\nvar G__44357 = state_43848;\nstate_43848 = G__44357;\ncontinue;\n} else {\nreturn ret_value__38282__auto__;\n}\nbreak;\n}\n});\ntaoensso$sente$state_machine__38281__auto__ = function(state_43848){\nswitch(arguments.length){\ncase 0:\nreturn taoensso$sente$state_machine__38281__auto____0.call(this);\ncase 1:\nreturn taoensso$sente$state_machine__38281__auto____1.call(this,state_43848);\n}\nthrow(new Error('Invalid arity: ' + arguments.length));\n};\ntaoensso$sente$state_machine__38281__auto__.cljs$core$IFn$_invoke$arity$0 = taoensso$sente$state_machine__38281__auto____0;\ntaoensso$sente$state_machine__38281__auto__.cljs$core$IFn$_invoke$arity$1 = taoensso$sente$state_machine__38281__auto____1;\nreturn taoensso$sente$state_machine__38281__auto__;\n})()\n})();\nvar state__38374__auto__ = (function (){var statearr_43859 = f__38373__auto__();\n(statearr_43859[(6)] = c__38372__auto___44350);\n\nreturn statearr_43859;\n})();\nreturn cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped(state__38374__auto__);\n}));\n\n} else {\n}\n} else {\n}\n\ntry{cljs.core.deref(self__.socket_).send(ppstr);\n\ncljs.core.reset_BANG_(self__.udt_last_comms_,taoensso.encore.now_udt());\n\nreturn new cljs.core.Keyword(null,\"apparent-success\",\"apparent-success\",242592222);\n}catch (e43860){var e = e43860;\ntaoensso.timbre._log_BANG_.cljs$core$IFn$_invoke$arity$10(taoensso.timbre._STAR_config_STAR_,new cljs.core.Keyword(null,\"error\",\"error\",-978969032),\"taoensso.sente\",null,976,new cljs.core.Keyword(null,\"f\",\"f\",-1597136552),new cljs.core.Keyword(null,\"auto\",\"auto\",-566279492),(new cljs.core.Delay((function (){\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [e,\"Chsk send error\"], null);\n}),null)),null,1571564446);\n\nvar temp__5735__auto___44358 = _QMARK_cb_uuid;\nif(cljs.core.truth_(temp__5735__auto___44358)){\nvar cb_uuid_44359 = temp__5735__auto___44358;\nvar cb_fn_STAR__44360 = (function (){var or__4126__auto__ = taoensso.sente.pull_unused_cb_fn_BANG_(self__.cbs_waiting_,cb_uuid_44359);\nif(cljs.core.truth_(or__4126__auto__)){\nreturn or__4126__auto__;\n} else {\nvar e__$1 = (function (){try{if(taoensso.truss.impl.some_QMARK_(_QMARK_cb_fn)){\nreturn null;\n} else {\nreturn taoensso.truss.impl._dummy_error;\n}\n}catch (e43861){if((e43861 instanceof Error)){\nvar e__$1 = e43861;\nreturn e__$1;\n} else {\nthrow e43861;\n\n}\n}})();\nif((e__$1 == null)){\nreturn _QMARK_cb_fn;\n} else {\nreturn taoensso.truss.impl._invar_violation_BANG_(true,\"taoensso.sente\",979,\"(taoensso.truss.impl/some? ?cb-fn)\",_QMARK_cb_fn,e__$1,null);\n}\n}\n})();\n(cb_fn_STAR__44360.cljs$core$IFn$_invoke$arity$1 ? cb_fn_STAR__44360.cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(\"chsk\",\"error\",\"chsk/error\",-984175439)) : cb_fn_STAR__44360.call(null,new cljs.core.Keyword(\"chsk\",\"error\",\"chsk/error\",-984175439)));\n} else {\n}\n\nreturn false;\n}}\n}));\n\n(taoensso.sente.ChWebSocket.prototype.taoensso$sente$IChSocket$_chsk_connect_BANG_$arity$1 = (function (chsk){\nvar self__ = this;\nvar chsk__$1 = this;\nvar temp__5735__auto__ = (function (){var or__4126__auto__ = taoensso.encore.oget.cljs$core$IFn$_invoke$arity$2(goog.global,\"WebSocket\");\nif(cljs.core.truth_(or__4126__auto__)){\nreturn or__4126__auto__;\n} else {\nvar or__4126__auto____$1 = taoensso.encore.oget.cljs$core$IFn$_invoke$arity$2(goog.global,\"MozWebSocket\");\nif(cljs.core.truth_(or__4126__auto____$1)){\nreturn or__4126__auto____$1;\n} else {\nreturn taoensso.encore.oget.cljs$core$IFn$_invoke$arity$2(cljs.core.deref(taoensso.sente._QMARK_node_npm_websocket_),\"w3cwebsocket\");\n}\n}\n})();\nif(cljs.core.truth_(temp__5735__auto__)){\nvar WebSocket = temp__5735__auto__;\nvar instance_handle = cljs.core.reset_BANG_(self__.instance_handle_,taoensso.encore.uuid_str.cljs$core$IFn$_invoke$arity$0());\nvar have_handle_QMARK_ = (function (){\nreturn cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.deref(self__.instance_handle_),instance_handle);\n});\nvar connect_fn = (function taoensso$sente$connect_fn(){\nif(have_handle_QMARK_()){\nvar retry_fn = (function (){\nif(have_handle_QMARK_()){\nvar retry_count_STAR_ = cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.retry_count_,cljs.core.inc);\nvar backoff_ms = (self__.backoff_ms_fn.cljs$core$IFn$_invoke$arity$1 ? self__.backoff_ms_fn.cljs$core$IFn$_invoke$arity$1(retry_count_STAR_) : self__.backoff_ms_fn.call(null,retry_count_STAR_));\nvar udt_next_reconnect = (taoensso.encore.now_udt() + backoff_ms);\ntaoensso.timbre._log_BANG_.cljs$core$IFn$_invoke$arity$10(taoensso.timbre._STAR_config_STAR_,new cljs.core.Keyword(null,\"warn\",\"warn\",-436710552),\"taoensso.sente\",null,1001,new cljs.core.Keyword(null,\"f\",\"f\",-1597136552),new cljs.core.Keyword(null,\"auto\",\"auto\",-566279492),(new cljs.core.Delay((function (){\nreturn new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [\"Chsk is closed: will try reconnect attempt (%s) in %s ms\",retry_count_STAR_,backoff_ms], null);\n}),null)),null,1185075046);\n\ngoog.global.setTimeout(taoensso$sente$connect_fn,backoff_ms);\n\nreturn taoensso.sente.swap_chsk_state_BANG_(chsk__$1,(function (p1__43818_SHARP_){\nreturn cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(p1__43818_SHARP_,new cljs.core.Keyword(null,\"udt-next-reconnect\",\"udt-next-reconnect\",-1990375733),udt_next_reconnect);\n}));\n} else {\nreturn null;\n}\n});\nvar _QMARK_socket = (function (){try{return (new WebSocket(taoensso.encore.merge_url_with_query_string(self__.url,cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([self__.params,new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"client-id\",\"client-id\",-464622140),self__.client_id], null)], 0)))));\n}catch (e43862){var e = e43862;\ntaoensso.timbre._log_BANG_.cljs$core$IFn$_invoke$arity$10(taoensso.timbre._STAR_config_STAR_,new cljs.core.Keyword(null,\"error\",\"error\",-978969032),\"taoensso.sente\",null,1015,new cljs.core.Keyword(null,\"f\",\"f\",-1597136552),new cljs.core.Keyword(null,\"auto\",\"auto\",-566279492),(new cljs.core.Delay((function (){\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [e,\"WebSocket error\"], null);\n}),null)),null,-268441643);\n\nreturn null;\n}})();\nif(cljs.core.not(_QMARK_socket)){\nreturn retry_fn();\n} else {\nreturn cljs.core.reset_BANG_(self__.socket_,(function (){var G__43863 = _QMARK_socket;\n(G__43863[\"onerror\"] = (function (ws_ev){\ntaoensso.timbre._log_BANG_.cljs$core$IFn$_invoke$arity$10(taoensso.timbre._STAR_config_STAR_,new cljs.core.Keyword(null,\"error\",\"error\",-978969032),\"taoensso.sente\",null,1025,new cljs.core.Keyword(null,\"f\",\"f\",-1597136552),new cljs.core.Keyword(null,\"auto\",\"auto\",-566279492),(new cljs.core.Delay((function (){\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [\"WebSocket error: %s\",(function (){try{return cljs.core.js__GT_clj.cljs$core$IFn$_invoke$arity$1(ws_ev);\n}catch (e43864){var _ = e43864;\nreturn ws_ev;\n}})()], null);\n}),null)),null,-1051463862);\n\nvar last_ws_error = new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\"udt\",\"udt\",2011712751),taoensso.encore.now_udt(),new cljs.core.Keyword(null,\"ev\",\"ev\",-406827324),ws_ev], null);\nreturn taoensso.sente.swap_chsk_state_BANG_(chsk__$1,(function (p1__43819_SHARP_){\nreturn cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(p1__43819_SHARP_,new cljs.core.Keyword(null,\"last-ws-error\",\"last-ws-error\",-820288502),last_ws_error);\n}));\n}));\n\n(G__43863[\"onmessage\"] = (function (ws_ev){\nvar ppstr = taoensso.encore.oget.cljs$core$IFn$_invoke$arity$2(ws_ev,\"data\");\nvar vec__43865 = taoensso.sente.unpack(self__.packer,ppstr);\nvar clj = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__43865,(0),null);\nvar _QMARK_cb_uuid = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__43865,(1),null);\ncljs.core.reset_BANG_(self__.udt_last_comms_,taoensso.encore.now_udt());\n\nvar or__4126__auto__ = ((taoensso.sente.handshake_QMARK_(clj))?(function (){\ntaoensso.sente.receive_handshake_BANG_(new cljs.core.Keyword(null,\"ws\",\"ws\",86841443),chsk__$1,clj);\n\ncljs.core.reset_BANG_(self__.retry_count_,(0));\n\nreturn new cljs.core.Keyword(null,\"handshake\",\"handshake\",68079331);\n})()\n:null);\nif(cljs.core.truth_(or__4126__auto__)){\nreturn or__4126__auto__;\n} else {\nvar or__4126__auto____$1 = ((cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(clj,new cljs.core.Keyword(\"chsk\",\"ws-ping\",\"chsk/ws-ping\",191675304)))?(function (){\ncljs.core.async.put_BANG_.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\"<server\",\"<server\",-2135373537).cljs$core$IFn$_invoke$arity$1(self__.chs),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"chsk\",\"ws-ping\",\"chsk/ws-ping\",191675304)], null));\n\nreturn new cljs.core.Keyword(null,\"noop\",\"noop\",-673731258);\n})()\n:null);\nif(cljs.core.truth_(or__4126__auto____$1)){\nreturn or__4126__auto____$1;\n} else {\nvar temp__5733__auto__ = _QMARK_cb_uuid;\nif(cljs.core.truth_(temp__5733__auto__)){\nvar cb_uuid = temp__5733__auto__;\nvar temp__5733__auto____$1 = taoensso.sente.pull_unused_cb_fn_BANG_(self__.cbs_waiting_,cb_uuid);\nif(cljs.core.truth_(temp__5733__auto____$1)){\nvar cb_fn = temp__5733__auto____$1;\nreturn (cb_fn.cljs$core$IFn$_invoke$arity$1 ? cb_fn.cljs$core$IFn$_invoke$arity$1(clj) : cb_fn.call(null,clj));\n} else {\nreturn taoensso.timbre._log_BANG_.cljs$core$IFn$_invoke$arity$10(taoensso.timbre._STAR_config_STAR_,new cljs.core.Keyword(null,\"warn\",\"warn\",-436710552),\"taoensso.sente\",null,1061,new cljs.core.Keyword(null,\"f\",\"f\",-1597136552),new cljs.core.Keyword(null,\"auto\",\"auto\",-566279492),(new cljs.core.Delay((function (){\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [\"Cb reply w/o local cb-fn: %s\",clj], null);\n}),null)),null,145377342);\n}\n} else {\nvar buffered_evs = clj;\nreturn taoensso.sente.receive_buffered_evs_BANG_(self__.chs,buffered_evs);\n}\n}\n}\n}));\n\n(G__43863[\"onclose\"] = (function (ws_ev){\nvar clean_QMARK_ = taoensso.encore.oget.cljs$core$IFn$_invoke$arity$2(ws_ev,\"wasClean\");\nvar code = taoensso.encore.oget.cljs$core$IFn$_invoke$arity$2(ws_ev,\"code\");\nvar reason = taoensso.encore.oget.cljs$core$IFn$_invoke$arity$2(ws_ev,\"reason\");\nvar last_ws_close = new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null,\"udt\",\"udt\",2011712751),taoensso.encore.now_udt(),new cljs.core.Keyword(null,\"ev\",\"ev\",-406827324),ws_ev,new cljs.core.Keyword(null,\"clean?\",\"clean?\",-1675631009),clean_QMARK_,new cljs.core.Keyword(null,\"code\",\"code\",1586293142),code,new cljs.core.Keyword(null,\"reason\",\"reason\",-2070751759),reason], null);\nif(cljs.core.truth_(clean_QMARK_)){\ntaoensso.timbre._log_BANG_.cljs$core$IFn$_invoke$arity$10(taoensso.timbre._STAR_config_STAR_,new cljs.core.Keyword(null,\"debug\",\"debug\",-1608172596),\"taoensso.sente\",null,1083,new cljs.core.Keyword(null,\"f\",\"f\",-1597136552),new cljs.core.Keyword(null,\"auto\",\"auto\",-566279492),(new cljs.core.Delay((function (){\nreturn new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [\"Clean WebSocket close, will not attempt reconnect\"], null);\n}),null)),null,664198563);\n\nreturn taoensso.sente.swap_chsk_state_BANG_(chsk__$1,(function (p1__43820_SHARP_){\nreturn cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(p1__43820_SHARP_,new cljs.core.Keyword(null,\"last-ws-close\",\"last-ws-close\",-798104932),last_ws_close);\n}));\n} else {\ntaoensso.sente.swap_chsk_state_BANG_(chsk__$1,(function (p1__43821_SHARP_){\nreturn cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(taoensso.sente.chsk_state__GT_closed(p1__43821_SHARP_,new cljs.core.Keyword(null,\"unexpected\",\"unexpected\",-1137752424)),new cljs.core.Keyword(null,\"last-ws-close\",\"last-ws-close\",-798104932),last_ws_close);\n}));\n\nreturn retry_fn();\n}\n}));\n\nreturn G__43863;\n})());\n}\n} else {\nreturn null;\n}\n});\nvar temp__5735__auto___44361__$1 = self__.ws_kalive_ms;\nif(cljs.core.truth_(temp__5735__auto___44361__$1)){\nvar ms_44362 = temp__5735__auto___44361__$1;\nvar c__38372__auto___44363 = cljs.core.async.chan.cljs$core$IFn$_invoke$arity$1((1));\ncljs.core.async.impl.dispatch.run((function (){\nvar f__38373__auto__ = (function (){var switch__38280__auto__ = (function (state_43895){\nvar state_val_43896 = (state_43895[(1)]);\nif((state_val_43896 === (7))){\nvar inst_43891 = (state_43895[(2)]);\nvar state_43895__$1 = state_43895;\nvar statearr_43897_44364 = state_43895__$1;\n(statearr_43897_44364[(2)] = inst_43891);\n\n(statearr_43897_44364[(1)] = (3));\n\n\nreturn new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268);\n} else {\nif((state_val_43896 === (1))){\nvar state_43895__$1 = state_43895;\nvar statearr_43898_44365 = state_43895__$1;\n(statearr_43898_44365[(2)] = null);\n\n(statearr_43898_44365[(1)] = (2));\n\n\nreturn new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268);\n} else {\nif((state_val_43896 === (4))){\nvar inst_43872 = (state_43895[(2)]);\nvar inst_43873 = have_handle_QMARK_();\nvar state_43895__$1 = (function (){var statearr_43899 = state_43895;\n(statearr_43899[(7)] = inst_43872);\n\nreturn statearr_43899;\n})();\nif(inst_43873){\nvar statearr_43900_44366 = state_43895__$1;\n(statearr_43900_44366[(1)] = (5));\n\n} else {\nvar statearr_43901_44367 = state_43895__$1;\n(statearr_43901_44367[(1)] = (6));\n\n}\n\nreturn new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268);\n} else {\nif((state_val_43896 === (6))){\nvar state_43895__$1 = state_43895;\nvar statearr_43902_44368 = state_43895__$1;\n(statearr_43902_44368[(2)] = null);\n\n(statearr_43902_44368[(1)] = (7));\n\n\nreturn new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268);\n} else {\nif((state_val_43896 === (3))){\nvar inst_43893 = (state_43895[(2)]);\nvar state_43895__$1 = state_43895;\nreturn cljs.core.async.impl.ioc_helpers.return_chan(state_43895__$1,inst_43893);\n} else {\nif((state_val_43896 === (2))){\nvar inst_43869 = cljs.core.deref(self__.udt_last_comms_);\nvar inst_43870 = cljs.core.async.timeout(ms_44362);\nvar state_43895__$1 = (function (){var statearr_43903 = state_43895;\n(statearr_43903[(8)] = inst_43869);\n\nreturn statearr_43903;\n})();\nreturn cljs.core.async.impl.ioc_helpers.take_BANG_(state_43895__$1,(4),inst_43870);\n} else {\nif((state_val_43896 === (9))){\nvar state_43895__$1 = state_43895;\nvar statearr_43904_44369 = state_43895__$1;\n(statearr_43904_44369[(2)] = null);\n\n(statearr_43904_44369[(1)] = (10));\n\n\nreturn new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268);\n} else {\nif((state_val_43896 === (5))){\nvar inst_43869 = (state_43895[(8)]);\nvar inst_43875 = cljs.core.deref(self__.udt_last_comms_);\nvar inst_43876 = cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(inst_43869,inst_43875);\nvar state_43895__$1 = state_43895;\nif(inst_43876){\nvar statearr_43905_44370 = state_43895__$1;\n(statearr_43905_44370[(1)] = (8));\n\n} else {\nvar statearr_43906_44371 = state_43895__$1;\n(statearr_43906_44371[(1)] = (9));\n\n}\n\nreturn new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268);\n} else {\nif((state_val_43896 === (10))){\nvar inst_43887 = (state_43895[(2)]);\nvar state_43895__$1 = (function (){var statearr_43907 = state_43895;\n(statearr_43907[(9)] = inst_43887);\n\nreturn statearr_43907;\n})();\nvar statearr_43908_44372 = state_43895__$1;\n(statearr_43908_44372[(2)] = null);\n\n(statearr_43908_44372[(1)] = (2));\n\n\nreturn new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268);\n} else {\nif((state_val_43896 === (8))){\nvar inst_43878 = cljs.core.PersistentVector.EMPTY_NODE;\nvar inst_43879 = [new cljs.core.Keyword(\"chsk\",\"ws-ping\",\"chsk/ws-ping\",191675304)];\nvar inst_43880 = (new cljs.core.PersistentVector(null,1,(5),inst_43878,inst_43879,null));\nvar inst_43881 = [new cljs.core.Keyword(null,\"flush?\",\"flush?\",-108887231)];\nvar inst_43882 = [true];\nvar inst_43883 = cljs.core.PersistentHashMap.fromArrays(inst_43881,inst_43882);\nvar inst_43884 = chsk__$1.taoensso$sente$IChSocket$_chsk_send_BANG_$arity$3(null,inst_43880,inst_43883);\nvar state_43895__$1 = state_43895;\nvar statearr_43909_44373 = state_43895__$1;\n(statearr_43909_44373[(2)] = inst_43884);\n\n(statearr_43909_44373[(1)] = (10));\n\n\nreturn new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268);\n} else {\nreturn null;\n}\n}\n}\n}\n}\n}\n}\n}\n}\n}\n});\nreturn (function() {\nvar taoensso$sente$state_machine__38281__auto__ = null;\nvar taoensso$sente$state_machine__38281__auto____0 = (function (){\nvar statearr_43910 = [null,null,null,null,null,null,null,null,null,null];\n(statearr_43910[(0)] = taoensso$sente$state_machine__38281__auto__);\n\n(statearr_43910[(1)] = (1));\n\nreturn statearr_43910;\n});\nvar taoensso$sente$state_machine__38281__auto____1 = (function (state_43895){\nwhile(true){\nvar ret_value__38282__auto__ = (function (){try{while(true){\nvar result__38283__auto__ = switch__38280__auto__(state_43895);\nif(cljs.core.keyword_identical_QMARK_(result__38283__auto__,new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268))){\ncontinue;\n} else {\nreturn result__38283__auto__;\n}\nbreak;\n}\n}catch (e43911){var ex__38284__auto__ = e43911;\nvar statearr_43912_44374 = state_43895;\n(statearr_43912_44374[(2)] = ex__38284__auto__);\n\n\nif(cljs.core.seq((state_43895[(4)]))){\nvar statearr_43913_44375 = state_43895;\n(statearr_43913_44375[(1)] = cljs.core.first((state_43895[(4)])));\n\n} else {\nthrow ex__38284__auto__;\n}\n\nreturn new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268);\n}})();\nif(cljs.core.keyword_identical_QMARK_(ret_value__38282__auto__,new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268))){\nvar G__44376 = state_43895;\nstate_43895 = G__44376;\ncontinue;\n} else {\nreturn ret_value__38282__auto__;\n}\nbreak;\n}\n});\ntaoensso$sente$state_machine__38281__auto__ = function(state_43895){\nswitch(arguments.length){\ncase 0:\nreturn taoensso$sente$state_machine__38281__auto____0.call(this);\ncase 1:\nreturn taoensso$sente$state_machine__38281__auto____1.call(this,state_43895);\n}\nthrow(new Error('Invalid arity: ' + arguments.length));\n};\ntaoensso$sente$state_machine__38281__auto__.cljs$core$IFn$_invoke$arity$0 = taoensso$sente$state_machine__38281__auto____0;\ntaoensso$sente$state_machine__38281__auto__.cljs$core$IFn$_invoke$arity$1 = taoensso$sente$state_machine__38281__auto____1;\nreturn taoensso$sente$state_machine__38281__auto__;\n})()\n})();\nvar state__38374__auto__ = (function (){var statearr_43914 = f__38373__auto__();\n(statearr_43914[(6)] = c__38372__auto___44363);\n\nreturn statearr_43914;\n})();\nreturn cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped(state__38374__auto__);\n}));\n\n} else {\n}\n\ncljs.core.reset_BANG_(self__.retry_count_,(0));\n\nconnect_fn();\n\nreturn chsk__$1;\n} else {\nreturn null;\n}\n}));\n\n(taoensso.sente.ChWebSocket.getBasis = (function (){\nreturn new cljs.core.PersistentVector(null, 14, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"client-id\",\"client-id\",1175909387,null),new cljs.core.Symbol(null,\"chs\",\"chs\",2017417647,null),new cljs.core.Symbol(null,\"params\",\"params\",-1943919534,null),new cljs.core.Symbol(null,\"packer\",\"packer\",1706609071,null),new cljs.core.Symbol(null,\"url\",\"url\",1916828573,null),new cljs.core.Symbol(null,\"ws-kalive-ms\",\"ws-kalive-ms\",-1212255801,null),new cljs.core.Symbol(null,\"state_\",\"state_\",-1696768667,null),new cljs.core.Symbol(null,\"instance-handle_\",\"instance-handle_\",-282852930,null),new cljs.core.Symbol(null,\"retry-count_\",\"retry-count_\",1660769620,null),new cljs.core.Symbol(null,\"ever-opened?_\",\"ever-opened?_\",-1013096856,null),new cljs.core.Symbol(null,\"backoff-ms-fn\",\"backoff-ms-fn\",-1881539814,null),new cljs.core.Symbol(null,\"cbs-waiting_\",\"cbs-waiting_\",121502466,null),new cljs.core.Symbol(null,\"socket_\",\"socket_\",1279482619,null),new cljs.core.Symbol(null,\"udt-last-comms_\",\"udt-last-comms_\",1494731888,null)], null);\n}));\n\n(taoensso.sente.ChWebSocket.cljs$lang$type = true);\n\n(taoensso.sente.ChWebSocket.cljs$lang$ctorPrSeq = (function (this__4423__auto__){\nreturn (new cljs.core.List(null,\"taoensso.sente/ChWebSocket\",null,(1),null));\n}));\n\n(taoensso.sente.ChWebSocket.cljs$lang$ctorPrWriter = (function (this__4423__auto__,writer__4424__auto__){\nreturn cljs.core._write(writer__4424__auto__,\"taoensso.sente/ChWebSocket\");\n}));\n\n/**\n * Positional factory function for taoensso.sente/ChWebSocket.\n */\ntaoensso.sente.__GT_ChWebSocket = (function taoensso$sente$__GT_ChWebSocket(client_id,chs,params,packer,url,ws_kalive_ms,state_,instance_handle_,retry_count_,ever_opened_QMARK__,backoff_ms_fn,cbs_waiting_,socket_,udt_last_comms_){\nreturn (new taoensso.sente.ChWebSocket(client_id,chs,params,packer,url,ws_kalive_ms,state_,instance_handle_,retry_count_,ever_opened_QMARK__,backoff_ms_fn,cbs_waiting_,socket_,udt_last_comms_,null,null,null));\n});\n\n/**\n * Factory function for taoensso.sente/ChWebSocket, taking a map of keywords to field values.\n */\ntaoensso.sente.map__GT_ChWebSocket = (function taoensso$sente$map__GT_ChWebSocket(G__43826){\nvar extmap__4419__auto__ = (function (){var G__43915 = cljs.core.dissoc.cljs$core$IFn$_invoke$arity$variadic(G__43826,new cljs.core.Keyword(null,\"client-id\",\"client-id\",-464622140),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([new cljs.core.Keyword(null,\"chs\",\"chs\",376886120),new cljs.core.Keyword(null,\"params\",\"params\",710516235),new cljs.core.Keyword(null,\"packer\",\"packer\",66077544),new cljs.core.Keyword(null,\"url\",\"url\",276297046),new cljs.core.Keyword(null,\"ws-kalive-ms\",\"ws-kalive-ms\",1442179968),new cljs.core.Keyword(null,\"state_\",\"state_\",957667102),new cljs.core.Keyword(null,\"instance-handle_\",\"instance-handle_\",-1923384457),new cljs.core.Keyword(null,\"retry-count_\",\"retry-count_\",20238093),new cljs.core.Keyword(null,\"ever-opened?_\",\"ever-opened?_\",1641338913),new cljs.core.Keyword(null,\"backoff-ms-fn\",\"backoff-ms-fn\",772895955),new cljs.core.Keyword(null,\"cbs-waiting_\",\"cbs-waiting_\",-1519029061),new cljs.core.Keyword(null,\"socket_\",\"socket_\",-361048908),new cljs.core.Keyword(null,\"udt-last-comms_\",\"udt-last-comms_\",-145799639)], 0));\nif(cljs.core.record_QMARK_(G__43826)){\nreturn cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentArrayMap.EMPTY,G__43915);\n} else {\nreturn G__43915;\n}\n})();\nreturn (new taoensso.sente.ChWebSocket(new cljs.core.Keyword(null,\"client-id\",\"client-id\",-464622140).cljs$core$IFn$_invoke$arity$1(G__43826),new cljs.core.Keyword(null,\"chs\",\"chs\",376886120).cljs$core$IFn$_invoke$arity$1(G__43826),new cljs.core.Keyword(null,\"params\",\"params\",710516235).cljs$core$IFn$_invoke$arity$1(G__43826),new cljs.core.Keyword(null,\"packer\",\"packer\",66077544).cljs$core$IFn$_invoke$arity$1(G__43826),new cljs.core.Keyword(null,\"url\",\"url\",276297046).cljs$core$IFn$_invoke$arity$1(G__43826),new cljs.core.Keyword(null,\"ws-kalive-ms\",\"ws-kalive-ms\",1442179968).cljs$core$IFn$_invoke$arity$1(G__43826),new cljs.core.Keyword(null,\"state_\",\"state_\",957667102).cljs$core$IFn$_invoke$arity$1(G__43826),new cljs.core.Keyword(null,\"instance-handle_\",\"instance-handle_\",-1923384457).cljs$core$IFn$_invoke$arity$1(G__43826),new cljs.core.Keyword(null,\"retry-count_\",\"retry-count_\",20238093).cljs$core$IFn$_invoke$arity$1(G__43826),new cljs.core.Keyword(null,\"ever-opened?_\",\"ever-opened?_\",1641338913).cljs$core$IFn$_invoke$arity$1(G__43826),new cljs.core.Keyword(null,\"backoff-ms-fn\",\"backoff-ms-fn\",772895955).cljs$core$IFn$_invoke$arity$1(G__43826),new cljs.core.Keyword(null,\"cbs-waiting_\",\"cbs-waiting_\",-1519029061).cljs$core$IFn$_invoke$arity$1(G__43826),new cljs.core.Keyword(null,\"socket_\",\"socket_\",-361048908).cljs$core$IFn$_invoke$arity$1(G__43826),new cljs.core.Keyword(null,\"udt-last-comms_\",\"udt-last-comms_\",-145799639).cljs$core$IFn$_invoke$arity$1(G__43826),null,cljs.core.not_empty(extmap__4419__auto__),null));\n});\n\ntaoensso.sente.new_ChWebSocket = (function taoensso$sente$new_ChWebSocket(opts){\nreturn taoensso.sente.map__GT_ChWebSocket(cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([new cljs.core.PersistentArrayMap(null, 7, [new cljs.core.Keyword(null,\"state_\",\"state_\",957667102),cljs.core.atom.cljs$core$IFn$_invoke$arity$1(new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,\"type\",\"type\",1174270348),new cljs.core.Keyword(null,\"ws\",\"ws\",86841443),new cljs.core.Keyword(null,\"open?\",\"open?\",1238443125),false,new cljs.core.Keyword(null,\"ever-opened?\",\"ever-opened?\",1128459732),false], null)),new cljs.core.Keyword(null,\"instance-handle_\",\"instance-handle_\",-1923384457),cljs.core.atom.cljs$core$IFn$_invoke$arity$1(null),new cljs.core.Keyword(null,\"retry-count_\",\"retry-count_\",20238093),cljs.core.atom.cljs$core$IFn$_invoke$arity$1((0)),new cljs.core.Keyword(null,\"ever-opened?_\",\"ever-opened?_\",1641338913),cljs.core.atom.cljs$core$IFn$_invoke$arity$1(false),new cljs.core.Keyword(null,\"cbs-waiting_\",\"cbs-waiting_\",-1519029061),cljs.core.atom.cljs$core$IFn$_invoke$arity$1(cljs.core.PersistentArrayMap.EMPTY),new cljs.core.Keyword(null,\"socket_\",\"socket_\",-361048908),cljs.core.atom.cljs$core$IFn$_invoke$arity$1(null),new cljs.core.Keyword(null,\"udt-last-comms_\",\"udt-last-comms_\",-145799639),cljs.core.atom.cljs$core$IFn$_invoke$arity$1(null)], null),opts], 0)));\n});\n/**\n * We must set *some* client-side timeout otherwise an unpredictable (and\n *   probably too short) browser default will be used. Must be > server's\n *   :lp-timeout-ms.\n */\ntaoensso.sente.default_client_side_ajax_timeout_ms = taoensso.encore.ms.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([new cljs.core.Keyword(null,\"secs\",\"secs\",1532330091),(60)], 0));\n\n/**\n* @constructor\n * @implements {cljs.core.IRecord}\n * @implements {cljs.core.IKVReduce}\n * @implements {cljs.core.IEquiv}\n * @implements {cljs.core.IHash}\n * @implements {cljs.core.ICollection}\n * @implements {cljs.core.ICounted}\n * @implements {cljs.core.ISeqable}\n * @implements {cljs.core.IMeta}\n * @implements {cljs.core.ICloneable}\n * @implements {cljs.core.IPrintWithWriter}\n * @implements {cljs.core.IIterable}\n * @implements {cljs.core.IWithMeta}\n * @implements {cljs.core.IAssociative}\n * @implements {taoensso.sente.IChSocket}\n * @implements {cljs.core.IMap}\n * @implements {cljs.core.ILookup}\n*/\ntaoensso.sente.ChAjaxSocket = (function (client_id,chs,params,packer,url,state_,instance_handle_,ever_opened_QMARK__,backoff_ms_fn,ajax_opts,curr_xhr_,__meta,__extmap,__hash){\nthis.client_id = client_id;\nthis.chs = chs;\nthis.params = params;\nthis.packer = packer;\nthis.url = url;\nthis.state_ = state_;\nthis.instance_handle_ = instance_handle_;\nthis.ever_opened_QMARK__ = ever_opened_QMARK__;\nthis.backoff_ms_fn = backoff_ms_fn;\nthis.ajax_opts = ajax_opts;\nthis.curr_xhr_ = curr_xhr_;\nthis.__meta = __meta;\nthis.__extmap = __extmap;\nthis.__hash = __hash;\nthis.cljs$lang$protocol_mask$partition0$ = 2230716170;\nthis.cljs$lang$protocol_mask$partition1$ = 139264;\n});\n(taoensso.sente.ChAjaxSocket.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (this__4380__auto__,k__4381__auto__){\nvar self__ = this;\nvar this__4380__auto____$1 = this;\nreturn this__4380__auto____$1.cljs$core$ILookup$_lookup$arity$3(null,k__4381__auto__,null);\n}));\n\n(taoensso.sente.ChAjaxSocket.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (this__4382__auto__,k43923,else__4383__auto__){\nvar self__ = this;\nvar this__4382__auto____$1 = this;\nvar G__43927 = k43923;\nvar G__43927__$1 = (((G__43927 instanceof cljs.core.Keyword))?G__43927.fqn:null);\nswitch (G__43927__$1) {\ncase \"client-id\":\nreturn self__.client_id;\n\nbreak;\ncase \"chs\":\nreturn self__.chs;\n\nbreak;\ncase \"params\":\nreturn self__.params;\n\nbreak;\ncase \"packer\":\nreturn self__.packer;\n\nbreak;\ncase \"url\":\nreturn self__.url;\n\nbreak;\ncase \"state_\":\nreturn self__.state_;\n\nbreak;\ncase \"instance-handle_\":\nreturn self__.instance_handle_;\n\nbreak;\ncase \"ever-opened?_\":\nreturn self__.ever_opened_QMARK__;\n\nbreak;\ncase \"backoff-ms-fn\":\nreturn self__.backoff_ms_fn;\n\nbreak;\ncase \"ajax-opts\":\nreturn self__.ajax_opts;\n\nbreak;\ncase \"curr-xhr_\":\nreturn self__.curr_xhr_;\n\nbreak;\ndefault:\nreturn cljs.core.get.cljs$core$IFn$_invoke$arity$3(self__.__extmap,k43923,else__4383__auto__);\n\n}\n}));\n\n(taoensso.sente.ChAjaxSocket.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = (function (this__4399__auto__,f__4400__auto__,init__4401__auto__){\nvar self__ = this;\nvar this__4399__auto____$1 = this;\nreturn cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (ret__4402__auto__,p__43928){\nvar vec__43929 = p__43928;\nvar k__4403__auto__ = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__43929,(0),null);\nvar v__4404__auto__ = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__43929,(1),null);\nreturn (f__4400__auto__.cljs$core$IFn$_invoke$arity$3 ? f__4400__auto__.cljs$core$IFn$_invoke$arity$3(ret__4402__auto__,k__4403__auto__,v__4404__auto__) : f__4400__auto__.call(null,ret__4402__auto__,k__4403__auto__,v__4404__auto__));\n}),init__4401__auto__,this__4399__auto____$1);\n}));\n\n(taoensso.sente.ChAjaxSocket.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (this__4394__auto__,writer__4395__auto__,opts__4396__auto__){\nvar self__ = this;\nvar this__4394__auto____$1 = this;\nvar pr_pair__4397__auto__ = (function (keyval__4398__auto__){\nreturn cljs.core.pr_sequential_writer(writer__4395__auto__,cljs.core.pr_writer,\"\",\" \",\"\",opts__4396__auto__,keyval__4398__auto__);\n});\nreturn cljs.core.pr_sequential_writer(writer__4395__auto__,pr_pair__4397__auto__,\"#taoensso.sente.ChAjaxSocket{\",\", \",\"}\",opts__4396__auto__,cljs.core.concat.cljs$core$IFn$_invoke$arity$2(new cljs.core.PersistentVector(null, 11, 5, cljs.core.PersistentVector.EMPTY_NODE, [(new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[new cljs.core.Keyword(null,\"client-id\",\"client-id\",-464622140),self__.client_id],null)),(new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[new cljs.core.Keyword(null,\"chs\",\"chs\",376886120),self__.chs],null)),(new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[new cljs.core.Keyword(null,\"params\",\"params\",710516235),self__.params],null)),(new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[new cljs.core.Keyword(null,\"packer\",\"packer\",66077544),self__.packer],null)),(new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[new cljs.core.Keyword(null,\"url\",\"url\",276297046),self__.url],null)),(new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[new cljs.core.Keyword(null,\"state_\",\"state_\",957667102),self__.state_],null)),(new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[new cljs.core.Keyword(null,\"instance-handle_\",\"instance-handle_\",-1923384457),self__.instance_handle_],null)),(new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[new cljs.core.Keyword(null,\"ever-opened?_\",\"ever-opened?_\",1641338913),self__.ever_opened_QMARK__],null)),(new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[new cljs.core.Keyword(null,\"backoff-ms-fn\",\"backoff-ms-fn\",772895955),self__.backoff_ms_fn],null)),(new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[new cljs.core.Keyword(null,\"ajax-opts\",\"ajax-opts\",-518239109),self__.ajax_opts],null)),(new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[new cljs.core.Keyword(null,\"curr-xhr_\",\"curr-xhr_\",-1318773696),self__.curr_xhr_],null))], null),self__.__extmap));\n}));\n\n(taoensso.sente.ChAjaxSocket.prototype.cljs$core$IIterable$_iterator$arity$1 = (function (G__43922){\nvar self__ = this;\nvar G__43922__$1 = this;\nreturn (new cljs.core.RecordIter((0),G__43922__$1,11,new cljs.core.PersistentVector(null, 11, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"client-id\",\"client-id\",-464622140),new cljs.core.Keyword(null,\"chs\",\"chs\",376886120),new cljs.core.Keyword(null,\"params\",\"params\",710516235),new cljs.core.Keyword(null,\"packer\",\"packer\",66077544),new cljs.core.Keyword(null,\"url\",\"url\",276297046),new cljs.core.Keyword(null,\"state_\",\"state_\",957667102),new cljs.core.Keyword(null,\"instance-handle_\",\"instance-handle_\",-1923384457),new cljs.core.Keyword(null,\"ever-opened?_\",\"ever-opened?_\",1641338913),new cljs.core.Keyword(null,\"backoff-ms-fn\",\"backoff-ms-fn\",772895955),new cljs.core.Keyword(null,\"ajax-opts\",\"ajax-opts\",-518239109),new cljs.core.Keyword(null,\"curr-xhr_\",\"curr-xhr_\",-1318773696)], null),(cljs.core.truth_(self__.__extmap)?cljs.core._iterator(self__.__extmap):cljs.core.nil_iter())));\n}));\n\n(taoensso.sente.ChAjaxSocket.prototype.cljs$core$IMeta$_meta$arity$1 = (function (this__4378__auto__){\nvar self__ = this;\nvar this__4378__auto____$1 = this;\nreturn self__.__meta;\n}));\n\n(taoensso.sente.ChAjaxSocket.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (this__4375__auto__){\nvar self__ = this;\nvar this__4375__auto____$1 = this;\nreturn (new taoensso.sente.ChAjaxSocket(self__.client_id,self__.chs,self__.params,self__.packer,self__.url,self__.state_,self__.instance_handle_,self__.ever_opened_QMARK__,self__.backoff_ms_fn,self__.ajax_opts,self__.curr_xhr_,self__.__meta,self__.__extmap,self__.__hash));\n}));\n\n(taoensso.sente.ChAjaxSocket.prototype.cljs$core$ICounted$_count$arity$1 = (function (this__4384__auto__){\nvar self__ = this;\nvar this__4384__auto____$1 = this;\nreturn (11 + cljs.core.count(self__.__extmap));\n}));\n\n(taoensso.sente.ChAjaxSocket.prototype.cljs$core$IHash$_hash$arity$1 = (function (this__4376__auto__){\nvar self__ = this;\nvar this__4376__auto____$1 = this;\nvar h__4238__auto__ = self__.__hash;\nif((!((h__4238__auto__ == null)))){\nreturn h__4238__auto__;\n} else {\nvar h__4238__auto____$1 = (function (coll__4377__auto__){\nreturn (-266770752 ^ cljs.core.hash_unordered_coll(coll__4377__auto__));\n})(this__4376__auto____$1);\n(self__.__hash = h__4238__auto____$1);\n\nreturn h__4238__auto____$1;\n}\n}));\n\n(taoensso.sente.ChAjaxSocket.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (this43924,other43925){\nvar self__ = this;\nvar this43924__$1 = this;\nreturn (((!((other43925 == null)))) && ((this43924__$1.constructor === other43925.constructor)) && (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(this43924__$1.client_id,other43925.client_id)) && (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(this43924__$1.chs,other43925.chs)) && (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(this43924__$1.params,other43925.params)) && (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(this43924__$1.packer,other43925.packer)) && (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(this43924__$1.url,other43925.url)) && (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(this43924__$1.state_,other43925.state_)) && (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(this43924__$1.instance_handle_,other43925.instance_handle_)) && (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(this43924__$1.ever_opened_QMARK__,other43925.ever_opened_QMARK__)) && (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(this43924__$1.backoff_ms_fn,other43925.backoff_ms_fn)) && (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(this43924__$1.ajax_opts,other43925.ajax_opts)) && (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(this43924__$1.curr_xhr_,other43925.curr_xhr_)) && (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(this43924__$1.__extmap,other43925.__extmap)));\n}));\n\n(taoensso.sente.ChAjaxSocket.prototype.cljs$core$IMap$_dissoc$arity$2 = (function (this__4389__auto__,k__4390__auto__){\nvar self__ = this;\nvar this__4389__auto____$1 = this;\nif(cljs.core.contains_QMARK_(new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 11, [new cljs.core.Keyword(null,\"curr-xhr_\",\"curr-xhr_\",-1318773696),null,new cljs.core.Keyword(null,\"ever-opened?_\",\"ever-opened?_\",1641338913),null,new cljs.core.Keyword(null,\"client-id\",\"client-id\",-464622140),null,new cljs.core.Keyword(null,\"packer\",\"packer\",66077544),null,new cljs.core.Keyword(null,\"chs\",\"chs\",376886120),null,new cljs.core.Keyword(null,\"params\",\"params\",710516235),null,new cljs.core.Keyword(null,\"backoff-ms-fn\",\"backoff-ms-fn\",772895955),null,new cljs.core.Keyword(null,\"url\",\"url\",276297046),null,new cljs.core.Keyword(null,\"instance-handle_\",\"instance-handle_\",-1923384457),null,new cljs.core.Keyword(null,\"ajax-opts\",\"ajax-opts\",-518239109),null,new cljs.core.Keyword(null,\"state_\",\"state_\",957667102),null], null), null),k__4390__auto__)){\nreturn cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(cljs.core._with_meta(cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentArrayMap.EMPTY,this__4389__auto____$1),self__.__meta),k__4390__auto__);\n} else {\nreturn (new taoensso.sente.ChAjaxSocket(self__.client_id,self__.chs,self__.params,self__.packer,self__.url,self__.state_,self__.instance_handle_,self__.ever_opened_QMARK__,self__.backoff_ms_fn,self__.ajax_opts,self__.curr_xhr_,self__.__meta,cljs.core.not_empty(cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(self__.__extmap,k__4390__auto__)),null));\n}\n}));\n\n(taoensso.sente.ChAjaxSocket.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (this__4387__auto__,k__4388__auto__,G__43922){\nvar self__ = this;\nvar this__4387__auto____$1 = this;\nvar pred__43932 = cljs.core.keyword_identical_QMARK_;\nvar expr__43933 = k__4388__auto__;\nif(cljs.core.truth_((pred__43932.cljs$core$IFn$_invoke$arity$2 ? pred__43932.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\"client-id\",\"client-id\",-464622140),expr__43933) : pred__43932.call(null,new cljs.core.Keyword(null,\"client-id\",\"client-id\",-464622140),expr__43933)))){\nreturn (new taoensso.sente.ChAjaxSocket(G__43922,self__.chs,self__.params,self__.packer,self__.url,self__.state_,self__.instance_handle_,self__.ever_opened_QMARK__,self__.backoff_ms_fn,self__.ajax_opts,self__.curr_xhr_,self__.__meta,self__.__extmap,null));\n} else {\nif(cljs.core.truth_((pred__43932.cljs$core$IFn$_invoke$arity$2 ? pred__43932.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\"chs\",\"chs\",376886120),expr__43933) : pred__43932.call(null,new cljs.core.Keyword(null,\"chs\",\"chs\",376886120),expr__43933)))){\nreturn (new taoensso.sente.ChAjaxSocket(self__.client_id,G__43922,self__.params,self__.packer,self__.url,self__.state_,self__.instance_handle_,self__.ever_opened_QMARK__,self__.backoff_ms_fn,self__.ajax_opts,self__.curr_xhr_,self__.__meta,self__.__extmap,null));\n} else {\nif(cljs.core.truth_((pred__43932.cljs$core$IFn$_invoke$arity$2 ? pred__43932.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\"params\",\"params\",710516235),expr__43933) : pred__43932.call(null,new cljs.core.Keyword(null,\"params\",\"params\",710516235),expr__43933)))){\nreturn (new taoensso.sente.ChAjaxSocket(self__.client_id,self__.chs,G__43922,self__.packer,self__.url,self__.state_,self__.instance_handle_,self__.ever_opened_QMARK__,self__.backoff_ms_fn,self__.ajax_opts,self__.curr_xhr_,self__.__meta,self__.__extmap,null));\n} else {\nif(cljs.core.truth_((pred__43932.cljs$core$IFn$_invoke$arity$2 ? pred__43932.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\"packer\",\"packer\",66077544),expr__43933) : pred__43932.call(null,new cljs.core.Keyword(null,\"packer\",\"packer\",66077544),expr__43933)))){\nreturn (new taoensso.sente.ChAjaxSocket(self__.client_id,self__.chs,self__.params,G__43922,self__.url,self__.state_,self__.instance_handle_,self__.ever_opened_QMARK__,self__.backoff_ms_fn,self__.ajax_opts,self__.curr_xhr_,self__.__meta,self__.__extmap,null));\n} else {\nif(cljs.core.truth_((pred__43932.cljs$core$IFn$_invoke$arity$2 ? pred__43932.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\"url\",\"url\",276297046),expr__43933) : pred__43932.call(null,new cljs.core.Keyword(null,\"url\",\"url\",276297046),expr__43933)))){\nreturn (new taoensso.sente.ChAjaxSocket(self__.client_id,self__.chs,self__.params,self__.packer,G__43922,self__.state_,self__.instance_handle_,self__.ever_opened_QMARK__,self__.backoff_ms_fn,self__.ajax_opts,self__.curr_xhr_,self__.__meta,self__.__extmap,null));\n} else {\nif(cljs.core.truth_((pred__43932.cljs$core$IFn$_invoke$arity$2 ? pred__43932.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\"state_\",\"state_\",957667102),expr__43933) : pred__43932.call(null,new cljs.core.Keyword(null,\"state_\",\"state_\",957667102),expr__43933)))){\nreturn (new taoensso.sente.ChAjaxSocket(self__.client_id,self__.chs,self__.params,self__.packer,self__.url,G__43922,self__.instance_handle_,self__.ever_opened_QMARK__,self__.backoff_ms_fn,self__.ajax_opts,self__.curr_xhr_,self__.__meta,self__.__extmap,null));\n} else {\nif(cljs.core.truth_((pred__43932.cljs$core$IFn$_invoke$arity$2 ? pred__43932.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\"instance-handle_\",\"instance-handle_\",-1923384457),expr__43933) : pred__43932.call(null,new cljs.core.Keyword(null,\"instance-handle_\",\"instance-handle_\",-1923384457),expr__43933)))){\nreturn (new taoensso.sente.ChAjaxSocket(self__.client_id,self__.chs,self__.params,self__.packer,self__.url,self__.state_,G__43922,self__.ever_opened_QMARK__,self__.backoff_ms_fn,self__.ajax_opts,self__.curr_xhr_,self__.__meta,self__.__extmap,null));\n} else {\nif(cljs.core.truth_((pred__43932.cljs$core$IFn$_invoke$arity$2 ? pred__43932.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\"ever-opened?_\",\"ever-opened?_\",1641338913),expr__43933) : pred__43932.call(null,new cljs.core.Keyword(null,\"ever-opened?_\",\"ever-opened?_\",1641338913),expr__43933)))){\nreturn (new taoensso.sente.ChAjaxSocket(self__.client_id,self__.chs,self__.params,self__.packer,self__.url,self__.state_,self__.instance_handle_,G__43922,self__.backoff_ms_fn,self__.ajax_opts,self__.curr_xhr_,self__.__meta,self__.__extmap,null));\n} else {\nif(cljs.core.truth_((pred__43932.cljs$core$IFn$_invoke$arity$2 ? pred__43932.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\"backoff-ms-fn\",\"backoff-ms-fn\",772895955),expr__43933) : pred__43932.call(null,new cljs.core.Keyword(null,\"backoff-ms-fn\",\"backoff-ms-fn\",772895955),expr__43933)))){\nreturn (new taoensso.sente.ChAjaxSocket(self__.client_id,self__.chs,self__.params,self__.packer,self__.url,self__.state_,self__.instance_handle_,self__.ever_opened_QMARK__,G__43922,self__.ajax_opts,self__.curr_xhr_,self__.__meta,self__.__extmap,null));\n} else {\nif(cljs.core.truth_((pred__43932.cljs$core$IFn$_invoke$arity$2 ? pred__43932.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\"ajax-opts\",\"ajax-opts\",-518239109),expr__43933) : pred__43932.call(null,new cljs.core.Keyword(null,\"ajax-opts\",\"ajax-opts\",-518239109),expr__43933)))){\nreturn (new taoensso.sente.ChAjaxSocket(self__.client_id,self__.chs,self__.params,self__.packer,self__.url,self__.state_,self__.instance_handle_,self__.ever_opened_QMARK__,self__.backoff_ms_fn,G__43922,self__.curr_xhr_,self__.__meta,self__.__extmap,null));\n} else {\nif(cljs.core.truth_((pred__43932.cljs$core$IFn$_invoke$arity$2 ? pred__43932.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\"curr-xhr_\",\"curr-xhr_\",-1318773696),expr__43933) : pred__43932.call(null,new cljs.core.Keyword(null,\"curr-xhr_\",\"curr-xhr_\",-1318773696),expr__43933)))){\nreturn (new taoensso.sente.ChAjaxSocket(self__.client_id,self__.chs,self__.params,self__.packer,self__.url,self__.state_,self__.instance_handle_,self__.ever_opened_QMARK__,self__.backoff_ms_fn,self__.ajax_opts,G__43922,self__.__meta,self__.__extmap,null));\n} else {\nreturn (new taoensso.sente.ChAjaxSocket(self__.client_id,self__.chs,self__.params,self__.packer,self__.url,self__.state_,self__.instance_handle_,self__.ever_opened_QMARK__,self__.backoff_ms_fn,self__.ajax_opts,self__.curr_xhr_,self__.__meta,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.__extmap,k__4388__auto__,G__43922),null));\n}\n}\n}\n}\n}\n}\n}\n}\n}\n}\n}\n}));\n\n(taoensso.sente.ChAjaxSocket.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (this__4392__auto__){\nvar self__ = this;\nvar this__4392__auto____$1 = this;\nreturn cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(new cljs.core.PersistentVector(null, 11, 5, cljs.core.PersistentVector.EMPTY_NODE, [(new cljs.core.MapEntry(new cljs.core.Keyword(null,\"client-id\",\"client-id\",-464622140),self__.client_id,null)),(new cljs.core.MapEntry(new cljs.core.Keyword(null,\"chs\",\"chs\",376886120),self__.chs,null)),(new cljs.core.MapEntry(new cljs.core.Keyword(null,\"params\",\"params\",710516235),self__.params,null)),(new cljs.core.MapEntry(new cljs.core.Keyword(null,\"packer\",\"packer\",66077544),self__.packer,null)),(new cljs.core.MapEntry(new cljs.core.Keyword(null,\"url\",\"url\",276297046),self__.url,null)),(new cljs.core.MapEntry(new cljs.core.Keyword(null,\"state_\",\"state_\",957667102),self__.state_,null)),(new cljs.core.MapEntry(new cljs.core.Keyword(null,\"instance-handle_\",\"instance-handle_\",-1923384457),self__.instance_handle_,null)),(new cljs.core.MapEntry(new cljs.core.Keyword(null,\"ever-opened?_\",\"ever-opened?_\",1641338913),self__.ever_opened_QMARK__,null)),(new cljs.core.MapEntry(new cljs.core.Keyword(null,\"backoff-ms-fn\",\"backoff-ms-fn\",772895955),self__.backoff_ms_fn,null)),(new cljs.core.MapEntry(new cljs.core.Keyword(null,\"ajax-opts\",\"ajax-opts\",-518239109),self__.ajax_opts,null)),(new cljs.core.MapEntry(new cljs.core.Keyword(null,\"curr-xhr_\",\"curr-xhr_\",-1318773696),self__.curr_xhr_,null))], null),self__.__extmap));\n}));\n\n(taoensso.sente.ChAjaxSocket.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (this__4379__auto__,G__43922){\nvar self__ = this;\nvar this__4379__auto____$1 = this;\nreturn (new taoensso.sente.ChAjaxSocket(self__.client_id,self__.chs,self__.params,self__.packer,self__.url,self__.state_,self__.instance_handle_,self__.ever_opened_QMARK__,self__.backoff_ms_fn,self__.ajax_opts,self__.curr_xhr_,G__43922,self__.__extmap,self__.__hash));\n}));\n\n(taoensso.sente.ChAjaxSocket.prototype.cljs$core$ICollection$_conj$arity$2 = (function (this__4385__auto__,entry__4386__auto__){\nvar self__ = this;\nvar this__4385__auto____$1 = this;\nif(cljs.core.vector_QMARK_(entry__4386__auto__)){\nreturn this__4385__auto____$1.cljs$core$IAssociative$_assoc$arity$3(null,cljs.core._nth(entry__4386__auto__,(0)),cljs.core._nth(entry__4386__auto__,(1)));\n} else {\nreturn cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj,this__4385__auto____$1,entry__4386__auto__);\n}\n}));\n\n(taoensso.sente.ChAjaxSocket.prototype.taoensso$sente$IChSocket$ = cljs.core.PROTOCOL_SENTINEL);\n\n(taoensso.sente.ChAjaxSocket.prototype.taoensso$sente$IChSocket$_chsk_disconnect_BANG_$arity$2 = (function (chsk,reason){\nvar self__ = this;\nvar chsk__$1 = this;\ncljs.core.reset_BANG_(self__.instance_handle_,null);\n\ntaoensso.sente.swap_chsk_state_BANG_(chsk__$1,(function (p1__43916_SHARP_){\nreturn taoensso.sente.chsk_state__GT_closed(p1__43916_SHARP_,reason);\n}));\n\nvar temp__5735__auto__ = cljs.core.deref(self__.curr_xhr_);\nif(cljs.core.truth_(temp__5735__auto__)){\nvar x = temp__5735__auto__;\nreturn x.abort();\n} else {\nreturn null;\n}\n}));\n\n(taoensso.sente.ChAjaxSocket.prototype.taoensso$sente$IChSocket$_chsk_reconnect_BANG_$arity$1 = (function (chsk){\nvar self__ = this;\nvar chsk__$1 = this;\nchsk__$1.taoensso$sente$IChSocket$_chsk_disconnect_BANG_$arity$2(null,new cljs.core.Keyword(null,\"requested-reconnect\",\"requested-reconnect\",2008347707));\n\nreturn chsk__$1.taoensso$sente$IChSocket$_chsk_connect_BANG_$arity$1(null);\n}));\n\n(taoensso.sente.ChAjaxSocket.prototype.taoensso$sente$IChSocket$_chsk_send_BANG_$arity$3 = (function (chsk,ev,opts){\nvar self__ = this;\nvar chsk__$1 = this;\nvar map__43935 = opts;\nvar map__43935__$1 = (((((!((map__43935 == null))))?(((((map__43935.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__43935.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__43935):map__43935);\nvar _QMARK_timeout_ms = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__43935__$1,new cljs.core.Keyword(null,\"timeout-ms\",\"timeout-ms\",754221406));\nvar _QMARK_cb = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__43935__$1,new cljs.core.Keyword(null,\"cb\",\"cb\",589947841));\nvar flush_QMARK_ = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__43935__$1,new cljs.core.Keyword(null,\"flush?\",\"flush?\",-108887231));\nvar _ = taoensso.sente.assert_send_args(ev,_QMARK_timeout_ms,_QMARK_cb);\nvar _QMARK_cb_fn = taoensso.sente.cb_chan_as_fn(_QMARK_cb,ev);\nif(cljs.core.not(new cljs.core.Keyword(null,\"open?\",\"open?\",1238443125).cljs$core$IFn$_invoke$arity$1(cljs.core.deref(self__.state_)))){\nreturn taoensso.sente.chsk_send__GT_closed_BANG_(_QMARK_cb_fn);\n} else {\nvar csrf_token = new cljs.core.Keyword(null,\"csrf-token\",\"csrf-token\",-1872302856).cljs$core$IFn$_invoke$arity$1(cljs.core.deref(self__.state_));\nvar G__43937_44378 = self__.url;\nvar G__43938_44379 = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([self__.ajax_opts,new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null,\"method\",\"method\",55703592),new cljs.core.Keyword(null,\"post\",\"post\",269697687),new cljs.core.Keyword(null,\"timeout-ms\",\"timeout-ms\",754221406),(function (){var or__4126__auto__ = _QMARK_timeout_ms;\nif(cljs.core.truth_(or__4126__auto__)){\nreturn or__4126__auto__;\n} else {\nvar or__4126__auto____$1 = new cljs.core.Keyword(null,\"timeout-ms\",\"timeout-ms\",754221406).cljs$core$IFn$_invoke$arity$1(self__.ajax_opts);\nif(cljs.core.truth_(or__4126__auto____$1)){\nreturn or__4126__auto____$1;\n} else {\nreturn taoensso.sente.default_client_side_ajax_timeout_ms;\n}\n}\n})(),new cljs.core.Keyword(null,\"resp-type\",\"resp-type\",1050675962),new cljs.core.Keyword(null,\"text\",\"text\",-1790561697),new cljs.core.Keyword(null,\"headers\",\"headers\",-835030129),cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([new cljs.core.Keyword(null,\"headers\",\"headers\",-835030129).cljs$core$IFn$_invoke$arity$1(self__.ajax_opts),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"X-CSRF-Token\",\"X-CSRF-Token\",1562992453),csrf_token], null)], 0)),new cljs.core.Keyword(null,\"params\",\"params\",710516235),(function (){var ppstr = taoensso.sente.pack.cljs$core$IFn$_invoke$arity$3(self__.packer,ev,(cljs.core.truth_(_QMARK_cb_fn)?new cljs.core.Keyword(null,\"ajax-cb\",\"ajax-cb\",-807060321):null));\nreturn cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([self__.params,new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null,\"udt\",\"udt\",2011712751),taoensso.encore.now_udt(),new cljs.core.Keyword(null,\"csrf-token\",\"csrf-token\",-1872302856),csrf_token,new cljs.core.Keyword(null,\"client-id\",\"client-id\",-464622140),self__.client_id,new cljs.core.Keyword(null,\"ppstr\",\"ppstr\",1557495252),ppstr], null)], 0));\n})()], null)], 0));\nvar G__43939_44380 = (function taoensso$sente$ajax_cb(p__43940){\nvar map__43941 = p__43940;\nvar map__43941__$1 = (((((!((map__43941 == null))))?(((((map__43941.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__43941.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__43941):map__43941);\nvar _QMARK_error = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__43941__$1,new cljs.core.Keyword(null,\"?error\",\"?error\",1070752222));\nvar _QMARK_content = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__43941__$1,new cljs.core.Keyword(null,\"?content\",\"?content\",1697782054));\nif(cljs.core.truth_(_QMARK_error)){\nif(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(_QMARK_error,new cljs.core.Keyword(null,\"timeout\",\"timeout\",-318625318))){\nif(cljs.core.truth_(_QMARK_cb_fn)){\nreturn (_QMARK_cb_fn.cljs$core$IFn$_invoke$arity$1 ? _QMARK_cb_fn.cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(\"chsk\",\"timeout\",\"chsk/timeout\",-319776489)) : _QMARK_cb_fn.call(null,new cljs.core.Keyword(\"chsk\",\"timeout\",\"chsk/timeout\",-319776489)));\n} else {\nreturn null;\n}\n} else {\ntaoensso.sente.swap_chsk_state_BANG_(chsk__$1,(function (p1__43917_SHARP_){\nreturn taoensso.sente.chsk_state__GT_closed(p1__43917_SHARP_,new cljs.core.Keyword(null,\"unexpected\",\"unexpected\",-1137752424));\n}));\n\nif(cljs.core.truth_(_QMARK_cb_fn)){\nreturn (_QMARK_cb_fn.cljs$core$IFn$_invoke$arity$1 ? _QMARK_cb_fn.cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(\"chsk\",\"error\",\"chsk/error\",-984175439)) : _QMARK_cb_fn.call(null,new cljs.core.Keyword(\"chsk\",\"error\",\"chsk/error\",-984175439)));\n} else {\nreturn null;\n}\n}\n} else {\nvar content = _QMARK_content;\nvar resp_ppstr = content;\nvar vec__43943 = taoensso.sente.unpack(self__.packer,resp_ppstr);\nvar resp_clj = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__43943,(0),null);\nvar ___$1 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__43943,(1),null);\nif(cljs.core.truth_(_QMARK_cb_fn)){\n(_QMARK_cb_fn.cljs$core$IFn$_invoke$arity$1 ? _QMARK_cb_fn.cljs$core$IFn$_invoke$arity$1(resp_clj) : _QMARK_cb_fn.call(null,resp_clj));\n} else {\nif(cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2(resp_clj,new cljs.core.Keyword(\"chsk\",\"dummy-cb-200\",\"chsk/dummy-cb-200\",-1663130337))){\ntaoensso.timbre._log_BANG_.cljs$core$IFn$_invoke$arity$10(taoensso.timbre._STAR_config_STAR_,new cljs.core.Keyword(null,\"warn\",\"warn\",-436710552),\"taoensso.sente\",null,1203,new cljs.core.Keyword(null,\"f\",\"f\",-1597136552),new cljs.core.Keyword(null,\"auto\",\"auto\",-566279492),(new cljs.core.Delay((function (){\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [\"Cb reply w/o local cb-fn: %s\",resp_clj], null);\n}),null)),null,-2125996226);\n} else {\n}\n}\n\nreturn taoensso.sente.swap_chsk_state_BANG_(chsk__$1,(function (p1__43918_SHARP_){\nreturn cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(p1__43918_SHARP_,new cljs.core.Keyword(null,\"open?\",\"open?\",1238443125),true);\n}));\n}\n});\n(taoensso.sente.ajax_lite.cljs$core$IFn$_invoke$arity$3 ? taoensso.sente.ajax_lite.cljs$core$IFn$_invoke$arity$3(G__43937_44378,G__43938_44379,G__43939_44380) : taoensso.sente.ajax_lite.call(null,G__43937_44378,G__43938_44379,G__43939_44380));\n\nreturn new cljs.core.Keyword(null,\"apparent-success\",\"apparent-success\",242592222);\n}\n}));\n\n(taoensso.sente.ChAjaxSocket.prototype.taoensso$sente$IChSocket$_chsk_connect_BANG_$arity$1 = (function (chsk){\nvar self__ = this;\nvar chsk__$1 = this;\nvar instance_handle = cljs.core.reset_BANG_(self__.instance_handle_,taoensso.encore.uuid_str.cljs$core$IFn$_invoke$arity$0());\nvar have_handle_QMARK_ = (function (){\nreturn cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.deref(self__.instance_handle_),instance_handle);\n});\nvar poll_fn = (function taoensso$sente$poll_fn(retry_count){\ntaoensso.timbre._log_BANG_.cljs$core$IFn$_invoke$arity$10(taoensso.timbre._STAR_config_STAR_,new cljs.core.Keyword(null,\"trace\",\"trace\",-1082747415),\"taoensso.sente\",null,1213,new cljs.core.Keyword(null,\"f\",\"f\",-1597136552),new cljs.core.Keyword(null,\"auto\",\"auto\",-566279492),(new cljs.core.Delay((function (){\nreturn new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [\"async-poll-for-update!\"], null);\n}),null)),null,-1189413022);\n\nif(have_handle_QMARK_()){\nvar retry_fn = (function (){\nif(have_handle_QMARK_()){\nvar retry_count_STAR_ = (retry_count + (1));\nvar backoff_ms = (self__.backoff_ms_fn.cljs$core$IFn$_invoke$arity$1 ? self__.backoff_ms_fn.cljs$core$IFn$_invoke$arity$1(retry_count_STAR_) : self__.backoff_ms_fn.call(null,retry_count_STAR_));\nvar udt_next_reconnect = (taoensso.encore.now_udt() + backoff_ms);\ntaoensso.timbre._log_BANG_.cljs$core$IFn$_invoke$arity$10(taoensso.timbre._STAR_config_STAR_,new cljs.core.Keyword(null,\"warn\",\"warn\",-436710552),\"taoensso.sente\",null,1221,new cljs.core.Keyword(null,\"f\",\"f\",-1597136552),new cljs.core.Keyword(null,\"auto\",\"auto\",-566279492),(new cljs.core.Delay((function (){\nreturn new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [\"Chsk is closed: will try reconnect attempt (%s) in %s ms\",retry_count_STAR_,backoff_ms], null);\n}),null)),null,-302260190);\n\ngoog.global.setTimeout((function (){\nreturn taoensso$sente$poll_fn(retry_count_STAR_);\n}),backoff_ms);\n\nreturn taoensso.sente.swap_chsk_state_BANG_(chsk__$1,(function (p1__43919_SHARP_){\nreturn cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(p1__43919_SHARP_,new cljs.core.Keyword(null,\"udt-next-reconnect\",\"udt-next-reconnect\",-1990375733),udt_next_reconnect);\n}));\n} else {\nreturn null;\n}\n});\nreturn cljs.core.reset_BANG_(self__.curr_xhr_,(function (){var G__43946 = self__.url;\nvar G__43947 = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([self__.ajax_opts,new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null,\"method\",\"method\",55703592),new cljs.core.Keyword(null,\"get\",\"get\",1683182755),new cljs.core.Keyword(null,\"timeout-ms\",\"timeout-ms\",754221406),(function (){var or__4126__auto__ = new cljs.core.Keyword(null,\"timeout-ms\",\"timeout-ms\",754221406).cljs$core$IFn$_invoke$arity$1(self__.ajax_opts);\nif(cljs.core.truth_(or__4126__auto__)){\nreturn or__4126__auto__;\n} else {\nreturn taoensso.sente.default_client_side_ajax_timeout_ms;\n}\n})(),new cljs.core.Keyword(null,\"resp-type\",\"resp-type\",1050675962),new cljs.core.Keyword(null,\"text\",\"text\",-1790561697),new cljs.core.Keyword(null,\"params\",\"params\",710516235),cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([self__.params,new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\"udt\",\"udt\",2011712751),taoensso.encore.now_udt(),new cljs.core.Keyword(null,\"client-id\",\"client-id\",-464622140),self__.client_id], null),(cljs.core.truth_(new cljs.core.Keyword(null,\"open?\",\"open?\",1238443125).cljs$core$IFn$_invoke$arity$1(cljs.core.deref(self__.state_)))?null:new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"handshake?\",\"handshake?\",-423743093),true], null))], 0))], null)], 0));\nvar G__43948 = (function taoensso$sente$poll_fn_$_ajax_cb(p__43949){\nvar map__43950 = p__43949;\nvar map__43950__$1 = (((((!((map__43950 == null))))?(((((map__43950.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__43950.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__43950):map__43950);\nvar _QMARK_error = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__43950__$1,new cljs.core.Keyword(null,\"?error\",\"?error\",1070752222));\nvar _QMARK_content = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__43950__$1,new cljs.core.Keyword(null,\"?content\",\"?content\",1697782054));\nif(cljs.core.truth_(_QMARK_error)){\nif(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(_QMARK_error,new cljs.core.Keyword(null,\"timeout\",\"timeout\",-318625318))){\nreturn taoensso$sente$poll_fn((0));\n} else {\ntaoensso.sente.swap_chsk_state_BANG_(chsk__$1,(function (p1__43920_SHARP_){\nreturn taoensso.sente.chsk_state__GT_closed(p1__43920_SHARP_,new cljs.core.Keyword(null,\"unexpected\",\"unexpected\",-1137752424));\n}));\n\nreturn retry_fn();\n\n}\n} else {\nvar content = _QMARK_content;\nvar ppstr = content;\nvar vec__43952 = taoensso.sente.unpack(self__.packer,ppstr);\nvar clj = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__43952,(0),null);\nvar handshake_QMARK_ = taoensso.sente.handshake_QMARK_(clj);\nif(handshake_QMARK_){\ntaoensso.sente.receive_handshake_BANG_(new cljs.core.Keyword(null,\"ajax\",\"ajax\",814345549),chsk__$1,clj);\n} else {\n}\n\ntaoensso.sente.swap_chsk_state_BANG_(chsk__$1,(function (p1__43921_SHARP_){\nreturn cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(p1__43921_SHARP_,new cljs.core.Keyword(null,\"open?\",\"open?\",1238443125),true);\n}));\n\ntaoensso$sente$poll_fn((0));\n\nif(handshake_QMARK_){\nreturn null;\n} else {\nvar or__4126__auto__ = ((cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(clj,new cljs.core.Keyword(\"chsk\",\"timeout\",\"chsk/timeout\",-319776489)))?(function (){\nif(cljs.core.truth_(cljs.core.deref(taoensso.sente.debug_mode_QMARK__))){\ntaoensso.sente.receive_buffered_evs_BANG_(self__.chs,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"debug\",\"timeout\",\"debug/timeout\",309499949)], null)], null));\n} else {\n}\n\nreturn new cljs.core.Keyword(null,\"noop\",\"noop\",-673731258);\n})()\n:null);\nif(cljs.core.truth_(or__4126__auto__)){\nreturn or__4126__auto__;\n} else {\nvar buffered_evs = clj;\nreturn taoensso.sente.receive_buffered_evs_BANG_(self__.chs,buffered_evs);\n}\n}\n}\n});\nreturn (taoensso.sente.ajax_lite.cljs$core$IFn$_invoke$arity$3 ? taoensso.sente.ajax_lite.cljs$core$IFn$_invoke$arity$3(G__43946,G__43947,G__43948) : taoensso.sente.ajax_lite.call(null,G__43946,G__43947,G__43948));\n})());\n} else {\nreturn null;\n}\n});\npoll_fn((0));\n\nreturn chsk__$1;\n}));\n\n(taoensso.sente.ChAjaxSocket.getBasis = (function (){\nreturn new cljs.core.PersistentVector(null, 11, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"client-id\",\"client-id\",1175909387,null),new cljs.core.Symbol(null,\"chs\",\"chs\",2017417647,null),new cljs.core.Symbol(null,\"params\",\"params\",-1943919534,null),new cljs.core.Symbol(null,\"packer\",\"packer\",1706609071,null),new cljs.core.Symbol(null,\"url\",\"url\",1916828573,null),new cljs.core.Symbol(null,\"state_\",\"state_\",-1696768667,null),new cljs.core.Symbol(null,\"instance-handle_\",\"instance-handle_\",-282852930,null),new cljs.core.Symbol(null,\"ever-opened?_\",\"ever-opened?_\",-1013096856,null),new cljs.core.Symbol(null,\"backoff-ms-fn\",\"backoff-ms-fn\",-1881539814,null),new cljs.core.Symbol(null,\"ajax-opts\",\"ajax-opts\",1122292418,null),new cljs.core.Symbol(null,\"curr-xhr_\",\"curr-xhr_\",321757831,null)], null);\n}));\n\n(taoensso.sente.ChAjaxSocket.cljs$lang$type = true);\n\n(taoensso.sente.ChAjaxSocket.cljs$lang$ctorPrSeq = (function (this__4423__auto__){\nreturn (new cljs.core.List(null,\"taoensso.sente/ChAjaxSocket\",null,(1),null));\n}));\n\n(taoensso.sente.ChAjaxSocket.cljs$lang$ctorPrWriter = (function (this__4423__auto__,writer__4424__auto__){\nreturn cljs.core._write(writer__4424__auto__,\"taoensso.sente/ChAjaxSocket\");\n}));\n\n/**\n * Positional factory function for taoensso.sente/ChAjaxSocket.\n */\ntaoensso.sente.__GT_ChAjaxSocket = (function taoensso$sente$__GT_ChAjaxSocket(client_id,chs,params,packer,url,state_,instance_handle_,ever_opened_QMARK__,backoff_ms_fn,ajax_opts,curr_xhr_){\nreturn (new taoensso.sente.ChAjaxSocket(client_id,chs,params,packer,url,state_,instance_handle_,ever_opened_QMARK__,backoff_ms_fn,ajax_opts,curr_xhr_,null,null,null));\n});\n\n/**\n * Factory function for taoensso.sente/ChAjaxSocket, taking a map of keywords to field values.\n */\ntaoensso.sente.map__GT_ChAjaxSocket = (function taoensso$sente$map__GT_ChAjaxSocket(G__43926){\nvar extmap__4419__auto__ = (function (){var G__43955 = cljs.core.dissoc.cljs$core$IFn$_invoke$arity$variadic(G__43926,new cljs.core.Keyword(null,\"client-id\",\"client-id\",-464622140),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([new cljs.core.Keyword(null,\"chs\",\"chs\",376886120),new cljs.core.Keyword(null,\"params\",\"params\",710516235),new cljs.core.Keyword(null,\"packer\",\"packer\",66077544),new cljs.core.Keyword(null,\"url\",\"url\",276297046),new cljs.core.Keyword(null,\"state_\",\"state_\",957667102),new cljs.core.Keyword(null,\"instance-handle_\",\"instance-handle_\",-1923384457),new cljs.core.Keyword(null,\"ever-opened?_\",\"ever-opened?_\",1641338913),new cljs.core.Keyword(null,\"backoff-ms-fn\",\"backoff-ms-fn\",772895955),new cljs.core.Keyword(null,\"ajax-opts\",\"ajax-opts\",-518239109),new cljs.core.Keyword(null,\"curr-xhr_\",\"curr-xhr_\",-1318773696)], 0));\nif(cljs.core.record_QMARK_(G__43926)){\nreturn cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentArrayMap.EMPTY,G__43955);\n} else {\nreturn G__43955;\n}\n})();\nreturn (new taoensso.sente.ChAjaxSocket(new cljs.core.Keyword(null,\"client-id\",\"client-id\",-464622140).cljs$core$IFn$_invoke$arity$1(G__43926),new cljs.core.Keyword(null,\"chs\",\"chs\",376886120).cljs$core$IFn$_invoke$arity$1(G__43926),new cljs.core.Keyword(null,\"params\",\"params\",710516235).cljs$core$IFn$_invoke$arity$1(G__43926),new cljs.core.Keyword(null,\"packer\",\"packer\",66077544).cljs$core$IFn$_invoke$arity$1(G__43926),new cljs.core.Keyword(null,\"url\",\"url\",276297046).cljs$core$IFn$_invoke$arity$1(G__43926),new cljs.core.Keyword(null,\"state_\",\"state_\",957667102).cljs$core$IFn$_invoke$arity$1(G__43926),new cljs.core.Keyword(null,\"instance-handle_\",\"instance-handle_\",-1923384457).cljs$core$IFn$_invoke$arity$1(G__43926),new cljs.core.Keyword(null,\"ever-opened?_\",\"ever-opened?_\",1641338913).cljs$core$IFn$_invoke$arity$1(G__43926),new cljs.core.Keyword(null,\"backoff-ms-fn\",\"backoff-ms-fn\",772895955).cljs$core$IFn$_invoke$arity$1(G__43926),new cljs.core.Keyword(null,\"ajax-opts\",\"ajax-opts\",-518239109).cljs$core$IFn$_invoke$arity$1(G__43926),new cljs.core.Keyword(null,\"curr-xhr_\",\"curr-xhr_\",-1318773696).cljs$core$IFn$_invoke$arity$1(G__43926),null,cljs.core.not_empty(extmap__4419__auto__),null));\n});\n\ntaoensso.sente.new_ChAjaxSocket = (function taoensso$sente$new_ChAjaxSocket(opts){\nreturn taoensso.sente.map__GT_ChAjaxSocket(cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null,\"state_\",\"state_\",957667102),cljs.core.atom.cljs$core$IFn$_invoke$arity$1(new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,\"type\",\"type\",1174270348),new cljs.core.Keyword(null,\"ajax\",\"ajax\",814345549),new cljs.core.Keyword(null,\"open?\",\"open?\",1238443125),false,new cljs.core.Keyword(null,\"ever-opened?\",\"ever-opened?\",1128459732),false], null)),new cljs.core.Keyword(null,\"instance-handle_\",\"instance-handle_\",-1923384457),cljs.core.atom.cljs$core$IFn$_invoke$arity$1(null),new cljs.core.Keyword(null,\"ever-opened?_\",\"ever-opened?_\",1641338913),cljs.core.atom.cljs$core$IFn$_invoke$arity$1(false),new cljs.core.Keyword(null,\"curr-xhr_\",\"curr-xhr_\",-1318773696),cljs.core.atom.cljs$core$IFn$_invoke$arity$1(null)], null),opts], 0)));\n});\n\n/**\n* @constructor\n * @implements {cljs.core.IRecord}\n * @implements {cljs.core.IKVReduce}\n * @implements {cljs.core.IEquiv}\n * @implements {cljs.core.IHash}\n * @implements {cljs.core.ICollection}\n * @implements {cljs.core.ICounted}\n * @implements {cljs.core.ISeqable}\n * @implements {cljs.core.IMeta}\n * @implements {cljs.core.ICloneable}\n * @implements {cljs.core.IPrintWithWriter}\n * @implements {cljs.core.IIterable}\n * @implements {cljs.core.IWithMeta}\n * @implements {cljs.core.IAssociative}\n * @implements {taoensso.sente.IChSocket}\n * @implements {cljs.core.IMap}\n * @implements {cljs.core.ILookup}\n*/\ntaoensso.sente.ChAutoSocket = (function (ws_chsk_opts,ajax_chsk_opts,state_,impl_,__meta,__extmap,__hash){\nthis.ws_chsk_opts = ws_chsk_opts;\nthis.ajax_chsk_opts = ajax_chsk_opts;\nthis.state_ = state_;\nthis.impl_ = impl_;\nthis.__meta = __meta;\nthis.__extmap = __extmap;\nthis.__hash = __hash;\nthis.cljs$lang$protocol_mask$partition0$ = 2230716170;\nthis.cljs$lang$protocol_mask$partition1$ = 139264;\n});\n(taoensso.sente.ChAutoSocket.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (this__4380__auto__,k__4381__auto__){\nvar self__ = this;\nvar this__4380__auto____$1 = this;\nreturn this__4380__auto____$1.cljs$core$ILookup$_lookup$arity$3(null,k__4381__auto__,null);\n}));\n\n(taoensso.sente.ChAutoSocket.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (this__4382__auto__,k43957,else__4383__auto__){\nvar self__ = this;\nvar this__4382__auto____$1 = this;\nvar G__43961 = k43957;\nvar G__43961__$1 = (((G__43961 instanceof cljs.core.Keyword))?G__43961.fqn:null);\nswitch (G__43961__$1) {\ncase \"ws-chsk-opts\":\nreturn self__.ws_chsk_opts;\n\nbreak;\ncase \"ajax-chsk-opts\":\nreturn self__.ajax_chsk_opts;\n\nbreak;\ncase \"state_\":\nreturn self__.state_;\n\nbreak;\ncase \"impl_\":\nreturn self__.impl_;\n\nbreak;\ndefault:\nreturn cljs.core.get.cljs$core$IFn$_invoke$arity$3(self__.__extmap,k43957,else__4383__auto__);\n\n}\n}));\n\n(taoensso.sente.ChAutoSocket.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = (function (this__4399__auto__,f__4400__auto__,init__4401__auto__){\nvar self__ = this;\nvar this__4399__auto____$1 = this;\nreturn cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (ret__4402__auto__,p__43962){\nvar vec__43963 = p__43962;\nvar k__4403__auto__ = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__43963,(0),null);\nvar v__4404__auto__ = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__43963,(1),null);\nreturn (f__4400__auto__.cljs$core$IFn$_invoke$arity$3 ? f__4400__auto__.cljs$core$IFn$_invoke$arity$3(ret__4402__auto__,k__4403__auto__,v__4404__auto__) : f__4400__auto__.call(null,ret__4402__auto__,k__4403__auto__,v__4404__auto__));\n}),init__4401__auto__,this__4399__auto____$1);\n}));\n\n(taoensso.sente.ChAutoSocket.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (this__4394__auto__,writer__4395__auto__,opts__4396__auto__){\nvar self__ = this;\nvar this__4394__auto____$1 = this;\nvar pr_pair__4397__auto__ = (function (keyval__4398__auto__){\nreturn cljs.core.pr_sequential_writer(writer__4395__auto__,cljs.core.pr_writer,\"\",\" \",\"\",opts__4396__auto__,keyval__4398__auto__);\n});\nreturn cljs.core.pr_sequential_writer(writer__4395__auto__,pr_pair__4397__auto__,\"#taoensso.sente.ChAutoSocket{\",\", \",\"}\",opts__4396__auto__,cljs.core.concat.cljs$core$IFn$_invoke$arity$2(new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [(new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[new cljs.core.Keyword(null,\"ws-chsk-opts\",\"ws-chsk-opts\",-1990170104),self__.ws_chsk_opts],null)),(new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[new cljs.core.Keyword(null,\"ajax-chsk-opts\",\"ajax-chsk-opts\",1602591327),self__.ajax_chsk_opts],null)),(new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[new cljs.core.Keyword(null,\"state_\",\"state_\",957667102),self__.state_],null)),(new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[new cljs.core.Keyword(null,\"impl_\",\"impl_\",1218818179),self__.impl_],null))], null),self__.__extmap));\n}));\n\n(taoensso.sente.ChAutoSocket.prototype.cljs$core$IIterable$_iterator$arity$1 = (function (G__43956){\nvar self__ = this;\nvar G__43956__$1 = this;\nreturn (new cljs.core.RecordIter((0),G__43956__$1,4,new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"ws-chsk-opts\",\"ws-chsk-opts\",-1990170104),new cljs.core.Keyword(null,\"ajax-chsk-opts\",\"ajax-chsk-opts\",1602591327),new cljs.core.Keyword(null,\"state_\",\"state_\",957667102),new cljs.core.Keyword(null,\"impl_\",\"impl_\",1218818179)], null),(cljs.core.truth_(self__.__extmap)?cljs.core._iterator(self__.__extmap):cljs.core.nil_iter())));\n}));\n\n(taoensso.sente.ChAutoSocket.prototype.cljs$core$IMeta$_meta$arity$1 = (function (this__4378__auto__){\nvar self__ = this;\nvar this__4378__auto____$1 = this;\nreturn self__.__meta;\n}));\n\n(taoensso.sente.ChAutoSocket.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (this__4375__auto__){\nvar self__ = this;\nvar this__4375__auto____$1 = this;\nreturn (new taoensso.sente.ChAutoSocket(self__.ws_chsk_opts,self__.ajax_chsk_opts,self__.state_,self__.impl_,self__.__meta,self__.__extmap,self__.__hash));\n}));\n\n(taoensso.sente.ChAutoSocket.prototype.cljs$core$ICounted$_count$arity$1 = (function (this__4384__auto__){\nvar self__ = this;\nvar this__4384__auto____$1 = this;\nreturn (4 + cljs.core.count(self__.__extmap));\n}));\n\n(taoensso.sente.ChAutoSocket.prototype.cljs$core$IHash$_hash$arity$1 = (function (this__4376__auto__){\nvar self__ = this;\nvar this__4376__auto____$1 = this;\nvar h__4238__auto__ = self__.__hash;\nif((!((h__4238__auto__ == null)))){\nreturn h__4238__auto__;\n} else {\nvar h__4238__auto____$1 = (function (coll__4377__auto__){\nreturn (-1193508708 ^ cljs.core.hash_unordered_coll(coll__4377__auto__));\n})(this__4376__auto____$1);\n(self__.__hash = h__4238__auto____$1);\n\nreturn h__4238__auto____$1;\n}\n}));\n\n(taoensso.sente.ChAutoSocket.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (this43958,other43959){\nvar self__ = this;\nvar this43958__$1 = this;\nreturn (((!((other43959 == null)))) && ((this43958__$1.constructor === other43959.constructor)) && (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(this43958__$1.ws_chsk_opts,other43959.ws_chsk_opts)) && (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(this43958__$1.ajax_chsk_opts,other43959.ajax_chsk_opts)) && (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(this43958__$1.state_,other43959.state_)) && (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(this43958__$1.impl_,other43959.impl_)) && (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(this43958__$1.__extmap,other43959.__extmap)));\n}));\n\n(taoensso.sente.ChAutoSocket.prototype.cljs$core$IMap$_dissoc$arity$2 = (function (this__4389__auto__,k__4390__auto__){\nvar self__ = this;\nvar this__4389__auto____$1 = this;\nif(cljs.core.contains_QMARK_(new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null,\"impl_\",\"impl_\",1218818179),null,new cljs.core.Keyword(null,\"ws-chsk-opts\",\"ws-chsk-opts\",-1990170104),null,new cljs.core.Keyword(null,\"state_\",\"state_\",957667102),null,new cljs.core.Keyword(null,\"ajax-chsk-opts\",\"ajax-chsk-opts\",1602591327),null], null), null),k__4390__auto__)){\nreturn cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(cljs.core._with_meta(cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentArrayMap.EMPTY,this__4389__auto____$1),self__.__meta),k__4390__auto__);\n} else {\nreturn (new taoensso.sente.ChAutoSocket(self__.ws_chsk_opts,self__.ajax_chsk_opts,self__.state_,self__.impl_,self__.__meta,cljs.core.not_empty(cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(self__.__extmap,k__4390__auto__)),null));\n}\n}));\n\n(taoensso.sente.ChAutoSocket.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (this__4387__auto__,k__4388__auto__,G__43956){\nvar self__ = this;\nvar this__4387__auto____$1 = this;\nvar pred__43966 = cljs.core.keyword_identical_QMARK_;\nvar expr__43967 = k__4388__auto__;\nif(cljs.core.truth_((pred__43966.cljs$core$IFn$_invoke$arity$2 ? pred__43966.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\"ws-chsk-opts\",\"ws-chsk-opts\",-1990170104),expr__43967) : pred__43966.call(null,new cljs.core.Keyword(null,\"ws-chsk-opts\",\"ws-chsk-opts\",-1990170104),expr__43967)))){\nreturn (new taoensso.sente.ChAutoSocket(G__43956,self__.ajax_chsk_opts,self__.state_,self__.impl_,self__.__meta,self__.__extmap,null));\n} else {\nif(cljs.core.truth_((pred__43966.cljs$core$IFn$_invoke$arity$2 ? pred__43966.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\"ajax-chsk-opts\",\"ajax-chsk-opts\",1602591327),expr__43967) : pred__43966.call(null,new cljs.core.Keyword(null,\"ajax-chsk-opts\",\"ajax-chsk-opts\",1602591327),expr__43967)))){\nreturn (new taoensso.sente.ChAutoSocket(self__.ws_chsk_opts,G__43956,self__.state_,self__.impl_,self__.__meta,self__.__extmap,null));\n} else {\nif(cljs.core.truth_((pred__43966.cljs$core$IFn$_invoke$arity$2 ? pred__43966.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\"state_\",\"state_\",957667102),expr__43967) : pred__43966.call(null,new cljs.core.Keyword(null,\"state_\",\"state_\",957667102),expr__43967)))){\nreturn (new taoensso.sente.ChAutoSocket(self__.ws_chsk_opts,self__.ajax_chsk_opts,G__43956,self__.impl_,self__.__meta,self__.__extmap,null));\n} else {\nif(cljs.core.truth_((pred__43966.cljs$core$IFn$_invoke$arity$2 ? pred__43966.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\"impl_\",\"impl_\",1218818179),expr__43967) : pred__43966.call(null,new cljs.core.Keyword(null,\"impl_\",\"impl_\",1218818179),expr__43967)))){\nreturn (new taoensso.sente.ChAutoSocket(self__.ws_chsk_opts,self__.ajax_chsk_opts,self__.state_,G__43956,self__.__meta,self__.__extmap,null));\n} else {\nreturn (new taoensso.sente.ChAutoSocket(self__.ws_chsk_opts,self__.ajax_chsk_opts,self__.state_,self__.impl_,self__.__meta,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.__extmap,k__4388__auto__,G__43956),null));\n}\n}\n}\n}\n}));\n\n(taoensso.sente.ChAutoSocket.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (this__4392__auto__){\nvar self__ = this;\nvar this__4392__auto____$1 = this;\nreturn cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [(new cljs.core.MapEntry(new cljs.core.Keyword(null,\"ws-chsk-opts\",\"ws-chsk-opts\",-1990170104),self__.ws_chsk_opts,null)),(new cljs.core.MapEntry(new cljs.core.Keyword(null,\"ajax-chsk-opts\",\"ajax-chsk-opts\",1602591327),self__.ajax_chsk_opts,null)),(new cljs.core.MapEntry(new cljs.core.Keyword(null,\"state_\",\"state_\",957667102),self__.state_,null)),(new cljs.core.MapEntry(new cljs.core.Keyword(null,\"impl_\",\"impl_\",1218818179),self__.impl_,null))], null),self__.__extmap));\n}));\n\n(taoensso.sente.ChAutoSocket.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (this__4379__auto__,G__43956){\nvar self__ = this;\nvar this__4379__auto____$1 = this;\nreturn (new taoensso.sente.ChAutoSocket(self__.ws_chsk_opts,self__.ajax_chsk_opts,self__.state_,self__.impl_,G__43956,self__.__extmap,self__.__hash));\n}));\n\n(taoensso.sente.ChAutoSocket.prototype.cljs$core$ICollection$_conj$arity$2 = (function (this__4385__auto__,entry__4386__auto__){\nvar self__ = this;\nvar this__4385__auto____$1 = this;\nif(cljs.core.vector_QMARK_(entry__4386__auto__)){\nreturn this__4385__auto____$1.cljs$core$IAssociative$_assoc$arity$3(null,cljs.core._nth(entry__4386__auto__,(0)),cljs.core._nth(entry__4386__auto__,(1)));\n} else {\nreturn cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj,this__4385__auto____$1,entry__4386__auto__);\n}\n}));\n\n(taoensso.sente.ChAutoSocket.prototype.taoensso$sente$IChSocket$ = cljs.core.PROTOCOL_SENTINEL);\n\n(taoensso.sente.ChAutoSocket.prototype.taoensso$sente$IChSocket$_chsk_disconnect_BANG_$arity$2 = (function (chsk,reason){\nvar self__ = this;\nvar chsk__$1 = this;\nvar temp__5735__auto__ = cljs.core.deref(self__.impl_);\nif(cljs.core.truth_(temp__5735__auto__)){\nvar impl = temp__5735__auto__;\nreturn taoensso.sente._chsk_disconnect_BANG_(impl,reason);\n} else {\nreturn null;\n}\n}));\n\n(taoensso.sente.ChAutoSocket.prototype.taoensso$sente$IChSocket$_chsk_reconnect_BANG_$arity$1 = (function (chsk){\nvar self__ = this;\nvar chsk__$1 = this;\nvar temp__5735__auto__ = cljs.core.deref(self__.impl_);\nif(cljs.core.truth_(temp__5735__auto__)){\nvar impl = temp__5735__auto__;\ntaoensso.sente._chsk_disconnect_BANG_(impl,new cljs.core.Keyword(null,\"requested-reconnect\",\"requested-reconnect\",2008347707));\n\nreturn chsk__$1.taoensso$sente$IChSocket$_chsk_connect_BANG_$arity$1(null);\n} else {\nreturn null;\n}\n}));\n\n(taoensso.sente.ChAutoSocket.prototype.taoensso$sente$IChSocket$_chsk_send_BANG_$arity$3 = (function (chsk,ev,opts){\nvar self__ = this;\nvar chsk__$1 = this;\nvar temp__5733__auto__ = cljs.core.deref(self__.impl_);\nif(cljs.core.truth_(temp__5733__auto__)){\nvar impl = temp__5733__auto__;\nreturn taoensso.sente._chsk_send_BANG_(impl,ev,opts);\n} else {\nvar map__43969 = opts;\nvar map__43969__$1 = (((((!((map__43969 == null))))?(((((map__43969.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__43969.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__43969):map__43969);\nvar _QMARK_cb = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__43969__$1,new cljs.core.Keyword(null,\"cb\",\"cb\",589947841));\nvar _QMARK_cb_fn = taoensso.sente.cb_chan_as_fn(_QMARK_cb,ev);\nreturn taoensso.sente.chsk_send__GT_closed_BANG_(_QMARK_cb_fn);\n}\n}));\n\n(taoensso.sente.ChAutoSocket.prototype.taoensso$sente$IChSocket$_chsk_connect_BANG_$arity$1 = (function (chsk){\nvar self__ = this;\nvar chsk__$1 = this;\nvar ajax_chsk_opts__$1 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.ajax_chsk_opts,new cljs.core.Keyword(null,\"state_\",\"state_\",957667102),self__.state_);\nvar ws_chsk_opts__$1 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.ws_chsk_opts,new cljs.core.Keyword(null,\"state_\",\"state_\",957667102),self__.state_);\nvar ajax_conn_BANG_ = (function (){\ncljs.core.remove_watch(self__.state_,new cljs.core.Keyword(\"chsk\",\"auto-ajax-downgrade\",\"chsk/auto-ajax-downgrade\",-831528080));\n\nreturn taoensso.sente.new_ChAjaxSocket(ajax_chsk_opts__$1).taoensso$sente$IChSocket$_chsk_connect_BANG_$arity$1(null);\n});\nvar ws_conn_BANG_ = (function (){\nvar downgraded_QMARK___44382 = cljs.core.atom.cljs$core$IFn$_invoke$arity$1(false);\ncljs.core.add_watch(self__.state_,new cljs.core.Keyword(\"chsk\",\"auto-ajax-downgrade\",\"chsk/auto-ajax-downgrade\",-831528080),(function (_,___$1,old_state,new_state){\nvar temp__5735__auto__ = cljs.core.deref(self__.impl_);\nif(cljs.core.truth_(temp__5735__auto__)){\nvar impl = temp__5735__auto__;\nvar temp__5735__auto____$1 = new cljs.core.Keyword(null,\"ever-opened?_\",\"ever-opened?_\",1641338913).cljs$core$IFn$_invoke$arity$1(impl);\nif(cljs.core.truth_(temp__5735__auto____$1)){\nvar ever_opened_QMARK__ = temp__5735__auto____$1;\nif(cljs.core.truth_(cljs.core.deref(ever_opened_QMARK__))){\nreturn null;\n} else {\nif(cljs.core.truth_(new cljs.core.Keyword(null,\"last-ws-error\",\"last-ws-error\",-820288502).cljs$core$IFn$_invoke$arity$1(new_state))){\nif(cljs.core.compare_and_set_BANG_(downgraded_QMARK___44382,false,true)){\ntaoensso.timbre._log_BANG_.cljs$core$IFn$_invoke$arity$10(taoensso.timbre._STAR_config_STAR_,new cljs.core.Keyword(null,\"warn\",\"warn\",-436710552),\"taoensso.sente\",null,1349,new cljs.core.Keyword(null,\"f\",\"f\",-1597136552),new cljs.core.Keyword(null,\"auto\",\"auto\",-566279492),(new cljs.core.Delay((function (){\nreturn new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [\"Permanently downgrading :auto chsk -> :ajax\"], null);\n}),null)),null,146483084);\n\ntaoensso.sente._chsk_disconnect_BANG_(impl,new cljs.core.Keyword(null,\"downgrading-ws-to-ajax\",\"downgrading-ws-to-ajax\",402136720));\n\nreturn cljs.core.reset_BANG_(self__.impl_,ajax_conn_BANG_());\n} else {\nreturn null;\n}\n} else {\nreturn null;\n}\n}\n} else {\nreturn null;\n}\n} else {\nreturn null;\n}\n}));\n\nreturn taoensso.sente.new_ChWebSocket(ws_chsk_opts__$1).taoensso$sente$IChSocket$_chsk_connect_BANG_$arity$1(null);\n});\ncljs.core.reset_BANG_(self__.impl_,(function (){var or__4126__auto__ = ws_conn_BANG_();\nif(cljs.core.truth_(or__4126__auto__)){\nreturn or__4126__auto__;\n} else {\nreturn ajax_conn_BANG_();\n}\n})());\n\nreturn chsk__$1;\n}));\n\n(taoensso.sente.ChAutoSocket.getBasis = (function (){\nreturn new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"ws-chsk-opts\",\"ws-chsk-opts\",-349638577,null),new cljs.core.Symbol(null,\"ajax-chsk-opts\",\"ajax-chsk-opts\",-1051844442,null),new cljs.core.Symbol(null,\"state_\",\"state_\",-1696768667,null),new cljs.core.Symbol(null,\"impl_\",\"impl_\",-1435617590,null)], null);\n}));\n\n(taoensso.sente.ChAutoSocket.cljs$lang$type = true);\n\n(taoensso.sente.ChAutoSocket.cljs$lang$ctorPrSeq = (function (this__4423__auto__){\nreturn (new cljs.core.List(null,\"taoensso.sente/ChAutoSocket\",null,(1),null));\n}));\n\n(taoensso.sente.ChAutoSocket.cljs$lang$ctorPrWriter = (function (this__4423__auto__,writer__4424__auto__){\nreturn cljs.core._write(writer__4424__auto__,\"taoensso.sente/ChAutoSocket\");\n}));\n\n/**\n * Positional factory function for taoensso.sente/ChAutoSocket.\n */\ntaoensso.sente.__GT_ChAutoSocket = (function taoensso$sente$__GT_ChAutoSocket(ws_chsk_opts,ajax_chsk_opts,state_,impl_){\nreturn (new taoensso.sente.ChAutoSocket(ws_chsk_opts,ajax_chsk_opts,state_,impl_,null,null,null));\n});\n\n/**\n * Factory function for taoensso.sente/ChAutoSocket, taking a map of keywords to field values.\n */\ntaoensso.sente.map__GT_ChAutoSocket = (function taoensso$sente$map__GT_ChAutoSocket(G__43960){\nvar extmap__4419__auto__ = (function (){var G__43971 = cljs.core.dissoc.cljs$core$IFn$_invoke$arity$variadic(G__43960,new cljs.core.Keyword(null,\"ws-chsk-opts\",\"ws-chsk-opts\",-1990170104),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([new cljs.core.Keyword(null,\"ajax-chsk-opts\",\"ajax-chsk-opts\",1602591327),new cljs.core.Keyword(null,\"state_\",\"state_\",957667102),new cljs.core.Keyword(null,\"impl_\",\"impl_\",1218818179)], 0));\nif(cljs.core.record_QMARK_(G__43960)){\nreturn cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentArrayMap.EMPTY,G__43971);\n} else {\nreturn G__43971;\n}\n})();\nreturn (new taoensso.sente.ChAutoSocket(new cljs.core.Keyword(null,\"ws-chsk-opts\",\"ws-chsk-opts\",-1990170104).cljs$core$IFn$_invoke$arity$1(G__43960),new cljs.core.Keyword(null,\"ajax-chsk-opts\",\"ajax-chsk-opts\",1602591327).cljs$core$IFn$_invoke$arity$1(G__43960),new cljs.core.Keyword(null,\"state_\",\"state_\",957667102).cljs$core$IFn$_invoke$arity$1(G__43960),new cljs.core.Keyword(null,\"impl_\",\"impl_\",1218818179).cljs$core$IFn$_invoke$arity$1(G__43960),null,cljs.core.not_empty(extmap__4419__auto__),null));\n});\n\ntaoensso.sente.new_ChAutoSocket = (function taoensso$sente$new_ChAutoSocket(opts){\nreturn taoensso.sente.map__GT_ChAutoSocket(cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\"state_\",\"state_\",957667102),cljs.core.atom.cljs$core$IFn$_invoke$arity$1(new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,\"type\",\"type\",1174270348),new cljs.core.Keyword(null,\"auto\",\"auto\",-566279492),new cljs.core.Keyword(null,\"open?\",\"open?\",1238443125),false,new cljs.core.Keyword(null,\"ever-opened?\",\"ever-opened?\",1128459732),false], null)),new cljs.core.Keyword(null,\"impl_\",\"impl_\",1218818179),cljs.core.atom.cljs$core$IFn$_invoke$arity$1(null)], null),opts], 0)));\n});\ntaoensso.sente.get_chsk_url = (function taoensso$sente$get_chsk_url(protocol,host,path,type){\nvar protocol__$1 = (function (){var G__43972 = protocol;\nvar G__43972__$1 = (((G__43972 instanceof cljs.core.Keyword))?G__43972.fqn:null);\nswitch (G__43972__$1) {\ncase \"http\":\nreturn \"http:\";\n\nbreak;\ncase \"https\":\nreturn \"https:\";\n\nbreak;\ndefault:\nreturn protocol;\n\n}\n})();\nvar protocol__$2 = (function (){var e = (function (){try{if((function (x){\nreturn cljs.core.contains_QMARK_((function (){var G__43974 = new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [\"https:\",null,\"http:\",null], null), null);\nreturn (taoensso.truss.impl.set_STAR_.cljs$core$IFn$_invoke$arity$1 ? taoensso.truss.impl.set_STAR_.cljs$core$IFn$_invoke$arity$1(G__43974) : taoensso.truss.impl.set_STAR_.call(null,G__43974));\n})(),x);\n})(protocol__$1)){\nreturn null;\n} else {\nreturn taoensso.truss.impl._dummy_error;\n}\n}catch (e43973){if((e43973 instanceof Error)){\nvar e = e43973;\nreturn e;\n} else {\nthrow e43973;\n\n}\n}})();\nif((e == null)){\nreturn protocol__$1;\n} else {\nreturn taoensso.truss.impl._invar_violation_BANG_(true,\"taoensso.sente\",1369,\"([:el #{\\\"https:\\\" \\\"http:\\\"}] protocol)\",protocol__$1,e,null);\n}\n})();\nvar protocol__$3 = (function (){var G__43975 = type;\nvar G__43975__$1 = (((G__43975 instanceof cljs.core.Keyword))?G__43975.fqn:null);\nswitch (G__43975__$1) {\ncase \"ajax\":\nreturn protocol__$2;\n\nbreak;\ncase \"ws\":\nvar G__43976 = protocol__$2;\nswitch (G__43976) {\ncase \"https:\":\nreturn \"wss:\";\n\nbreak;\ncase \"http:\":\nreturn \"ws:\";\n\nbreak;\ndefault:\nthrow (new Error([\"No matching clause: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(G__43976)].join('')));\n\n}\n\nbreak;\ndefault:\nthrow (new Error([\"No matching clause: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(G__43975__$1)].join('')));\n\n}\n})();\nreturn [cljs.core.str.cljs$core$IFn$_invoke$arity$1(protocol__$3),\"//\",taoensso.encore.path.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([host,path], 0))].join('');\n});\n/**\n * Returns nil on failure, or a map with keys:\n *     :ch-recv ; core.async channel to receive `event-msg`s (internal or from\n *              ; clients). May `put!` (inject) arbitrary `event`s to this channel.\n *     :send-fn ; (fn [event & [?timeout-ms ?cb-fn]]) for client>server send.\n *     :state   ; Watchable, read-only (atom {:type _ :open? _ :uid _ :csrf-token _}).\n *     :chsk    ; IChSocket implementer. You can usu. ignore this.\n * \n *   Common options:\n *     :type           ; e/o #{:auto :ws :ajax}. You'll usually want the default (:auto).\n *     :protocol       ; Server protocol, e/o #{:http :https}.\n *     :host           ; Server host (defaults to current page's host).\n *     :params         ; Map of any params to incl. in chsk Ring requests (handy\n *                     ; for application-level auth, etc.).\n *     :packer         ; :edn (default), or an IPacker implementation.\n *     :ajax-opts      ; Base opts map provided to `taoensso.encore/ajax-lite`.\n *     :wrap-recv-evs? ; Should events from server be wrapped in [:chsk/recv _]?\n *     :ws-kalive-ms   ; Ping to keep a WebSocket conn alive if no activity\n *                     ; w/in given msecs. Should be different to server's :ws-kalive-ms.\n */\ntaoensso.sente.make_channel_socket_client_BANG_ = (function taoensso$sente$make_channel_socket_client_BANG_(var_args){\nvar args__4742__auto__ = [];\nvar len__4736__auto___44386 = arguments.length;\nvar i__4737__auto___44387 = (0);\nwhile(true){\nif((i__4737__auto___44387 < len__4736__auto___44386)){\nargs__4742__auto__.push((arguments[i__4737__auto___44387]));\n\nvar G__44388 = (i__4737__auto___44387 + (1));\ni__4737__auto___44387 = G__44388;\ncontinue;\n} else {\n}\nbreak;\n}\n\nvar argseq__4743__auto__ = ((((1) < args__4742__auto__.length))?(new cljs.core.IndexedSeq(args__4742__auto__.slice((1)),(0),null)):null);\nreturn taoensso.sente.make_channel_socket_client_BANG_.cljs$core$IFn$_invoke$arity$variadic((arguments[(0)]),argseq__4743__auto__);\n});\n\n(taoensso.sente.make_channel_socket_client_BANG_.cljs$core$IFn$_invoke$arity$variadic = (function (path,p__43979){\nvar vec__43980 = p__43979;\nvar map__43983 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__43980,(0),null);\nvar map__43983__$1 = (((((!((map__43983 == null))))?(((((map__43983.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__43983.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__43983):map__43983);\nvar opts = map__43983__$1;\nvar ajax_opts = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__43983__$1,new cljs.core.Keyword(null,\"ajax-opts\",\"ajax-opts\",-518239109));\nvar ws_kalive_ms = cljs.core.get.cljs$core$IFn$_invoke$arity$3(map__43983__$1,new cljs.core.Keyword(null,\"ws-kalive-ms\",\"ws-kalive-ms\",1442179968),taoensso.encore.ms.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([new cljs.core.Keyword(null,\"secs\",\"secs\",1532330091),(20)], 0)));\nvar client_id = cljs.core.get.cljs$core$IFn$_invoke$arity$3(map__43983__$1,new cljs.core.Keyword(null,\"client-id\",\"client-id\",-464622140),(function (){var or__4126__auto__ = new cljs.core.Keyword(null,\"client-uuid\",\"client-uuid\",-1717531965).cljs$core$IFn$_invoke$arity$1(opts);\nif(cljs.core.truth_(or__4126__auto__)){\nreturn or__4126__auto__;\n} else {\nreturn taoensso.encore.uuid_str.cljs$core$IFn$_invoke$arity$0();\n}\n})());\nvar protocol = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__43983__$1,new cljs.core.Keyword(null,\"protocol\",\"protocol\",652470118));\nvar packer = cljs.core.get.cljs$core$IFn$_invoke$arity$3(map__43983__$1,new cljs.core.Keyword(null,\"packer\",\"packer\",66077544),new cljs.core.Keyword(null,\"edn\",\"edn\",1317840885));\nvar params = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__43983__$1,new cljs.core.Keyword(null,\"params\",\"params\",710516235));\nvar type = cljs.core.get.cljs$core$IFn$_invoke$arity$3(map__43983__$1,new cljs.core.Keyword(null,\"type\",\"type\",1174270348),new cljs.core.Keyword(null,\"auto\",\"auto\",-566279492));\nvar host = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__43983__$1,new cljs.core.Keyword(null,\"host\",\"host\",-1558485167));\nvar recv_buf_or_n = cljs.core.get.cljs$core$IFn$_invoke$arity$3(map__43983__$1,new cljs.core.Keyword(null,\"recv-buf-or-n\",\"recv-buf-or-n\",1363950355),cljs.core.async.sliding_buffer((2048)));\nvar backoff_ms_fn = cljs.core.get.cljs$core$IFn$_invoke$arity$3(map__43983__$1,new cljs.core.Keyword(null,\"backoff-ms-fn\",\"backoff-ms-fn\",772895955),taoensso.encore.exp_backoff);\nvar wrap_recv_evs_QMARK_ = cljs.core.get.cljs$core$IFn$_invoke$arity$3(map__43983__$1,new cljs.core.Keyword(null,\"wrap-recv-evs?\",\"wrap-recv-evs?\",-1996694153),true);\nvar _deprecated_more_opts = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__43980,(1),null);\nvar e_44389 = (function (){try{if((function (x){\nreturn cljs.core.contains_QMARK_((function (){var G__43986 = new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,\"ws\",\"ws\",86841443),null,new cljs.core.Keyword(null,\"ajax\",\"ajax\",814345549),null,new cljs.core.Keyword(null,\"auto\",\"auto\",-566279492),null], null), null);\nreturn (taoensso.truss.impl.set_STAR_.cljs$core$IFn$_invoke$arity$1 ? taoensso.truss.impl.set_STAR_.cljs$core$IFn$_invoke$arity$1(G__43986) : taoensso.truss.impl.set_STAR_.call(null,G__43986));\n})(),x);\n})(type)){\nreturn null;\n} else {\nreturn taoensso.truss.impl._dummy_error;\n}\n}catch (e43985){if((e43985 instanceof Error)){\nvar e_44389 = e43985;\nreturn e_44389;\n} else {\nthrow e43985;\n\n}\n}})();\nif((e_44389 == null)){\n} else {\ntaoensso.truss.impl._invar_violation_BANG_(true,\"taoensso.sente\",1411,\"([:in #{:ws :ajax :auto}] type)\",type,e_44389,null);\n}\n\nvar e_44390 = (function (){try{if(taoensso.encore.nblank_str_QMARK_(client_id)){\nreturn null;\n} else {\nreturn taoensso.truss.impl._dummy_error;\n}\n}catch (e43987){if((e43987 instanceof Error)){\nvar e_44390 = e43987;\nreturn e_44390;\n} else {\nthrow e43987;\n\n}\n}})();\nif((e_44390 == null)){\n} else {\ntaoensso.truss.impl._invar_violation_BANG_(true,\"taoensso.sente\",1412,\"(enc/nblank-str? client-id)\",client_id,e_44390,null);\n}\n\nif((!((_deprecated_more_opts == null)))){\ntaoensso.timbre._log_BANG_.cljs$core$IFn$_invoke$arity$10(taoensso.timbre._STAR_config_STAR_,new cljs.core.Keyword(null,\"warn\",\"warn\",-436710552),\"taoensso.sente\",null,1414,new cljs.core.Keyword(null,\"f\",\"f\",-1597136552),new cljs.core.Keyword(null,\"auto\",\"auto\",-566279492),(new cljs.core.Delay((function (){\nreturn new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [\"`make-channel-socket-client!` fn signature CHANGED with Sente v0.10.0.\"], null);\n}),null)),null,-1434365268);\n} else {\n}\n\nif(cljs.core.contains_QMARK_(opts,new cljs.core.Keyword(null,\"lp-timeout\",\"lp-timeout\",1149461302))){\ntaoensso.timbre._log_BANG_.cljs$core$IFn$_invoke$arity$10(taoensso.timbre._STAR_config_STAR_,new cljs.core.Keyword(null,\"warn\",\"warn\",-436710552),\"taoensso.sente\",null,1415,new cljs.core.Keyword(null,\"f\",\"f\",-1597136552),new cljs.core.Keyword(null,\"auto\",\"auto\",-566279492),(new cljs.core.Delay((function (){\nreturn new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [\":lp-timeout opt has CHANGED; please use :lp-timout-ms.\"], null);\n}),null)),null,937886848);\n} else {\n}\n\nvar packer__$1 = taoensso.sente.coerce_packer(packer);\nvar vec__43988 = (function (){var win_loc = taoensso.encore.get_win_loc();\nvar path__$1 = (function (){var or__4126__auto__ = path;\nif(cljs.core.truth_(or__4126__auto__)){\nreturn or__4126__auto__;\n} else {\nreturn new cljs.core.Keyword(null,\"pathname\",\"pathname\",-1420497528).cljs$core$IFn$_invoke$arity$1(win_loc);\n}\n})();\nvar temp__5733__auto__ = new cljs.core.Keyword(null,\"chsk-url-fn\",\"chsk-url-fn\",1968894294).cljs$core$IFn$_invoke$arity$1(opts);\nif(cljs.core.truth_(temp__5733__auto__)){\nvar f = temp__5733__auto__;\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(path__$1,win_loc,new cljs.core.Keyword(null,\"ws\",\"ws\",86841443)) : f.call(null,path__$1,win_loc,new cljs.core.Keyword(null,\"ws\",\"ws\",86841443))),(f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(path__$1,win_loc,new cljs.core.Keyword(null,\"ajax\",\"ajax\",814345549)) : f.call(null,path__$1,win_loc,new cljs.core.Keyword(null,\"ajax\",\"ajax\",814345549)))], null);\n} else {\nvar protocol__$1 = (function (){var or__4126__auto__ = protocol;\nif(cljs.core.truth_(or__4126__auto__)){\nreturn or__4126__auto__;\n} else {\nvar or__4126__auto____$1 = new cljs.core.Keyword(null,\"protocol\",\"protocol\",652470118).cljs$core$IFn$_invoke$arity$1(win_loc);\nif(cljs.core.truth_(or__4126__auto____$1)){\nreturn or__4126__auto____$1;\n} else {\nreturn new cljs.core.Keyword(null,\"http\",\"http\",382524695);\n}\n}\n})();\nvar host__$1 = (function (){var or__4126__auto__ = host;\nif(cljs.core.truth_(or__4126__auto__)){\nreturn or__4126__auto__;\n} else {\nreturn new cljs.core.Keyword(null,\"host\",\"host\",-1558485167).cljs$core$IFn$_invoke$arity$1(win_loc);\n}\n})();\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [taoensso.sente.get_chsk_url(protocol__$1,host__$1,path__$1,new cljs.core.Keyword(null,\"ws\",\"ws\",86841443)),taoensso.sente.get_chsk_url(protocol__$1,host__$1,path__$1,new cljs.core.Keyword(null,\"ajax\",\"ajax\",814345549))], null);\n}\n})();\nvar ws_url = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__43988,(0),null);\nvar ajax_url = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__43988,(1),null);\nvar private_chs = new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,\"internal\",\"internal\",-854870097),cljs.core.async.chan.cljs$core$IFn$_invoke$arity$1(cljs.core.async.sliding_buffer((128))),new cljs.core.Keyword(null,\"state\",\"state\",-1988618099),cljs.core.async.chan.cljs$core$IFn$_invoke$arity$1(cljs.core.async.sliding_buffer((10))),new cljs.core.Keyword(null,\"<server\",\"<server\",-2135373537),(function (){var buf = cljs.core.async.sliding_buffer((512));\nif(cljs.core.truth_(wrap_recv_evs_QMARK_)){\nreturn cljs.core.async.chan.cljs$core$IFn$_invoke$arity$2(buf,cljs.core.map.cljs$core$IFn$_invoke$arity$1((function (ev){\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"chsk\",\"recv\",\"chsk/recv\",561097091),ev], null);\n})));\n} else {\nreturn cljs.core.async.chan.cljs$core$IFn$_invoke$arity$1(buf);\n}\n})()], null);\nvar common_chsk_opts = new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null,\"client-id\",\"client-id\",-464622140),client_id,new cljs.core.Keyword(null,\"chs\",\"chs\",376886120),private_chs,new cljs.core.Keyword(null,\"params\",\"params\",710516235),params,new cljs.core.Keyword(null,\"packer\",\"packer\",66077544),packer__$1,new cljs.core.Keyword(null,\"ws-kalive-ms\",\"ws-kalive-ms\",1442179968),ws_kalive_ms], null);\nvar ws_chsk_opts = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([common_chsk_opts,new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\"url\",\"url\",276297046),ws_url,new cljs.core.Keyword(null,\"backoff-ms-fn\",\"backoff-ms-fn\",772895955),backoff_ms_fn], null)], 0));\nvar ajax_chsk_opts = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([common_chsk_opts,new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,\"url\",\"url\",276297046),ajax_url,new cljs.core.Keyword(null,\"ajax-opts\",\"ajax-opts\",-518239109),ajax_opts,new cljs.core.Keyword(null,\"backoff-ms-fn\",\"backoff-ms-fn\",772895955),backoff_ms_fn], null)], 0));\nvar auto_chsk_opts = new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\"ws-chsk-opts\",\"ws-chsk-opts\",-1990170104),ws_chsk_opts,new cljs.core.Keyword(null,\"ajax-chsk-opts\",\"ajax-chsk-opts\",1602591327),ajax_chsk_opts], null);\nvar _QMARK_chsk = taoensso.sente._chsk_connect_BANG_((function (){var G__43991 = type;\nvar G__43991__$1 = (((G__43991 instanceof cljs.core.Keyword))?G__43991.fqn:null);\nswitch (G__43991__$1) {\ncase \"ws\":\nreturn taoensso.sente.new_ChWebSocket(ws_chsk_opts);\n\nbreak;\ncase \"ajax\":\nreturn taoensso.sente.new_ChAjaxSocket(ajax_chsk_opts);\n\nbreak;\ncase \"auto\":\nreturn taoensso.sente.new_ChAutoSocket(auto_chsk_opts);\n\nbreak;\ndefault:\nthrow (new Error([\"No matching clause: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(G__43991__$1)].join('')));\n\n}\n})());\nvar temp__5733__auto__ = _QMARK_chsk;\nif(cljs.core.truth_(temp__5733__auto__)){\nvar chsk = temp__5733__auto__;\nvar chsk_state_ = new cljs.core.Keyword(null,\"state_\",\"state_\",957667102).cljs$core$IFn$_invoke$arity$1(chsk);\nvar internal_ch = new cljs.core.Keyword(null,\"internal\",\"internal\",-854870097).cljs$core$IFn$_invoke$arity$1(private_chs);\nvar send_fn = cljs.core.partial.cljs$core$IFn$_invoke$arity$2(taoensso.sente.chsk_send_BANG_,chsk);\nvar ev_ch = cljs.core.async.merge.cljs$core$IFn$_invoke$arity$2(new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"internal\",\"internal\",-854870097).cljs$core$IFn$_invoke$arity$1(private_chs),new cljs.core.Keyword(null,\"state\",\"state\",-1988618099).cljs$core$IFn$_invoke$arity$1(private_chs),new cljs.core.Keyword(null,\"<server\",\"<server\",-2135373537).cljs$core$IFn$_invoke$arity$1(private_chs)], null),recv_buf_or_n);\nvar ev_msg_ch = cljs.core.async.chan.cljs$core$IFn$_invoke$arity$2((1),cljs.core.map.cljs$core$IFn$_invoke$arity$1((function (ev){\nvar vec__43992 = taoensso.sente.as_event(ev);\nvar ev_id = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__43992,(0),null);\nvar ev__QMARK_data = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__43992,(1),null);\nvar ev__$1 = vec__43992;\nreturn new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null,\"ch-recv\",\"ch-recv\",-990916861),internal_ch,new cljs.core.Keyword(null,\"send-fn\",\"send-fn\",351002041),send_fn,new cljs.core.Keyword(null,\"state\",\"state\",-1988618099),chsk_state_,new cljs.core.Keyword(null,\"event\",\"event\",301435442),ev__$1,new cljs.core.Keyword(null,\"id\",\"id\",-1388402092),ev_id,new cljs.core.Keyword(null,\"?data\",\"?data\",-9471433),ev__QMARK_data], null);\n})));\ncljs.core.async.pipe.cljs$core$IFn$_invoke$arity$2(ev_ch,ev_msg_ch);\n\nreturn new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null,\"chsk\",\"chsk\",-863703081),chsk,new cljs.core.Keyword(null,\"ch-recv\",\"ch-recv\",-990916861),ev_msg_ch,new cljs.core.Keyword(null,\"send-fn\",\"send-fn\",351002041),send_fn,new cljs.core.Keyword(null,\"state\",\"state\",-1988618099),new cljs.core.Keyword(null,\"state_\",\"state_\",957667102).cljs$core$IFn$_invoke$arity$1(chsk)], null);\n} else {\nreturn taoensso.timbre._log_BANG_.cljs$core$IFn$_invoke$arity$10(taoensso.timbre._STAR_config_STAR_,new cljs.core.Keyword(null,\"warn\",\"warn\",-436710552),\"taoensso.sente\",null,1503,new cljs.core.Keyword(null,\"f\",\"f\",-1597136552),new cljs.core.Keyword(null,\"auto\",\"auto\",-566279492),(new cljs.core.Delay((function (){\nreturn new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [\"Failed to create channel socket\"], null);\n}),null)),null,-127330001);\n}\n}));\n\n(taoensso.sente.make_channel_socket_client_BANG_.cljs$lang$maxFixedArity = (1));\n\n/** @this {Function} */\n(taoensso.sente.make_channel_socket_client_BANG_.cljs$lang$applyTo = (function (seq43977){\nvar G__43978 = cljs.core.first(seq43977);\nvar seq43977__$1 = cljs.core.next(seq43977);\nvar self__4723__auto__ = this;\nreturn self__4723__auto__.cljs$core$IFn$_invoke$arity$variadic(G__43978,seq43977__$1);\n}));\n\ntaoensso.sente._start_chsk_router_BANG_ = (function taoensso$sente$_start_chsk_router_BANG_(server_QMARK_,ch_recv,event_msg_handler,opts){\nvar map__43995 = opts;\nvar map__43995__$1 = (((((!((map__43995 == null))))?(((((map__43995.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__43995.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__43995):map__43995);\nvar trace_evs_QMARK_ = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__43995__$1,new cljs.core.Keyword(null,\"trace-evs?\",\"trace-evs?\",1502453512));\nvar error_handler = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__43995__$1,new cljs.core.Keyword(null,\"error-handler\",\"error-handler\",-484945776));\nvar simple_auto_threading_QMARK_ = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__43995__$1,new cljs.core.Keyword(null,\"simple-auto-threading?\",\"simple-auto-threading?\",1950754184));\nvar ch_ctrl = cljs.core.async.chan.cljs$core$IFn$_invoke$arity$0();\nvar execute1 = (function (f){\nreturn (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));\n});\nvar c__38372__auto___44392 = cljs.core.async.chan.cljs$core$IFn$_invoke$arity$1((1));\ncljs.core.async.impl.dispatch.run((function (){\nvar f__38373__auto__ = (function (){var switch__38280__auto__ = (function (state_44044){\nvar state_val_44045 = (state_44044[(1)]);\nif((state_val_44045 === (7))){\nvar inst_44040 = (state_44044[(2)]);\nvar state_44044__$1 = state_44044;\nvar statearr_44046_44393 = state_44044__$1;\n(statearr_44046_44393[(2)] = inst_44040);\n\n(statearr_44046_44393[(1)] = (3));\n\n\nreturn new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268);\n} else {\nif((state_val_44045 === (1))){\nvar state_44044__$1 = state_44044;\nvar statearr_44047_44394 = state_44044__$1;\n(statearr_44047_44394[(2)] = null);\n\n(statearr_44047_44394[(1)] = (2));\n\n\nreturn new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268);\n} else {\nif((state_val_44045 === (4))){\nvar inst_44010 = (state_44044[(7)]);\nvar inst_44007 = (state_44044[(8)]);\nvar inst_44005 = (state_44044[(9)]);\nvar inst_44006 = (state_44044[(10)]);\nvar inst_44005__$1 = (state_44044[(2)]);\nvar inst_44006__$1 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(inst_44005__$1,(0),null);\nvar inst_44007__$1 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(inst_44005__$1,(1),null);\nvar inst_44008 = cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(inst_44007__$1,ch_ctrl);\nvar inst_44009 = (inst_44006__$1 == null);\nvar inst_44010__$1 = ((inst_44008) || (inst_44009));\nvar state_44044__$1 = (function (){var statearr_44048 = state_44044;\n(statearr_44048[(7)] = inst_44010__$1);\n\n(statearr_44048[(8)] = inst_44007__$1);\n\n(statearr_44048[(9)] = inst_44005__$1);\n\n(statearr_44048[(10)] = inst_44006__$1);\n\nreturn statearr_44048;\n})();\nif(cljs.core.truth_(inst_44010__$1)){\nvar statearr_44049_44395 = state_44044__$1;\n(statearr_44049_44395[(1)] = (5));\n\n} else {\nvar statearr_44050_44396 = state_44044__$1;\n(statearr_44050_44396[(1)] = (6));\n\n}\n\nreturn new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268);\n} else {\nif((state_val_44045 === (15))){\nvar inst_44006 = (state_44044[(10)]);\nvar state_44044__$1 = state_44044;\nvar statearr_44051_44397 = state_44044__$1;\n(statearr_44051_44397[(2)] = inst_44006);\n\n(statearr_44051_44397[(1)] = (16));\n\n\nreturn new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268);\n} else {\nif((state_val_44045 === (13))){\nvar inst_44026 = (state_44044[(2)]);\nvar state_44044__$1 = state_44044;\nvar statearr_44052_44398 = state_44044__$1;\n(statearr_44052_44398[(2)] = inst_44026);\n\n(statearr_44052_44398[(1)] = (10));\n\n\nreturn new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268);\n} else {\nif((state_val_44045 === (6))){\nvar inst_44006 = (state_44044[(10)]);\nvar inst_44015 = (inst_44006 == null);\nvar inst_44016 = cljs.core.not(inst_44015);\nvar state_44044__$1 = state_44044;\nif(inst_44016){\nvar statearr_44053_44399 = state_44044__$1;\n(statearr_44053_44399[(1)] = (8));\n\n} else {\nvar statearr_44054_44400 = state_44044__$1;\n(statearr_44054_44400[(1)] = (9));\n\n}\n\nreturn new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268);\n} else {\nif((state_val_44045 === (3))){\nvar inst_44042 = (state_44044[(2)]);\nvar state_44044__$1 = state_44044;\nreturn cljs.core.async.impl.ioc_helpers.return_chan(state_44044__$1,inst_44042);\n} else {\nif((state_val_44045 === (12))){\nvar state_44044__$1 = state_44044;\nvar statearr_44055_44401 = state_44044__$1;\n(statearr_44055_44401[(2)] = false);\n\n(statearr_44055_44401[(1)] = (13));\n\n\nreturn new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268);\n} else {\nif((state_val_44045 === (2))){\nvar inst_44001 = cljs.core.PersistentVector.EMPTY_NODE;\nvar inst_44002 = [ch_recv,ch_ctrl];\nvar inst_44003 = (new cljs.core.PersistentVector(null,2,(5),inst_44001,inst_44002,null));\nvar state_44044__$1 = state_44044;\nreturn cljs.core.async.ioc_alts_BANG_(state_44044__$1,(4),inst_44003);\n} else {\nif((state_val_44045 === (11))){\nvar state_44044__$1 = state_44044;\nvar statearr_44056_44402 = state_44044__$1;\n(statearr_44056_44402[(2)] = true);\n\n(statearr_44056_44402[(1)] = (13));\n\n\nreturn new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268);\n} else {\nif((state_val_44045 === (9))){\nvar state_44044__$1 = state_44044;\nvar statearr_44057_44403 = state_44044__$1;\n(statearr_44057_44403[(2)] = false);\n\n(statearr_44057_44403[(1)] = (10));\n\n\nreturn new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268);\n} else {\nif((state_val_44045 === (5))){\nvar state_44044__$1 = state_44044;\nvar statearr_44058_44404 = state_44044__$1;\n(statearr_44058_44404[(2)] = null);\n\n(statearr_44058_44404[(1)] = (7));\n\n\nreturn new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268);\n} else {\nif((state_val_44045 === (14))){\nvar inst_44006 = (state_44044[(10)]);\nvar inst_44031 = cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,inst_44006);\nvar state_44044__$1 = state_44044;\nvar statearr_44059_44405 = state_44044__$1;\n(statearr_44059_44405[(2)] = inst_44031);\n\n(statearr_44059_44405[(1)] = (16));\n\n\nreturn new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268);\n} else {\nif((state_val_44045 === (16))){\nvar inst_44010 = (state_44044[(7)]);\nvar inst_44007 = (state_44044[(8)]);\nvar inst_44005 = (state_44044[(9)]);\nvar inst_44006 = (state_44044[(10)]);\nvar inst_44034 = (state_44044[(2)]);\nvar inst_44035 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(inst_44034,new cljs.core.Keyword(null,\"event\",\"event\",301435442));\nvar inst_44036 = (function (){var vec__43998 = inst_44005;\nvar v = inst_44006;\nvar p = inst_44007;\nvar stop_QMARK_ = inst_44010;\nvar map__44013 = inst_44034;\nvar event_msg = inst_44034;\nvar event = inst_44035;\nreturn (function (){\ntry{if(cljs.core.truth_(trace_evs_QMARK_)){\ntaoensso.timbre._log_BANG_.cljs$core$IFn$_invoke$arity$10(taoensso.timbre._STAR_config_STAR_,new cljs.core.Keyword(null,\"trace\",\"trace\",-1082747415),\"taoensso.sente\",null,1530,new cljs.core.Keyword(null,\"f\",\"f\",-1597136552),new cljs.core.Keyword(null,\"auto\",\"auto\",-566279492),(new cljs.core.Delay((function (){\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [\"Pre-handler event: %s\",event], null);\n}),null)),null,355961472);\n} else {\n}\n\nvar G__44062 = (cljs.core.truth_(server_QMARK_)?(function (){var e = (function (){try{if(taoensso.sente.server_event_msg_QMARK_(event_msg)){\nreturn null;\n} else {\nreturn taoensso.truss.impl._dummy_error;\n}\n}catch (e44063){if((e44063 instanceof Error)){\nvar e = e44063;\nreturn e;\n} else {\nthrow e44063;\n\n}\n}})();\nif((e == null)){\nreturn event_msg;\n} else {\nreturn taoensso.truss.impl._invar_violation_BANG_(null,\"taoensso.sente\",1533,\"(server-event-msg? event-msg)\",event_msg,e,null);\n}\n})():(function (){var e = (function (){try{if(taoensso.sente.client_event_msg_QMARK_(event_msg)){\nreturn null;\n} else {\nreturn taoensso.truss.impl._dummy_error;\n}\n}catch (e44064){if((e44064 instanceof Error)){\nvar e = e44064;\nreturn e;\n} else {\nthrow e44064;\n\n}\n}})();\nif((e == null)){\nreturn event_msg;\n} else {\nreturn taoensso.truss.impl._invar_violation_BANG_(null,\"taoensso.sente\",1534,\"(client-event-msg? event-msg)\",event_msg,e,null);\n}\n})());\nreturn (event_msg_handler.cljs$core$IFn$_invoke$arity$1 ? event_msg_handler.cljs$core$IFn$_invoke$arity$1(G__44062) : event_msg_handler.call(null,G__44062));\n}catch (e44060){if((e44060 instanceof Error)){\nvar e1 = e44060;\ntry{var temp__5733__auto__ = error_handler;\nif(cljs.core.truth_(temp__5733__auto__)){\nvar eh = temp__5733__auto__;\nreturn (error_handler.cljs$core$IFn$_invoke$arity$2 ? error_handler.cljs$core$IFn$_invoke$arity$2(e1,event_msg) : error_handler.call(null,e1,event_msg));\n} else {\nreturn taoensso.timbre._log_BANG_.cljs$core$IFn$_invoke$arity$10(taoensso.timbre._STAR_config_STAR_,new cljs.core.Keyword(null,\"error\",\"error\",-978969032),\"taoensso.sente\",null,1539,new cljs.core.Keyword(null,\"f\",\"f\",-1597136552),new cljs.core.Keyword(null,\"auto\",\"auto\",-566279492),(new cljs.core.Delay((function (){\nreturn new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [e1,\"Chsk router `event-msg-handler` error: %s\",event], null);\n}),null)),null,-920556862);\n}\n}catch (e44061){if((e44061 instanceof Error)){\nvar e2 = e44061;\nreturn taoensso.timbre._log_BANG_.cljs$core$IFn$_invoke$arity$10(taoensso.timbre._STAR_config_STAR_,new cljs.core.Keyword(null,\"error\",\"error\",-978969032),\"taoensso.sente\",null,1540,new cljs.core.Keyword(null,\"f\",\"f\",-1597136552),new cljs.core.Keyword(null,\"auto\",\"auto\",-566279492),(new cljs.core.Delay((function (){\nreturn new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [e2,\"Chsk router `error-handler` error: %s\",event], null);\n}),null)),null,1651794005);\n} else {\nthrow e44061;\n\n}\n}} else {\nthrow e44060;\n\n}\n}});\n})();\nvar inst_44037 = execute1(inst_44036);\nvar state_44044__$1 = (function (){var statearr_44065 = state_44044;\n(statearr_44065[(11)] = inst_44037);\n\nreturn statearr_44065;\n})();\nvar statearr_44066_44406 = state_44044__$1;\n(statearr_44066_44406[(2)] = null);\n\n(statearr_44066_44406[(1)] = (2));\n\n\nreturn new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268);\n} else {\nif((state_val_44045 === (10))){\nvar inst_44029 = (state_44044[(2)]);\nvar state_44044__$1 = state_44044;\nif(cljs.core.truth_(inst_44029)){\nvar statearr_44067_44407 = state_44044__$1;\n(statearr_44067_44407[(1)] = (14));\n\n} else {\nvar statearr_44068_44408 = state_44044__$1;\n(statearr_44068_44408[(1)] = (15));\n\n}\n\nreturn new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268);\n} else {\nif((state_val_44045 === (8))){\nvar inst_44006 = (state_44044[(10)]);\nvar inst_44018 = inst_44006.cljs$lang$protocol_mask$partition0$;\nvar inst_44019 = (inst_44018 & (64));\nvar inst_44020 = inst_44006.cljs$core$ISeq$;\nvar inst_44021 = (cljs.core.PROTOCOL_SENTINEL === inst_44020);\nvar inst_44022 = ((inst_44019) || (inst_44021));\nvar state_44044__$1 = state_44044;\nif(cljs.core.truth_(inst_44022)){\nvar statearr_44069_44409 = state_44044__$1;\n(statearr_44069_44409[(1)] = (11));\n\n} else {\nvar statearr_44070_44410 = state_44044__$1;\n(statearr_44070_44410[(1)] = (12));\n\n}\n\nreturn new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268);\n} else {\nreturn null;\n}\n}\n}\n}\n}\n}\n}\n}\n}\n}\n}\n}\n}\n}\n}\n}\n});\nreturn (function() {\nvar taoensso$sente$_start_chsk_router_BANG__$_state_machine__38281__auto__ = null;\nvar taoensso$sente$_start_chsk_router_BANG__$_state_machine__38281__auto____0 = (function (){\nvar statearr_44071 = [null,null,null,null,null,null,null,null,null,null,null,null];\n(statearr_44071[(0)] = taoensso$sente$_start_chsk_router_BANG__$_state_machine__38281__auto__);\n\n(statearr_44071[(1)] = (1));\n\nreturn statearr_44071;\n});\nvar taoensso$sente$_start_chsk_router_BANG__$_state_machine__38281__auto____1 = (function (state_44044){\nwhile(true){\nvar ret_value__38282__auto__ = (function (){try{while(true){\nvar result__38283__auto__ = switch__38280__auto__(state_44044);\nif(cljs.core.keyword_identical_QMARK_(result__38283__auto__,new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268))){\ncontinue;\n} else {\nreturn result__38283__auto__;\n}\nbreak;\n}\n}catch (e44072){var ex__38284__auto__ = e44072;\nvar statearr_44073_44411 = state_44044;\n(statearr_44073_44411[(2)] = ex__38284__auto__);\n\n\nif(cljs.core.seq((state_44044[(4)]))){\nvar statearr_44074_44412 = state_44044;\n(statearr_44074_44412[(1)] = cljs.core.first((state_44044[(4)])));\n\n} else {\nthrow ex__38284__auto__;\n}\n\nreturn new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268);\n}})();\nif(cljs.core.keyword_identical_QMARK_(ret_value__38282__auto__,new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268))){\nvar G__44413 = state_44044;\nstate_44044 = G__44413;\ncontinue;\n} else {\nreturn ret_value__38282__auto__;\n}\nbreak;\n}\n});\ntaoensso$sente$_start_chsk_router_BANG__$_state_machine__38281__auto__ = function(state_44044){\nswitch(arguments.length){\ncase 0:\nreturn taoensso$sente$_start_chsk_router_BANG__$_state_machine__38281__auto____0.call(this);\ncase 1:\nreturn taoensso$sente$_start_chsk_router_BANG__$_state_machine__38281__auto____1.call(this,state_44044);\n}\nthrow(new Error('Invalid arity: ' + arguments.length));\n};\ntaoensso$sente$_start_chsk_router_BANG__$_state_machine__38281__auto__.cljs$core$IFn$_invoke$arity$0 = taoensso$sente$_start_chsk_router_BANG__$_state_machine__38281__auto____0;\ntaoensso$sente$_start_chsk_router_BANG__$_state_machine__38281__auto__.cljs$core$IFn$_invoke$arity$1 = taoensso$sente$_start_chsk_router_BANG__$_state_machine__38281__auto____1;\nreturn taoensso$sente$_start_chsk_router_BANG__$_state_machine__38281__auto__;\n})()\n})();\nvar state__38374__auto__ = (function (){var statearr_44075 = f__38373__auto__();\n(statearr_44075[(6)] = c__38372__auto___44392);\n\nreturn statearr_44075;\n})();\nreturn cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped(state__38374__auto__);\n}));\n\n\nreturn (function taoensso$sente$_start_chsk_router_BANG__$_stop_BANG_(){\nreturn cljs.core.async.close_BANG_(ch_ctrl);\n});\n});\n/**\n * Creates a simple go-loop to call `(event-msg-handler <server-event-msg>)`\n *   and log any errors. Returns a `(fn stop! [])`. Note that advanced users may\n *   prefer to just write their own loop against `ch-recv`.\n * \n *   Nb performance note: since your `event-msg-handler` fn will be executed\n *   within a simple go block, you'll want this fn to be ~non-blocking\n *   (you'll especially want to avoid blocking IO) to avoid starving the\n *   core.async thread pool under load. To avoid blocking, you can use futures,\n *   agents, core.async, etc. as appropriate.\n * \n *   Or for simple automatic future-based threading of every request, enable\n *   the `:simple-auto-threading?` opt (disabled by default).\n */\ntaoensso.sente.start_server_chsk_router_BANG_ = (function taoensso$sente$start_server_chsk_router_BANG_(var_args){\nvar args__4742__auto__ = [];\nvar len__4736__auto___44414 = arguments.length;\nvar i__4737__auto___44415 = (0);\nwhile(true){\nif((i__4737__auto___44415 < len__4736__auto___44414)){\nargs__4742__auto__.push((arguments[i__4737__auto___44415]));\n\nvar G__44416 = (i__4737__auto___44415 + (1));\ni__4737__auto___44415 = G__44416;\ncontinue;\n} else {\n}\nbreak;\n}\n\nvar argseq__4743__auto__ = ((((2) < args__4742__auto__.length))?(new cljs.core.IndexedSeq(args__4742__auto__.slice((2)),(0),null)):null);\nreturn taoensso.sente.start_server_chsk_router_BANG_.cljs$core$IFn$_invoke$arity$variadic((arguments[(0)]),(arguments[(1)]),argseq__4743__auto__);\n});\n\n(taoensso.sente.start_server_chsk_router_BANG_.cljs$core$IFn$_invoke$arity$variadic = (function (ch_recv,event_msg_handler,p__44079){\nvar vec__44080 = p__44079;\nvar map__44083 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__44080,(0),null);\nvar map__44083__$1 = (((((!((map__44083 == null))))?(((((map__44083.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__44083.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__44083):map__44083);\nvar opts = map__44083__$1;\nvar trace_evs_QMARK_ = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__44083__$1,new cljs.core.Keyword(null,\"trace-evs?\",\"trace-evs?\",1502453512));\nvar error_handler = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__44083__$1,new cljs.core.Keyword(null,\"error-handler\",\"error-handler\",-484945776));\nvar simple_auto_threading_QMARK_ = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__44083__$1,new cljs.core.Keyword(null,\"simple-auto-threading?\",\"simple-auto-threading?\",1950754184));\nreturn taoensso.sente._start_chsk_router_BANG_(new cljs.core.Keyword(null,\"server\",\"server\",1499190120),ch_recv,event_msg_handler,opts);\n}));\n\n(taoensso.sente.start_server_chsk_router_BANG_.cljs$lang$maxFixedArity = (2));\n\n/** @this {Function} */\n(taoensso.sente.start_server_chsk_router_BANG_.cljs$lang$applyTo = (function (seq44076){\nvar G__44077 = cljs.core.first(seq44076);\nvar seq44076__$1 = cljs.core.next(seq44076);\nvar G__44078 = cljs.core.first(seq44076__$1);\nvar seq44076__$2 = cljs.core.next(seq44076__$1);\nvar self__4723__auto__ = this;\nreturn self__4723__auto__.cljs$core$IFn$_invoke$arity$variadic(G__44077,G__44078,seq44076__$2);\n}));\n\n/**\n * Creates a simple go-loop to call `(event-msg-handler <server-event-msg>)`\n *   and log any errors. Returns a `(fn stop! [])`. Note that advanced users may\n *   prefer to just write their own loop against `ch-recv`.\n * \n *   Nb performance note: since your `event-msg-handler` fn will be executed\n *   within a simple go block, you'll want this fn to be ~non-blocking\n *   (you'll especially want to avoid blocking IO) to avoid starving the\n *   core.async thread pool under load. To avoid blocking, you can use futures,\n *   agents, core.async, etc. as appropriate.\n */\ntaoensso.sente.start_client_chsk_router_BANG_ = (function taoensso$sente$start_client_chsk_router_BANG_(var_args){\nvar args__4742__auto__ = [];\nvar len__4736__auto___44417 = arguments.length;\nvar i__4737__auto___44418 = (0);\nwhile(true){\nif((i__4737__auto___44418 < len__4736__auto___44417)){\nargs__4742__auto__.push((arguments[i__4737__auto___44418]));\n\nvar G__44419 = (i__4737__auto___44418 + (1));\ni__4737__auto___44418 = G__44419;\ncontinue;\n} else {\n}\nbreak;\n}\n\nvar argseq__4743__auto__ = ((((2) < args__4742__auto__.length))?(new cljs.core.IndexedSeq(args__4742__auto__.slice((2)),(0),null)):null);\nreturn taoensso.sente.start_client_chsk_router_BANG_.cljs$core$IFn$_invoke$arity$variadic((arguments[(0)]),(arguments[(1)]),argseq__4743__auto__);\n});\n\n(taoensso.sente.start_client_chsk_router_BANG_.cljs$core$IFn$_invoke$arity$variadic = (function (ch_recv,event_msg_handler,p__44088){\nvar vec__44089 = p__44088;\nvar map__44092 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__44089,(0),null);\nvar map__44092__$1 = (((((!((map__44092 == null))))?(((((map__44092.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__44092.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__44092):map__44092);\nvar opts = map__44092__$1;\nvar trace_evs_QMARK_ = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__44092__$1,new cljs.core.Keyword(null,\"trace-evs?\",\"trace-evs?\",1502453512));\nvar error_handler = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__44092__$1,new cljs.core.Keyword(null,\"error-handler\",\"error-handler\",-484945776));\nreturn taoensso.sente._start_chsk_router_BANG_(cljs.core.not(new cljs.core.Keyword(null,\"server\",\"server\",1499190120)),ch_recv,event_msg_handler,opts);\n}));\n\n(taoensso.sente.start_client_chsk_router_BANG_.cljs$lang$maxFixedArity = (2));\n\n/** @this {Function} */\n(taoensso.sente.start_client_chsk_router_BANG_.cljs$lang$applyTo = (function (seq44085){\nvar G__44086 = cljs.core.first(seq44085);\nvar seq44085__$1 = cljs.core.next(seq44085);\nvar G__44087 = cljs.core.first(seq44085__$1);\nvar seq44085__$2 = cljs.core.next(seq44085__$1);\nvar self__4723__auto__ = this;\nreturn self__4723__auto__.cljs$core$IFn$_invoke$arity$variadic(G__44086,G__44087,seq44085__$2);\n}));\n\ntaoensso.sente.event_msg_QMARK_ = taoensso.sente.client_event_msg_QMARK_;\n/**\n * Platform-specific alias for `make-channel-socket-server!` or\n *   `make-channel-socket-client!`. Please see the appropriate aliased fn\n * docstring for details.\n */\ntaoensso.sente.make_channel_socket_BANG_ = taoensso.sente.make_channel_socket_client_BANG_;\n/**\n * Platform-specific alias for `start-server-chsk-router!` or\n *   `start-client-chsk-router!`. Please see the appropriate aliased fn\n *   docstring for details.\n */\ntaoensso.sente.start_chsk_router_BANG_ = taoensso.sente.start_client_chsk_router_BANG_;\n/**\n * DEPRECATED: Please use `start-chsk-router!` instead\n */\ntaoensso.sente.start_chsk_router_loop_BANG_ = (function taoensso$sente$start_chsk_router_loop_BANG_(event_handler,ch_recv){\nreturn taoensso.sente.start_client_chsk_router_BANG_(ch_recv,(function (ev_msg){\nvar G__44094 = new cljs.core.Keyword(null,\"event\",\"event\",301435442).cljs$core$IFn$_invoke$arity$1(ev_msg);\nvar G__44095 = new cljs.core.Keyword(null,\"ch-recv\",\"ch-recv\",-990916861).cljs$core$IFn$_invoke$arity$1(ev_msg);\nreturn (event_handler.cljs$core$IFn$_invoke$arity$2 ? event_handler.cljs$core$IFn$_invoke$arity$2(G__44094,G__44095) : event_handler.call(null,G__44094,G__44095));\n}));\n});\n\n/**\n * DEPRECATED. Please use `timbre/set-level!` instead\n */\ntaoensso.sente.set_logging_level_BANG_ = taoensso.timbre.set_level_BANG_;\n\n/**\n * DEPRECATED: Please use `ajax-lite` instead\n */\ntaoensso.sente.ajax_call = taoensso.encore.ajax_lite;\n\n/**\n * DEPRECATED\n */\ntaoensso.sente.default_chsk_url_fn = (function taoensso$sente$default_chsk_url_fn(path,p__44096,websocket_QMARK_){\nvar map__44097 = p__44096;\nvar map__44097__$1 = (((((!((map__44097 == null))))?(((((map__44097.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__44097.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__44097):map__44097);\nvar location = map__44097__$1;\nvar protocol = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__44097__$1,new cljs.core.Keyword(null,\"protocol\",\"protocol\",652470118));\nvar host = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__44097__$1,new cljs.core.Keyword(null,\"host\",\"host\",-1558485167));\nvar pathname = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__44097__$1,new cljs.core.Keyword(null,\"pathname\",\"pathname\",-1420497528));\nvar protocol__$1 = (cljs.core.truth_(websocket_QMARK_)?((cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(protocol,\"https:\"))?\"wss:\":\"ws:\"):protocol);\nreturn [cljs.core.str.cljs$core$IFn$_invoke$arity$1(protocol__$1),\"//\",cljs.core.str.cljs$core$IFn$_invoke$arity$1(host),cljs.core.str.cljs$core$IFn$_invoke$arity$1((function (){var or__4126__auto__ = path;\nif(cljs.core.truth_(or__4126__auto__)){\nreturn or__4126__auto__;\n} else {\nreturn pathname;\n}\n})())].join('');\n});\n","~:ns-info",["^ ","~:rename-macros",null,"~:renames",["^ "],"~:meta",["^ ","~:author","Peter Taoussanis (@ptaoussanis)","~:doc","Channel sockets for Clojure/Script.\n\n      Protocol  | client>server | client>server ?+ ack/reply | server>user push\n    * WebSockets:       ✓              [1]                           ✓\n    * Ajax:            [2]              ✓                           [3]\n\n    [1] Emulate with cb-uuid wrapping\n    [2] Emulate with dummy-cb wrapping\n    [3] Emulate with long-polling\n\n  Abbreviations:\n    * chsk      - Channel socket (Sente's own pseudo \"socket\")\n    * server-ch - Underlying web server's async channel that implement\n                  Sente's server channel interface\n    * sch       - server-ch alias\n    * uid       - User-id. An application-level user identifier used for async\n                  push. May have semantic meaning (e.g. username, email address),\n                  may not (e.g. client/random id) - app's discretion.\n    * cb        - Callback\n    * tout      - Timeout\n    * ws        - WebSocket/s\n    * pstr      - Packed string. Arbitrary Clojure data serialized as a\n                  string (e.g. edn) for client<->server comms\n    * udt       - Unix timestamp (datetime long)\n\n  Special messages:\n    * Callback wrapping: [<clj> <?cb-uuid>] for [1], [2]\n    * Callback replies: :chsk/closed, :chsk/timeout, :chsk/error\n\n    * Client-side events:\n        [:chsk/handshake [<?uid> <?csrf-token> <?handshake-data> <first-handshake?>]]\n        [:chsk/state [<old-state-map> <new-state-map>]]\n        [:chsk/recv <ev-as-pushed-from-server>] ; Server>user push\n        [:chsk/ws-ping]\n\n    * Server-side events:\n        [:chsk/bad-package <packed-str>]\n        [:chsk/bad-event   <event>]\n        [:chsk/uidport-open  <uid>]\n        [:chsk/uidport-close <uid>]\n        [:chsk/ws-ping]\n\n  Channel socket state map:\n    :type               - e/o #{:auto :ws :ajax}\n    :open?              - Truthy iff chsk appears to be open (connected) now\n    :ever-opened?       - Truthy iff chsk handshake has ever completed successfully\n    :first-open?        - Truthy iff chsk just completed first successful handshake\n    :uid                - User id provided by server on handshake,    or nil\n    :csrf-token         - CSRF token provided by server on handshake, or nil\n    :handshake-data     - Arb user data provided by server on handshake\n    :last-ws-error      - ?{:udt _ :ev <WebSocket-on-error-event>}\n    :last-ws-close      - ?{:udt _ :ev <WebSocket-on-close-event>\n                            :clean? _ :code _ :reason _}\n    :last-close         - ?{:udt _ :reason _}, with reason e/o\n                            #{nil :requested-disconnect :requested-reconnect\n                             :downgrading-ws-to-ajax :unexpected}\n    :udt-next-reconnect - Approximate udt of next scheduled auto-reconnect attempt\n\n  Notable implementation details:\n    * core.async is used liberally where brute-force core.async allows for\n      significant implementation simplifications. We lean on core.async's\n      efficiency here.\n    * For WebSocket fallback we use long-polling rather than HTTP 1.1 streaming\n      (chunked transfer encoding). Http-kit _does_ support chunked transfer\n      encoding but a small minority of browsers &/or proxies do not. Instead of\n      implementing all 3 modes (WebSockets, streaming, long-polling) - it seemed\n      reasonable to focus on the two extremes (performance + compatibility).\n      In any case client support for WebSockets is growing rapidly so fallback\n      modes will become increasingly irrelevant while the extra simplicity will\n      continue to pay dividends.\n\n  General-use notes:\n    * Single HTTP req+session persists over entire chsk session but cannot\n      modify sessions! Use standard a/sync HTTP Ring req/resp for logins, etc.\n    * Easy to wrap standard HTTP Ring resps for transport over chsks. Prefer\n      this approach to modifying handlers (better portability).","~:file","taoensso/sente.cljc","~:line",1,"~:column",5,"~:end-line",1,"~:end-column",19],"~:ns-aliases",["^ ","~$cljs.loader","~$shadow.loader","~$clojure.pprint","~$cljs.pprint","~$react","~$module$node_modules$react$index","~$react-dom","~$module$node_modules$react_dom$index","~$clojure.spec.alpha","~$cljs.spec.alpha"],"~:use-macros",["^ ","~$elide-require","~$taoensso.sente","~$warnf","~$taoensso.timbre","~$go","~$cljs.core.async.macros","~$have","~$taoensso.encore","~$go-loop","^N","~$have!","^P","~$have?","^P","~$debugf","^L","~$tracef","^L","~$infof","^L","~$errorf","^L"],"~:excludes",["~#set",[]],"~:macros",["^ "],"~:name","^J","~:op","~:ns","~:imports",null,"~:requires",["^ ","~$timbre","^L","~$interfaces","~$taoensso.sente.interfaces","~$async","~$cljs.core.async","~$cljs.core","^19","~$goog","^1:","^16","^16","^18","^18","~$enc","^P","^L","^L","~$str","~$clojure.string","^1=","^1=","^P","^P"],"~:seen",["^Y",["~:require","~:require-macros"]],"~:uses",["^ ","~$<!","^18","~$>!","^18","~$put!","^18","~$chan","^18","~$format","^P","~$swap-in!","^P","~$reset-in!","^P","~$swapped","^P"],"^1@",["^ ","^N","^N","^14","^L","^17","^18","^19","^19","^18","^18","^J","^J","^1;","^P","^L","^L","~$asyncm","^N","^P","^P","~$sente-macros","^J"],"~:form",["~#list",["~$ns","^J","Channel sockets for Clojure/Script.\n\n      Protocol  | client>server | client>server ?+ ack/reply | server>user push\n    * WebSockets:       ✓              [1]                           ✓\n    * Ajax:            [2]              ✓                           [3]\n\n    [1] Emulate with cb-uuid wrapping\n    [2] Emulate with dummy-cb wrapping\n    [3] Emulate with long-polling\n\n  Abbreviations:\n    * chsk      - Channel socket (Sente's own pseudo \"socket\")\n    * server-ch - Underlying web server's async channel that implement\n                  Sente's server channel interface\n    * sch       - server-ch alias\n    * uid       - User-id. An application-level user identifier used for async\n                  push. May have semantic meaning (e.g. username, email address),\n                  may not (e.g. client/random id) - app's discretion.\n    * cb        - Callback\n    * tout      - Timeout\n    * ws        - WebSocket/s\n    * pstr      - Packed string. Arbitrary Clojure data serialized as a\n                  string (e.g. edn) for client<->server comms\n    * udt       - Unix timestamp (datetime long)\n\n  Special messages:\n    * Callback wrapping: [<clj> <?cb-uuid>] for [1], [2]\n    * Callback replies: :chsk/closed, :chsk/timeout, :chsk/error\n\n    * Client-side events:\n        [:chsk/handshake [<?uid> <?csrf-token> <?handshake-data> <first-handshake?>]]\n        [:chsk/state [<old-state-map> <new-state-map>]]\n        [:chsk/recv <ev-as-pushed-from-server>] ; Server>user push\n        [:chsk/ws-ping]\n\n    * Server-side events:\n        [:chsk/bad-package <packed-str>]\n        [:chsk/bad-event   <event>]\n        [:chsk/uidport-open  <uid>]\n        [:chsk/uidport-close <uid>]\n        [:chsk/ws-ping]\n\n  Channel socket state map:\n    :type               - e/o #{:auto :ws :ajax}\n    :open?              - Truthy iff chsk appears to be open (connected) now\n    :ever-opened?       - Truthy iff chsk handshake has ever completed successfully\n    :first-open?        - Truthy iff chsk just completed first successful handshake\n    :uid                - User id provided by server on handshake,    or nil\n    :csrf-token         - CSRF token provided by server on handshake, or nil\n    :handshake-data     - Arb user data provided by server on handshake\n    :last-ws-error      - ?{:udt _ :ev <WebSocket-on-error-event>}\n    :last-ws-close      - ?{:udt _ :ev <WebSocket-on-close-event>\n                            :clean? _ :code _ :reason _}\n    :last-close         - ?{:udt _ :reason _}, with reason e/o\n                            #{nil :requested-disconnect :requested-reconnect\n                             :downgrading-ws-to-ajax :unexpected}\n    :udt-next-reconnect - Approximate udt of next scheduled auto-reconnect attempt\n\n  Notable implementation details:\n    * core.async is used liberally where brute-force core.async allows for\n      significant implementation simplifications. We lean on core.async's\n      efficiency here.\n    * For WebSocket fallback we use long-polling rather than HTTP 1.1 streaming\n      (chunked transfer encoding). Http-kit _does_ support chunked transfer\n      encoding but a small minority of browsers &/or proxies do not. Instead of\n      implementing all 3 modes (WebSockets, streaming, long-polling) - it seemed\n      reasonable to focus on the two extremes (performance + compatibility).\n      In any case client support for WebSockets is growing rapidly so fallback\n      modes will become increasingly irrelevant while the extra simplicity will\n      continue to pay dividends.\n\n  General-use notes:\n    * Single HTTP req+session persists over entire chsk session but cannot\n      modify sessions! Use standard a/sync HTTP Ring req/resp for logins, etc.\n    * Easy to wrap standard HTTP Ring resps for transport over chsks. Prefer\n      this approach to modifying handlers (better portability).",["^ ","^6","Peter Taoussanis (@ptaoussanis)"],["^1M",["^1?",["^1=","~:as","^1<"],["^18","^1O","^17","~:refer",["^1M",["^1B","^1C","^1D","^1E"]]],["^P","^1O","^1;","^1P",["^1M",["^1F","^1G","^1H","^1I"]],"~:refer-macros",["^1M",["^O","^R","^S"]]],["^L","^1O","^14","^1Q",["^1M",["^U","^T","^V","^K","^W"]]],["^16","^1O","^15"]]],["^1M",["^1@",["^N","^1O","^1J","^1P",["^1M",["^M","^Q"]]],["^J","^1O","^1K","^1P",["^1M",["^I"]]]]]]],"~:flags",["^ ","^1?",["^Y",[]],"^1@",["^Y",[]]],"~:js-deps",["^ "],"~:deps",["^1:","^19","^1=","^18","^P","^L","^16"]],"^11","^J","~:resource-id",["~:shadow.build.classpath/resource","taoensso/sente.cljc"],"~:compiled-at",1600144485529,"~:resource-name","taoensso/sente.cljc","~:warnings",[],"~:source","(ns taoensso.sente\n  \"Channel sockets for Clojure/Script.\n\n      Protocol  | client>server | client>server ?+ ack/reply | server>user push\n    * WebSockets:       ✓              [1]                           ✓\n    * Ajax:            [2]              ✓                           [3]\n\n    [1] Emulate with cb-uuid wrapping\n    [2] Emulate with dummy-cb wrapping\n    [3] Emulate with long-polling\n\n  Abbreviations:\n    * chsk      - Channel socket (Sente's own pseudo \\\"socket\\\")\n    * server-ch - Underlying web server's async channel that implement\n                  Sente's server channel interface\n    * sch       - server-ch alias\n    * uid       - User-id. An application-level user identifier used for async\n                  push. May have semantic meaning (e.g. username, email address),\n                  may not (e.g. client/random id) - app's discretion.\n    * cb        - Callback\n    * tout      - Timeout\n    * ws        - WebSocket/s\n    * pstr      - Packed string. Arbitrary Clojure data serialized as a\n                  string (e.g. edn) for client<->server comms\n    * udt       - Unix timestamp (datetime long)\n\n  Special messages:\n    * Callback wrapping: [<clj> <?cb-uuid>] for [1], [2]\n    * Callback replies: :chsk/closed, :chsk/timeout, :chsk/error\n\n    * Client-side events:\n        [:chsk/handshake [<?uid> <?csrf-token> <?handshake-data> <first-handshake?>]]\n        [:chsk/state [<old-state-map> <new-state-map>]]\n        [:chsk/recv <ev-as-pushed-from-server>] ; Server>user push\n        [:chsk/ws-ping]\n\n    * Server-side events:\n        [:chsk/bad-package <packed-str>]\n        [:chsk/bad-event   <event>]\n        [:chsk/uidport-open  <uid>]\n        [:chsk/uidport-close <uid>]\n        [:chsk/ws-ping]\n\n  Channel socket state map:\n    :type               - e/o #{:auto :ws :ajax}\n    :open?              - Truthy iff chsk appears to be open (connected) now\n    :ever-opened?       - Truthy iff chsk handshake has ever completed successfully\n    :first-open?        - Truthy iff chsk just completed first successful handshake\n    :uid                - User id provided by server on handshake,    or nil\n    :csrf-token         - CSRF token provided by server on handshake, or nil\n    :handshake-data     - Arb user data provided by server on handshake\n    :last-ws-error      - ?{:udt _ :ev <WebSocket-on-error-event>}\n    :last-ws-close      - ?{:udt _ :ev <WebSocket-on-close-event>\n                            :clean? _ :code _ :reason _}\n    :last-close         - ?{:udt _ :reason _}, with reason e/o\n                            #{nil :requested-disconnect :requested-reconnect\n                             :downgrading-ws-to-ajax :unexpected}\n    :udt-next-reconnect - Approximate udt of next scheduled auto-reconnect attempt\n\n  Notable implementation details:\n    * core.async is used liberally where brute-force core.async allows for\n      significant implementation simplifications. We lean on core.async's\n      efficiency here.\n    * For WebSocket fallback we use long-polling rather than HTTP 1.1 streaming\n      (chunked transfer encoding). Http-kit _does_ support chunked transfer\n      encoding but a small minority of browsers &/or proxies do not. Instead of\n      implementing all 3 modes (WebSockets, streaming, long-polling) - it seemed\n      reasonable to focus on the two extremes (performance + compatibility).\n      In any case client support for WebSockets is growing rapidly so fallback\n      modes will become increasingly irrelevant while the extra simplicity will\n      continue to pay dividends.\n\n  General-use notes:\n    * Single HTTP req+session persists over entire chsk session but cannot\n      modify sessions! Use standard a/sync HTTP Ring req/resp for logins, etc.\n    * Easy to wrap standard HTTP Ring resps for transport over chsks. Prefer\n      this approach to modifying handlers (better portability).\"\n\n  {:author \"Peter Taoussanis (@ptaoussanis)\"}\n\n  #?(:clj\n     (:require\n      [clojure.string :as str]\n      [clojure.core.async :as async :refer (<! <!! >! >!! put! chan go go-loop)]\n      [taoensso.encore :as enc :refer (swap-in! reset-in! swapped have have! have?)]\n      [taoensso.timbre :as timbre :refer (tracef debugf infof warnf errorf)]\n      [taoensso.sente.interfaces :as interfaces]))\n\n  #?(:cljs\n     (:require\n      [clojure.string :as str]\n      [cljs.core.async :as async :refer (<! >! put! chan)]\n      [taoensso.encore :as enc :refer (format swap-in! reset-in! swapped)\n       :refer-macros (have have! have?)]\n      [taoensso.timbre :as timbre :refer-macros (tracef debugf infof warnf errorf)]\n      [taoensso.sente.interfaces :as interfaces]))\n\n  #?(:cljs\n     (:require-macros\n      [cljs.core.async.macros :as asyncm :refer (go go-loop)]\n      [taoensso.sente :as sente-macros :refer (elide-require)])))\n\n(if (vector? taoensso.encore/encore-version)\n  (enc/assert-min-encore-version [2 79 1])\n  (enc/assert-min-encore-version  2.79))\n\n(def sente-version \"Useful for identifying client/server mismatch\"\n  [1 11 0])\n\n#?(:cljs (def ^:private node-target? (= *target* \"nodejs\")))\n\n;; (timbre/set-level! :trace) ; Uncomment for debugging\n(defonce debug-mode?_ (atom false))\n\n;;;; Events\n;; Clients & server both send `event`s and receive (i.e. route) `event-msg`s:\n;;   - `event`s have the same form client+server side,\n;;   - `event-msg`s have a similar but not identical form\n\n(defn- expected [expected x] {:expected expected :actual {:type (type x) :value x}})\n(defn validate-event\n  \"Returns nil if given argument is a valid [ev-id ?ev-data] form. Otherwise\n  returns a map of validation errors like `{:wrong-type {:expected _ :actual _}}`.\"\n  [x]\n  (cond\n    (not (vector? x))        {:wrong-type   (expected :vector x)}\n    (not (#{1 2} (count x))) {:wrong-length (expected #{1 2}  x)}\n    :else\n    (let [[ev-id _] x]\n      (cond\n        (not (keyword? ev-id))  {:wrong-id-type   (expected :keyword            ev-id)}\n        (not (namespace ev-id)) {:unnamespaced-id (expected :namespaced-keyword ev-id)}\n        :else nil))))\n\n(defn assert-event\n  \"Returns given argument if it is a valid [ev-id ?ev-data] form. Otherwise\n  throws a validation exception.\"\n  [x]\n  (when-let [errs (validate-event x)]\n    (throw (ex-info \"Invalid event\" {:given x :errors errs}))))\n\n(defn event? \"Valid [ev-id ?ev-data] form?\" [x] (nil? (validate-event x)))\n(defn as-event [x]\n  (if-let [errs (validate-event x)]\n    ;; [:chsk/bad-event {:given x :errors errs}] ; Breaking change\n    [:chsk/bad-event x]\n    x))\n\n(defn client-event-msg? [x]\n  (and\n    (map? x)\n    (enc/ks= #{:ch-recv :send-fn :state :event :id :?data} x)\n    (let [{:keys [ch-recv send-fn state event]} x]\n      (and\n        (enc/chan? ch-recv)\n        (ifn?      send-fn)\n        (enc/atom? state)\n        (event?    event)))))\n\n(defn server-event-msg? [x]\n  (and\n    (map? x)\n    (enc/ks= #{:ch-recv :send-fn :connected-uids\n               :ring-req :client-id\n               :event :id :?data :?reply-fn :uid} x)\n    (let [{:keys [ch-recv send-fn connected-uids\n                  ring-req client-id event ?reply-fn]} x]\n      (and\n        (enc/chan?       ch-recv)\n        (ifn?            send-fn)\n        (enc/atom?       connected-uids)\n        (map?            ring-req)\n        (enc/nblank-str? client-id)\n        (event?          event)\n        (or (nil? ?reply-fn)\n            (ifn? ?reply-fn))))))\n\n(defn- put-server-event-msg>ch-recv!\n  \"All server `event-msg`s go through this\"\n  [ch-recv {:as ev-msg :keys [event ?reply-fn]}]\n  (let [[ev-id ev-?data :as valid-event] (as-event event)\n        ev-msg* (merge ev-msg {:event     valid-event\n                               :?reply-fn ?reply-fn\n                               :id        ev-id\n                               :?data     ev-?data})]\n    (if-not (server-event-msg? ev-msg*)\n      (warnf \"Bad ev-msg: %s\" ev-msg) ; Log 'n drop\n      (put! ch-recv ev-msg*))))\n\n;;; Note that cb replys need _not_ be `event` form!\n#?(:cljs (defn cb-error? [cb-reply-clj] (#{:chsk/closed :chsk/timeout :chsk/error} cb-reply-clj)))\n#?(:cljs (defn cb-success? [cb-reply-clj] (not (cb-error? cb-reply-clj))))\n\n;;;; Packing\n;; * Client<->server payloads are arbitrary Clojure vals (cb replies or events).\n;; * Payloads are packed for client<->server transit.\n;; * Packing includes ->str encoding, and may incl. wrapping to carry cb info.\n\n(defn- unpack \"prefixed-pstr->[clj ?cb-uuid]\"\n  [packer prefixed-pstr]\n  (have? string? prefixed-pstr)\n  (let [wrapped? (enc/str-starts-with? prefixed-pstr \"+\")\n        pstr     (subs prefixed-pstr 1)\n        clj\n        (try\n          (interfaces/unpack packer pstr)\n          (catch #?(:clj Throwable :cljs :default) t\n            (debugf \"Bad package: %s (%s)\" pstr t)\n            [:chsk/bad-package pstr]))\n\n        [clj ?cb-uuid] (if wrapped? clj [clj nil])\n        ?cb-uuid (if (= 0 ?cb-uuid) :ajax-cb ?cb-uuid)]\n\n    (tracef \"Unpacking: %s -> %s\" prefixed-pstr [clj ?cb-uuid])\n    [clj ?cb-uuid]))\n\n(defn- pack \"clj->prefixed-pstr\"\n  ([packer clj]\n   (let [;; \"-\" prefix => Unwrapped (has no callback)\n         pstr (str \"-\" (interfaces/pack packer clj))]\n     (tracef \"Packing (unwrapped): %s -> %s\" clj pstr)\n     pstr))\n\n  ([packer clj ?cb-uuid]\n   (let [;;; Keep wrapping as light as possible:\n         ?cb-uuid    (if (= ?cb-uuid :ajax-cb) 0 ?cb-uuid)\n         wrapped-clj (if ?cb-uuid [clj ?cb-uuid] [clj])\n         ;; \"+\" prefix => Wrapped (has callback)\n         pstr (str \"+\" (interfaces/pack packer wrapped-clj))]\n     (tracef \"Packing (wrapped): %s -> %s\" wrapped-clj pstr)\n     pstr)))\n\n(deftype EdnPacker []\n  interfaces/IPacker\n  (pack   [_ x] (enc/pr-edn   x))\n  (unpack [_ s] (enc/read-edn s)))\n\n(def ^:private default-edn-packer (EdnPacker.))\n\n(defn- coerce-packer [x]\n  (if (= x :edn)\n    default-edn-packer\n    (have #(satisfies? interfaces/IPacker %) x)))\n\n(comment\n  (do\n    (require '[taoensso.sente.packers.transit :as transit])\n    (def ^:private default-transit-json-packer (transit/get-transit-packer)))\n\n  (let [pack   interfaces/pack\n        unpack interfaces/unpack\n        data   {:a :A :b :B :c \"hello world\"}]\n\n    (enc/qb 10000\n      (let [pk default-edn-packer]          (unpack pk (pack pk data)))\n      (let [pk default-transit-json-packer] (unpack pk (pack pk data))))))\n\n;;;; Server API\n\n(def ^:private next-idx! (enc/idx-fn))\n\n(declare\n  ^:private send-buffered-server-evs>ws-clients!\n  ^:private send-buffered-server-evs>ajax-clients!\n  ^:private default-client-side-ajax-timeout-ms)\n\n(defn make-channel-socket-server!\n  \"Takes a web server adapter[1] and returns a map with keys:\n    :ch-recv ; core.async channel to receive `event-msg`s (internal or from clients).\n    :send-fn ; (fn [user-id ev] for server>user push.\n    :ajax-post-fn                ; (fn [ring-req]) for Ring CSRF-POST + chsk URL.\n    :ajax-get-or-ws-handshake-fn ; (fn [ring-req]) for Ring GET + chsk URL.\n    :connected-uids ; Watchable, read-only (atom {:ws #{_} :ajax #{_} :any #{_}}).\n\n  Common options:\n    :user-id-fn        ; (fn [ring-req]) -> unique user-id for server>user push.\n    :csrf-token-fn     ; (fn [ring-req]) -> CSRF token for Ajax POSTs.\n    :handshake-data-fn ; (fn [ring-req]) -> arb user data to append to handshake evs.\n    :ws-kalive-ms      ; Ping to keep a WebSocket conn alive if no activity\n                       ; w/in given msecs. Should be different to client's :ws-kalive-ms.\n    :lp-timeout-ms     ; Timeout (repoll) long-polling Ajax conns after given msecs.\n    :send-buf-ms-ajax  ; [2]\n    :send-buf-ms-ws    ; [2]\n    :packer            ; :edn (default), or an IPacker implementation.\n\n  [1] e.g. `(taoensso.sente.server-adapters.http-kit/get-sch-adapter)` or\n           `(taoensso.sente.server-adapters.immutant/get-sch-adapter)`.\n      You must have the necessary web-server dependency in your project.clj and\n      the necessary entry in your namespace's `ns` form.\n\n  [2] Optimization to allow transparent batching of rapidly-triggered\n      server>user pushes. This is esp. important for Ajax clients which use a\n      (slow) reconnecting poller. Actual event dispatch may occur <= given ms\n      after send call (larger values => larger batch windows).\"\n\n  [web-server-ch-adapter\n   & [{:keys [recv-buf-or-n ws-kalive-ms lp-timeout-ms\n              send-buf-ms-ajax send-buf-ms-ws\n              user-id-fn csrf-token-fn handshake-data-fn packer]\n       :or   {recv-buf-or-n    (async/sliding-buffer 1000)\n              ws-kalive-ms     (enc/ms :secs 25) ; < Heroku 55s timeout\n              lp-timeout-ms    (enc/ms :secs 20) ; < Heroku 30s timeout\n              send-buf-ms-ajax 100\n              send-buf-ms-ws   30\n              user-id-fn    (fn [ring-req] (get-in ring-req [:session :uid]))\n              csrf-token-fn (fn [ring-req]\n                              (or (:anti-forgery-token ring-req)\n                                  (get-in ring-req [:session :csrf-token])\n                                  (get-in ring-req [:session :ring.middleware.anti-forgery/anti-forgery-token])\n                                  (get-in ring-req [:session \"__anti-forgery-token\"])))\n              handshake-data-fn (fn [ring-req] nil)\n              packer :edn}}]]\n\n  (have? enc/pos-int? send-buf-ms-ajax send-buf-ms-ws)\n  (have? #(satisfies? interfaces/IServerChanAdapter %) web-server-ch-adapter)\n\n  (let [max-ms default-client-side-ajax-timeout-ms]\n   (when (>= lp-timeout-ms max-ms)\n     (throw\n       (ex-info (str \":lp-timeout-ms must be < \" max-ms)\n         {:lp-timeout-ms lp-timeout-ms\n          :default-client-side-ajax-timeout-ms max-ms}))))\n\n  (let [packer  (coerce-packer packer)\n        ch-recv (chan recv-buf-or-n)\n\n        user-id-fn\n        (fn [ring-req client-id]\n          ;; Allow uid to depend (in part or whole) on client-id. Be cautious\n          ;; of security implications.\n          (or (user-id-fn (assoc ring-req :client-id client-id)) ::nil-uid))\n\n        ;; :ws udts used for ws-kalive (to check for activity in window period)\n        ;; :ajax udts used for lp-timeout (as a way to check active conn identity)\n        conns_          (atom {:ws  {} :ajax  {}}) ; {<uid> {<client-id> [<?sch> <udt>]}}\n        send-buffers_   (atom {:ws  {} :ajax  {}}) ; {<uid> [<buffered-evs> <#{ev-uuids}>]}\n        connected-uids_ (atom {:ws #{} :ajax #{} :any #{}}) ; Public\n\n        upd-conn!\n        (fn\n          ([conn-type uid client-id] ; Update udt\n           (swap-in! conns_ [conn-type uid client-id]\n             (fn [?v]\n               (let [[?sch _udt] ?v\n                     new-udt (enc/now-udt)]\n                 (enc/swapped\n                   [?sch new-udt]\n                   {:init? (nil? ?v) :udt new-udt :?sch ?sch})))))\n\n          ([conn-type uid client-id new-?sch] ; Update sch + udt\n           (swap-in! conns_ [conn-type uid client-id]\n             (fn [?v]\n               (let [new-udt (enc/now-udt)]\n                 (enc/swapped\n                   [new-?sch new-udt]\n                   {:init? (nil? ?v) :udt new-udt :?sch new-?sch}))))))\n\n        connect-uid!\n        (fn [conn-type uid] {:pre [(have? uid)]}\n          (let [newly-connected?\n                (swap-in! connected-uids_ []\n                  (fn [{:keys [ws ajax any] :as old-m}]\n                    (let [new-m\n                          (case conn-type\n                            :ws   {:ws (conj ws uid) :ajax ajax            :any (conj any uid)}\n                            :ajax {:ws ws            :ajax (conj ajax uid) :any (conj any uid)})]\n                      (swapped new-m\n                        (let [old-any (:any old-m)\n                              new-any (:any new-m)]\n                          (when (and (not (contains? old-any uid))\n                                          (contains? new-any uid))\n                            :newly-connected))))))]\n            newly-connected?))\n\n        upd-connected-uid!\n        (fn [uid] {:pre [(have? uid)]}\n          (let [newly-disconnected?\n                (swap-in! connected-uids_ []\n                  (fn [{:keys [ws ajax any] :as old-m}]\n                    (let [conns' @conns_\n                          any-ws-clients?   (contains? (:ws   conns') uid)\n                          any-ajax-clients? (contains? (:ajax conns') uid)\n                          any-clients?      (or any-ws-clients?\n                                                any-ajax-clients?)\n                          new-m\n                          {:ws   (if any-ws-clients?   (conj ws   uid) (disj ws   uid))\n                           :ajax (if any-ajax-clients? (conj ajax uid) (disj ajax uid))\n                           :any  (if any-clients?      (conj any  uid) (disj any  uid))}]\n\n                      (swapped new-m\n                        (let [old-any (:any old-m)\n                              new-any (:any new-m)]\n                          (when (and      (contains? old-any uid)\n                                     (not (contains? new-any uid)))\n                            :newly-disconnected))))))]\n\n            newly-disconnected?))\n\n        send-fn ; server>user (by uid) push\n        (fn [user-id ev & [{:as opts :keys [flush?]}]]\n          (let [uid (if (= user-id :sente/all-users-without-uid) ::nil-uid user-id)\n                _   (tracef \"Chsk send: (->uid %s) %s\" uid ev)\n                _   (assert uid\n                    (str \"Support for sending to `nil` user-ids has been REMOVED. \"\n                         \"Please send to `:sente/all-users-without-uid` instead.\"))\n                _   (assert-event ev)\n\n                ev-uuid (enc/uuid-str)\n\n                flush-buffer!\n                (fn [conn-type]\n                  (when-let\n                      [pulled\n                       (swap-in! send-buffers_ [conn-type]\n                         (fn [m]\n                           ;; Don't actually flush unless the event buffered\n                           ;; with _this_ send call is still buffered (awaiting\n                           ;; flush). This means that we'll have many (go\n                           ;; block) buffer flush calls that'll noop. They're\n                           ;; cheap, and this approach is preferable to\n                           ;; alternatives like flush workers.\n                           (let [[_ ev-uuids] (get m uid)]\n                             (if (contains? ev-uuids ev-uuid)\n                               (swapped (dissoc m uid)\n                                        (get    m uid))\n                               (swapped m nil)))))]\n\n                    (let [[buffered-evs ev-uuids] pulled]\n                      (have? vector? buffered-evs)\n                      (have? set?    ev-uuids)\n\n                      (let [buffered-evs-ppstr (pack packer buffered-evs)]\n                        (tracef \"buffered-evs-ppstr: %s\" buffered-evs-ppstr)\n                        (case conn-type\n                          :ws   (send-buffered-server-evs>ws-clients! conns_\n                                  uid buffered-evs-ppstr upd-conn!)\n                          :ajax (send-buffered-server-evs>ajax-clients! conns_\n                                  uid buffered-evs-ppstr))))))]\n\n            (if (= ev [:chsk/close]) ; Currently undocumented\n              (do\n                (debugf \"Chsk closing (client may reconnect): %s\" uid)\n                (when flush?\n                  (flush-buffer! :ws)\n                  (flush-buffer! :ajax))\n\n                (doseq [[?sch _udt] (vals (get-in @conns_ [:ws uid]))]\n                  (when-let [sch ?sch] (interfaces/sch-close! sch)))\n\n                (doseq [[?sch _udt] (vals (get-in @conns_ [:ajax uid]))]\n                  (when-let [sch ?sch] (interfaces/sch-close! sch))))\n\n              (do\n                ;; Buffer event\n                (doseq [conn-type [:ws :ajax]]\n                  (swap-in! send-buffers_ [conn-type uid]\n                    (fn [?v]\n                      (if-not ?v\n                        [[ev] #{ev-uuid}]\n                        (let [[buffered-evs ev-uuids] ?v]\n                          [(conj buffered-evs ev)\n                           (conj ev-uuids     ev-uuid)])))))\n\n                ;;; Flush event buffers after relevant timeouts:\n                ;; * May actually flush earlier due to another timeout.\n                ;; * We send to _all_ of a uid's connections.\n                ;; * Broadcasting is possible but I'd suggest doing it rarely,\n                ;;   and only to users we know/expect are actually online.\n                ;;\n                (if flush?\n                  (do\n                    (flush-buffer! :ws)\n                    (flush-buffer! :ajax))\n                  (let [ws-timeout   (async/timeout send-buf-ms-ws)\n                        ajax-timeout (async/timeout send-buf-ms-ajax)]\n                    (go\n                      (<! ws-timeout)\n                      (flush-buffer! :ws))\n                    (go\n                      (<! ajax-timeout)\n                      (flush-buffer! :ajax)))))))\n\n          ;; Server-side send is async so nothing useful to return (currently\n          ;; undefined):\n          nil)\n\n        ev-msg-const\n        {:ch-recv        ch-recv\n         :send-fn        send-fn\n         :connected-uids connected-uids_}]\n\n    {:ch-recv        ch-recv\n     :send-fn        send-fn\n     :connected-uids connected-uids_\n\n     ;; Does not participate in `conns_` (has specific req->resp)\n     :ajax-post-fn\n     (fn [ring-req]\n       (interfaces/ring-req->server-ch-resp web-server-ch-adapter ring-req\n         {:on-open\n          (fn [server-ch websocket?]\n            (assert (not websocket?))\n            (let [params        (get ring-req :params)\n                  ppstr         (get params   :ppstr)\n                  client-id     (get params   :client-id)\n                  [clj has-cb?] (unpack packer ppstr)\n                  reply-fn\n                  (let [replied?_ (atom false)]\n                    (fn [resp-clj] ; Any clj form\n                      (when (compare-and-set! replied?_ false true)\n                        (tracef \"Chsk send (ajax post reply): %s\" resp-clj)\n                        (interfaces/sch-send! server-ch websocket?\n                          (pack packer resp-clj)))))]\n\n              (put-server-event-msg>ch-recv! ch-recv\n                (merge ev-msg-const\n                  {;; Note that the client-id is provided here just for the\n                   ;; user's convenience. non-lp-POSTs don't actually need a\n                   ;; client-id for Sente's own implementation:\n                   :client-id client-id #_\"unnecessary-for-non-lp-POSTs\"\n                   :ring-req  ring-req\n                   :event     clj\n                   :uid       (user-id-fn ring-req client-id)\n                   :?reply-fn (when has-cb? reply-fn)}))\n\n              (if has-cb?\n                (when-let [ms lp-timeout-ms]\n                  (go\n                    (<! (async/timeout ms))\n                    (reply-fn :chsk/timeout)))\n                (reply-fn :chsk/dummy-cb-200))))}))\n\n     ;; Ajax handshake/poll, or WebSocket handshake\n     :ajax-get-or-ws-handshake-fn\n     (fn [ring-req]\n       (let [sch-uuid   (enc/uuid-str 6)\n             params     (get ring-req :params)\n             client-id  (get params   :client-id)\n             csrf-token (csrf-token-fn ring-req)\n             uid        (user-id-fn    ring-req client-id)\n\n             receive-event-msg! ; Partial\n             (fn self\n               ([event          ] (self event nil))\n               ([event ?reply-fn]\n                (put-server-event-msg>ch-recv! ch-recv\n                  (merge ev-msg-const\n                    {:client-id client-id\n                     :ring-req  ring-req\n                     :event     event\n                     :?reply-fn ?reply-fn\n                     :uid       uid}))))\n\n             send-handshake!\n             (fn [server-ch websocket?]\n               (tracef \"send-handshake!\")\n               (let [?handshake-data (handshake-data-fn ring-req)\n                     handshake-ev\n                     (if (nil? ?handshake-data) ; Micro optimization\n                       [:chsk/handshake [uid csrf-token]]\n                       [:chsk/handshake [uid csrf-token ?handshake-data]])]\n                 (interfaces/sch-send! server-ch websocket?\n                   (pack packer handshake-ev))))]\n\n         (if (str/blank? client-id)\n           (let [err-msg \"Client's Ring request doesn't have a client id. Does your server have the necessary keyword Ring middleware (`wrap-params` & `wrap-keyword-params`)?\"]\n             (errorf (str err-msg \": %s\") ring-req) ; Careful re: % in req\n             (throw (ex-info err-msg {:ring-req ring-req})))\n\n           (interfaces/ring-req->server-ch-resp web-server-ch-adapter ring-req\n             {:on-open\n              (fn [server-ch websocket?]\n                (if websocket?\n\n                  ;; WebSocket handshake\n                  (let [_ (tracef \"New WebSocket channel: %s (%s)\" uid sch-uuid)\n                        updated-conn (upd-conn! :ws uid client-id server-ch)\n                        udt-open     (:udt updated-conn)]\n\n                    (when (connect-uid! :ws uid)\n                      (receive-event-msg! [:chsk/uidport-open uid]))\n\n                    (send-handshake! server-ch websocket?)\n\n                    ;; Start ws-kalive loop\n                    ;; This also works to gc ws conns that were suddenly\n                    ;; terminated (e.g. by turning on airplane mode)\n                    (when-let [ms ws-kalive-ms]\n                      (go-loop [udt-t0 udt-open]\n                        (<! (async/timeout ms))\n                        (when-let [[_sch udt-t1] (get-in @conns_ [:ws uid client-id])]\n                          (when (interfaces/sch-open? server-ch)\n                            ;; (assert (= _sch server-ch))\n                            (when (= udt-t1 udt-t0)\n                              ;; Ref. issue #230:\n                              ;; We've seen no send/recv activity on this\n                              ;; conn w/in our kalive window so send a ping\n                              ;; ->client (should auto-close conn if it's\n                              ;; gone dead).\n                              (interfaces/sch-send! server-ch websocket?\n                                (pack packer :chsk/ws-ping)))\n                            (recur udt-t1))))))\n\n                  ;; Ajax handshake/poll\n                  (let [_ (tracef \"New Ajax handshake/poll: %s (%s)\" uid sch-uuid)\n                        updated-conn (upd-conn! :ajax uid client-id server-ch)\n                        udt-open     (:udt updated-conn)\n                        handshake?   (or (:init? updated-conn) (:handshake? params))]\n\n                    (when (connect-uid! :ajax uid)\n                      (receive-event-msg! [:chsk/uidport-open uid]))\n\n                    (if handshake?\n                      ; Client will immediately repoll\n                      (send-handshake! server-ch websocket?)\n\n                      (when-let [ms lp-timeout-ms]\n                        (go\n                          (<! (async/timeout ms))\n                          (when-let [[_sch udt-t1] (get-in @conns_ [:ajax uid client-id])]\n                            (when (= udt-t1 udt-open)\n                              ;; (assert (= _sch server-ch))\n                              ;; Appears to still be the active sch\n                              (interfaces/sch-send! server-ch websocket?\n                                (pack packer :chsk/timeout))))))))))\n\n              :on-msg\n              (fn [server-ch websocket? req-ppstr]\n                (assert websocket?)\n                (upd-conn! :ws uid client-id)\n                (let [[clj ?cb-uuid] (unpack packer req-ppstr)]\n                  (receive-event-msg! clj ; Should be ev\n                    (when ?cb-uuid\n                      (fn reply-fn [resp-clj] ; Any clj form\n                        (tracef \"Chsk send (ws reply): %s\" resp-clj)\n                        ;; true iff apparent success:\n                        (interfaces/sch-send! server-ch websocket?\n                          (pack packer resp-clj ?cb-uuid)))))))\n\n              :on-close ; We rely on `on-close` to trigger for _every_ conn!\n              (fn [server-ch websocket? _status]\n                ;; Note that `status` type varies with underlying web server\n                (let [conn-type (if websocket? :ws :ajax)\n                      _ (tracef \"%s channel closed: %s (%s)\"\n                          (if websocket? \"WebSocket\" \"Ajax\")\n                          uid sch-uuid)\n\n                      updated-conn (upd-conn! conn-type uid client-id nil)\n                      udt-close    (:udt updated-conn)]\n\n                  ;; Allow some time for possible reconnects (repoll,\n                  ;; sole window refresh, etc.):\n                  (go\n                    (<! (async/timeout 5000))\n                    (let [[_?sch udt-t1] (get-in @conns_ [conn-type uid client-id])]\n\n                      (when @debug-mode?_\n                        (debugf \"close-timeout: %s %s %s %s\" conn-type uid\n                          sch-uuid [(= udt-t1 udt-close) udt-t1 udt-close]))\n\n                      (when (= udt-t1 udt-close)\n                        (let [disconnect? ; Removed entry for client-id?\n                              (swap-in! conns_ [conn-type uid client-id]\n                                (fn [[_sch udt-t1]]\n                                  (if (= udt-t1 udt-close)\n                                    (swapped :swap/dissoc true)\n                                    (swapped udt-t1       false))))]\n\n                          (when disconnect?\n\n                            ;; Potentially remove entry for uid\n                            (swap-in! conns_ [conn-type uid]\n                              (fn [?m] (if (empty? ?m) :swap/dissoc ?m)))\n\n                            (when (upd-connected-uid! uid)\n                              (receive-event-msg! [:chsk/uidport-close uid])))))))))\n\n              :on-error\n              (fn [server-ch websocket? error]\n                (errorf \"ring-req->server-ch-resp error: %s (%s)\"\n                  error uid sch-uuid))}))))}))\n\n(defn- send-buffered-server-evs>ws-clients!\n  \"Actually pushes buffered events (as packed-str) to all uid's WebSocket conns.\"\n  [conns_ uid buffered-evs-pstr upd-conn!]\n  (tracef \"send-buffered-server-evs>ws-clients!: %s\" buffered-evs-pstr)\n  (doseq [[client-id [?sch _udt]] (get-in @conns_ [:ws uid])]\n    (when-let [sch ?sch]\n      (upd-conn! :ws uid client-id)\n      (interfaces/sch-send! sch :websocket buffered-evs-pstr))))\n\n(defn- send-buffered-server-evs>ajax-clients!\n  \"Actually pushes buffered events (as packed-str) to all uid's Ajax conns.\n  Allows some time for possible Ajax poller reconnects.\"\n  [conns_ uid buffered-evs-pstr]\n  (tracef \"send-buffered-server-evs>ajax-clients!: %s\" buffered-evs-pstr)\n  (let [ms-backoffs [90 180 360 720 1440] ; Mean 2790s\n        ;; All connected/possibly-reconnecting client uuids:\n        client-ids-unsatisfied (keys (get-in @conns_ [:ajax uid]))]\n\n    (when-not (empty? client-ids-unsatisfied)\n      ;; (tracef \"client-ids-unsatisfied: %s\" client-ids-unsatisfied)\n      (go-loop [n 0 client-ids-satisfied #{}]\n        (let [?pulled ; nil or {<client-id> [<?sch> <udt>]}\n              (swap-in! conns_ [:ajax uid]\n                (fn [m] ; {<client-id> [<?sch> <udt>]}\n                  (let [ks-to-pull (remove client-ids-satisfied (keys m))]\n                    ;; (tracef \"ks-to-pull: %s\" ks-to-pull)\n                    (if (empty? ks-to-pull)\n                      (swapped m nil)\n                      (swapped\n                        (reduce\n                          (fn [m k]\n                            (let [[?sch udt] (get m k)]\n                              ;; Nb don't change udt; for Ajax conns_ we only\n                              ;; want udt updated on poll or close, not on\n                              ;; activity (as with ws conns_)\n                              (assoc m k [nil udt #_(enc/now-udt)])))\n\n                          m ks-to-pull)\n                        (select-keys m ks-to-pull))))))]\n\n          (have? [:or nil? map?] ?pulled)\n\n          (let [?newly-satisfied\n                (when ?pulled\n                  (reduce-kv\n                    (fn [s client-id [?sch _udt]]\n                      (let [sent?\n                            (when-let [sch ?sch]\n                              ;; Will noop + return false if sch already closed:\n                              (interfaces/sch-send! ?sch (not :websocket)\n                                buffered-evs-pstr))]\n\n                        (if sent? (conj s client-id) s)))\n                    #{} ?pulled))\n\n                now-satisfied (into client-ids-satisfied ?newly-satisfied)]\n\n            ;; (tracef \"now-satisfied: %s\" now-satisfied)\n            (when-let [ms-backoff (get ms-backoffs n)]\n              (when (enc/rsome (complement now-satisfied) client-ids-unsatisfied)\n                (let [ms-timeout (+ ms-backoff (rand-int ms-backoff))]\n                  ;; Allow some time for possible poller reconnects:\n                  (<! (async/timeout ms-timeout))\n                  (recur (inc n) now-satisfied))))))))))\n\n;;;; Client API\n\n#?(:cljs (def ajax-lite \"Alias of `taoensso.encore/ajax-lite`\" enc/ajax-lite))\n#?(:cljs\n   (defprotocol IChSocket\n     (-chsk-connect!    [chsk])\n     (-chsk-disconnect! [chsk reason])\n     (-chsk-reconnect!  [chsk])\n     (-chsk-send!       [chsk ev opts])))\n\n#?(:cljs\n   (do\n     (defn chsk-connect!    [chsk] (-chsk-connect!    chsk))\n     (defn chsk-disconnect! [chsk] (-chsk-disconnect! chsk :requested-disconnect))\n     (defn chsk-reconnect! \"Useful for reauthenticating after login/logout, etc.\"\n       [chsk] (-chsk-reconnect! chsk))\n     (def chsk-destroy! \"Deprecated\" chsk-disconnect!)))\n\n#?(:cljs\n   (defn chsk-send!\n     \"Sends `[ev-id ev-?data :as event]`, returns true on apparent success.\"\n     ([chsk ev] (chsk-send! chsk ev {}))\n     ([chsk ev ?timeout-ms ?cb] (chsk-send! chsk ev {:timeout-ms ?timeout-ms\n                                                     :cb         ?cb}))\n     ([chsk ev opts]\n      (tracef \"Chsk send: (%s) %s\" (assoc opts :cb (boolean (:cb opts))) ev)\n      (-chsk-send! chsk ev opts))))\n\n#?(:cljs\n   (defn- chsk-send->closed! [?cb-fn]\n     (warnf \"Chsk send against closed chsk.\")\n     (when ?cb-fn (?cb-fn :chsk/closed))\n     false))\n\n#?(:cljs\n   (defn- assert-send-args [x ?timeout-ms ?cb]\n     (assert-event x)\n     (assert (or (and (nil? ?timeout-ms) (nil? ?cb))\n                 (and (enc/nat-int? ?timeout-ms)))\n             (str \"cb requires a timeout; timeout-ms should be a +ive integer: \" ?timeout-ms))\n     (assert (or (nil? ?cb) (ifn? ?cb) (enc/chan? ?cb))\n             (str \"cb should be nil, an ifn, or a channel: \" (type ?cb)))))\n\n#?(:cljs\n   (defn- pull-unused-cb-fn! [cbs-waiting_ ?cb-uuid]\n     (when-let [cb-uuid ?cb-uuid]\n       (swap-in! cbs-waiting_ [cb-uuid]\n                 (fn [?f] (swapped :swap/dissoc ?f))))))\n\n#?(:cljs\n   (defn- swap-chsk-state!\n     \"Atomically swaps the value of chk's :state_ atom.\"\n     [chsk f]\n     (let [[old-state new-state]\n           (swap-in! (:state_ chsk)\n             (fn [old-state]\n               (let [new-state (f old-state)\n                     new-state\n                     (if (:first-open? old-state)\n                       (assoc new-state :first-open? false)\n                       new-state)\n\n                     new-state\n                     (if (:open? new-state)\n                       (dissoc new-state :udt-next-reconnect)\n                       new-state)]\n\n                 (swapped new-state [old-state new-state]))))]\n\n       (when (not= old-state new-state)\n         (let [output [old-state new-state]]\n           ;; (debugf \"Chsk state change: %s\" output)\n           (put! (get-in chsk [:chs :state]) [:chsk/state output])\n           output)))))\n\n#?(:cljs\n   (defn- chsk-state->closed [state reason]\n     (have? map? state)\n     (have? [:el #{:requested-disconnect\n                   :requested-reconnect\n                   :downgrading-ws-to-ajax\n                   :unexpected}] reason)\n     (if (or (:open? state) (not= reason :unexpected))\n       (-> state\n           (dissoc :udt-next-reconnect)\n           (assoc\n             :open? false\n             :last-close {:udt (enc/now-udt) :reason reason}))\n       state)))\n\n#?(:cljs\n   (defn- cb-chan-as-fn\n     \"Experimental, undocumented. Allows a core.async channel to be provided\n     instead of a cb-fn. The channel will receive values of form\n     [<event-id>.cb <reply>].\"\n     [?cb ev]\n     (if (or (nil? ?cb) (ifn? ?cb))\n       ?cb\n       (do\n         (have? enc/chan? ?cb)\n         (assert-event ev)\n         (let [[ev-id _] ev\n               cb-ch ?cb]\n           (fn [reply]\n             (put! cb-ch\n               [(keyword (str (enc/as-qname ev-id) \".cb\"))\n                reply])))))))\n\n#?(:cljs\n   (defn- receive-buffered-evs! [chs clj]\n     (tracef \"receive-buffered-evs!: %s\" clj)\n     (let [buffered-evs (have vector? clj)]\n       (doseq [ev buffered-evs]\n         (assert-event ev)\n         ;; Should never receive :chsk/* events from server here:\n         (let [[id] ev] (assert (not= (namespace id) \"chsk\")))\n         (put! (:<server chs) ev)))))\n\n#?(:cljs\n   (defn- handshake? [x]\n     (and (vector? x) ; Nb support arb input (e.g. cb replies)\n          (let [[x1] x] (= x1 :chsk/handshake)))))\n\n#?(:cljs\n   (defn- receive-handshake! [chsk-type chsk clj]\n     (have? [:el #{:ws :ajax}] chsk-type)\n     (have? handshake? clj)\n     (tracef \"receive-handshake! (%s): %s\" chsk-type clj)\n     (let [[_ [?uid ?csrf-token ?handshake-data]] clj\n           {:keys [chs ever-opened?_]} chsk\n           first-handshake? (compare-and-set! ever-opened?_ false true)\n           new-state\n           {:type           chsk-type ; :auto -> e/o #{:ws :ajax}, etc.\n            :open?          true\n            :ever-opened?   true\n            :uid            ?uid\n            :csrf-token     ?csrf-token\n            :handshake-data ?handshake-data\n            :first-open?    first-handshake?}\n\n           handshake-ev\n           [:chsk/handshake\n            [?uid ?csrf-token ?handshake-data first-handshake?]]]\n\n       (assert-event handshake-ev)\n       (when (str/blank? ?csrf-token)\n         (warnf \"SECURITY WARNING: no CSRF token available for use by Sente\"))\n\n       (swap-chsk-state! chsk #(merge % new-state))\n       (put! (:internal chs) handshake-ev)\n\n       :handled)))\n\n#?(:clj\n   (defmacro ^:private elide-require\n    \"Experimental. The presence of `js/require` calls can cause issues with\n    React Native, even if they never execute. Currently no other known\n    workarounds. Ref. https://github.com/ptaoussanis/sente/issues/247.\"\n     [& body]\n     (when-not (enc/get-sys-val \"SENTE_ELIDE_JS_REQUIRE\")\n       `(do ~@body))))\n\n#?(:cljs\n   (def ^:private ?node-npm-websocket_\n     \"nnil iff the websocket npm library[1] is available.\n     Easiest way to install:\n       1. Add the lein-npm[2] plugin to your `project.clj`,\n       2. Add: `:npm {:dependencies [[websocket \\\"1.0.23\\\"]]}`\n\n     [1] Ref. https://www.npmjs.com/package/websocket\n     [2] Ref. https://github.com/RyanMcG/lein-npm\"\n     (delay ; Eager eval causes issues with React Native, Ref. #247,\n       (elide-require\n         (when (and node-target? (exists? js/require))\n           (try\n             (js/require \"websocket\")\n             ;; In particular, catch 'UnableToResolveError'\n             (catch :default e\n               ;; (errorf e \"Unable to load npm websocket lib\")\n               nil)))))))\n\n#?(:cljs\n   (defrecord ChWebSocket\n     ;; WebSocket-only IChSocket implementation\n     ;; Handles (re)connections, cbs, etc.\n\n     [client-id chs params packer url ws-kalive-ms\n      state_ ; {:type _ :open? _ :uid _ :csrf-token _ ...}\n      instance-handle_ retry-count_ ever-opened?_\n      backoff-ms-fn ; (fn [nattempt]) -> msecs\n      cbs-waiting_ ; {<cb-uuid> <fn> ...}\n      socket_\n      udt-last-comms_]\n\n     IChSocket\n     (-chsk-disconnect! [chsk reason]\n       (reset! instance-handle_ nil) ; Disable auto retry\n       (swap-chsk-state! chsk #(chsk-state->closed % reason))\n       (when-let [s @socket_] (.close s 1000 \"CLOSE_NORMAL\")))\n\n     (-chsk-reconnect! [chsk]\n       (-chsk-disconnect! chsk :requested-reconnect)\n       (-chsk-connect!    chsk))\n\n     (-chsk-send! [chsk ev opts]\n       (let [{?timeout-ms :timeout-ms ?cb :cb :keys [flush?]} opts\n             _ (assert-send-args ev ?timeout-ms ?cb)\n             ?cb-fn (cb-chan-as-fn ?cb ev)]\n         (if-not (:open? @state_) ; Definitely closed\n           (chsk-send->closed! ?cb-fn)\n\n           ;; TODO Buffer before sending (but honor `:flush?`)\n           (let [?cb-uuid (when ?cb-fn (enc/uuid-str 6))\n                 ppstr (pack packer ev ?cb-uuid)]\n\n             (when-let [cb-uuid ?cb-uuid]\n               (reset-in! cbs-waiting_ [cb-uuid] (have ?cb-fn))\n               (when-let [timeout-ms ?timeout-ms]\n                 (go\n                   (<! (async/timeout timeout-ms))\n                   (when-let [cb-fn* (pull-unused-cb-fn! cbs-waiting_ ?cb-uuid)]\n                     (cb-fn* :chsk/timeout)))))\n\n             (try\n               (.send @socket_ ppstr)\n               (reset! udt-last-comms_ (enc/now-udt))\n               :apparent-success\n               (catch :default e\n                 (errorf e \"Chsk send error\")\n                 (when-let [cb-uuid ?cb-uuid]\n                   (let [cb-fn* (or (pull-unused-cb-fn! cbs-waiting_ cb-uuid)\n                                    (have ?cb-fn))]\n                     (cb-fn* :chsk/error)))\n                 false))))))\n\n     (-chsk-connect! [chsk]\n       (when-let [WebSocket\n                  (or\n                    (enc/oget goog/global    \"WebSocket\")\n                    (enc/oget goog/global \"MozWebSocket\")\n                    (enc/oget @?node-npm-websocket_ \"w3cwebsocket\"))]\n\n         (let [instance-handle (reset! instance-handle_ (enc/uuid-str))\n               have-handle? (fn [] (= @instance-handle_ instance-handle))\n               connect-fn\n               (fn connect-fn []\n                 (when (have-handle?)\n                   (let [retry-fn\n                         (fn [] ; Backoff then recur\n                           (when (have-handle?)\n                             (let [retry-count* (swap! retry-count_ inc)\n                                   backoff-ms (backoff-ms-fn retry-count*)\n                                   udt-next-reconnect (+ (enc/now-udt) backoff-ms)]\n                               (warnf \"Chsk is closed: will try reconnect attempt (%s) in %s ms\"\n                                 retry-count* backoff-ms)\n                               (.setTimeout goog/global connect-fn backoff-ms)\n                               (swap-chsk-state! chsk\n                                 #(assoc % :udt-next-reconnect udt-next-reconnect)))))\n\n                         ?socket\n                         (try\n                           (WebSocket.\n                             (enc/merge-url-with-query-string url\n                               (merge params ; 1st (don't clobber impl.):\n                                 {:client-id client-id})))\n\n                           (catch :default e\n                             (errorf e \"WebSocket error\")\n                             nil))]\n\n                     (if-not ?socket\n                       (retry-fn) ; Couldn't even get a socket\n\n                       (reset! socket_\n                         (doto ?socket\n                           (aset \"onerror\"\n                             (fn [ws-ev]\n                               (errorf ; ^:meta {:raw-console? true}\n                                 \"WebSocket error: %s\"\n                                 (try\n                                   (js->clj ws-ev)\n                                   (catch :default _ ws-ev)))\n\n                               (let [last-ws-error {:udt (enc/now-udt), :ev ws-ev}]\n                                 (swap-chsk-state! chsk\n                                   #(assoc % :last-ws-error last-ws-error)))))\n\n                           (aset \"onmessage\" ; Nb receives both push & cb evs!\n                             (fn [ws-ev]\n                               (let [ppstr (enc/oget ws-ev \"data\")\n\n                                     ;; `clj` may/not satisfy `event?` since\n                                     ;; we also receive cb replies here. This\n                                     ;; is why we prefix pstrs to indicate\n                                     ;; whether they're wrapped or not\n                                     [clj ?cb-uuid] (unpack packer ppstr)]\n\n                                 (reset! udt-last-comms_ (enc/now-udt))\n\n                                 (or\n                                   (when (handshake? clj)\n                                     (receive-handshake! :ws chsk clj)\n                                     (reset! retry-count_ 0)\n                                     :handshake)\n\n                                   (when (= clj :chsk/ws-ping)\n                                     (put! (:<server chs) [:chsk/ws-ping])\n                                     :noop)\n\n                                   (if-let [cb-uuid ?cb-uuid]\n                                     (if-let [cb-fn (pull-unused-cb-fn! cbs-waiting_\n                                                      cb-uuid)]\n                                       (cb-fn clj)\n                                       (warnf \"Cb reply w/o local cb-fn: %s\" clj))\n                                     (let [buffered-evs clj]\n                                       (receive-buffered-evs! chs buffered-evs)))))))\n\n                           ;; Fires repeatedly (on each connection attempt) while\n                           ;; server is down:\n                           (aset \"onclose\"\n                             (fn [ws-ev]\n                               (let [clean? (enc/oget ws-ev \"wasClean\")\n                                     code   (enc/oget ws-ev \"code\")\n                                     reason (enc/oget ws-ev \"reason\")\n                                     last-ws-close\n                                     {:udt    (enc/now-udt)\n                                      :ev     ws-ev\n                                      :clean? clean?\n                                      :code   code\n                                      :reason reason}]\n\n                                 ;; Firefox calls \"onclose\" while unloading,\n                                 ;; Ref. http://goo.gl/G5BYbn:\n                                 (if clean?\n                                   (do\n                                     (debugf \"Clean WebSocket close, will not attempt reconnect\")\n                                     (swap-chsk-state! chsk\n                                       #(assoc % :last-ws-close last-ws-close)))\n                                   (do\n                                     (swap-chsk-state! chsk\n                                       #(assoc (chsk-state->closed % :unexpected)\n                                          :last-ws-close last-ws-close))\n                                     (retry-fn))))))))))))]\n\n           (when-let [ms ws-kalive-ms]\n             (go-loop []\n               (let [udt-t0 @udt-last-comms_]\n                 (<! (async/timeout ms))\n                 (when (have-handle?)\n                   (let [udt-t1 @udt-last-comms_]\n                     (when (= udt-t0 udt-t1)\n                       ;; Ref. issue #259:\n                       ;; We've seen no send/recv activity on this\n                       ;; conn w/in our kalive window so send a ping\n                       ;; ->server (should auto-close conn if it's\n                       ;; gone dead). The server generally sends pings so\n                       ;; this should be rare. Mostly here to help clients\n                       ;; identify conns that were suddenly dropped.\n\n                       (-chsk-send! chsk [:chsk/ws-ping] {:flush? true})))\n                   (recur)))))\n\n           (reset! retry-count_ 0)\n           (connect-fn)\n           chsk)))))\n\n#?(:cljs\n   (defn- new-ChWebSocket [opts]\n     (map->ChWebSocket\n       (merge\n         {:state_ (atom {:type :ws :open? false :ever-opened? false})\n          :instance-handle_ (atom nil)\n          :retry-count_     (atom 0)\n          :ever-opened?_    (atom false)\n          :cbs-waiting_     (atom {})\n          :socket_          (atom nil)\n          :udt-last-comms_  (atom nil)}\n         opts))))\n\n(def ^:private default-client-side-ajax-timeout-ms\n  \"We must set *some* client-side timeout otherwise an unpredictable (and\n  probably too short) browser default will be used. Must be > server's\n  :lp-timeout-ms.\"\n  (enc/ms :secs 60))\n\n#?(:cljs\n   (defrecord ChAjaxSocket\n     ;; Ajax-only IChSocket implementation\n     ;; Handles (re)polling, etc.\n\n     [client-id chs params packer url state_\n      instance-handle_ ever-opened?_\n      backoff-ms-fn\n      ajax-opts curr-xhr_]\n\n     IChSocket\n     (-chsk-disconnect! [chsk reason]\n       (reset! instance-handle_ nil) ; Disable auto retry\n       (swap-chsk-state! chsk #(chsk-state->closed % reason))\n       (when-let [x @curr-xhr_] (.abort x)))\n\n     (-chsk-reconnect! [chsk]\n       (-chsk-disconnect! chsk :requested-reconnect)\n       (-chsk-connect!    chsk))\n\n     (-chsk-send! [chsk ev opts]\n       (let [{?timeout-ms :timeout-ms ?cb :cb :keys [flush?]} opts\n             _ (assert-send-args ev ?timeout-ms ?cb)\n             ?cb-fn (cb-chan-as-fn ?cb ev)]\n         (if-not (:open? @state_) ; Definitely closed\n           (chsk-send->closed! ?cb-fn)\n\n           ;; TODO Buffer before sending (but honor `:flush?`)\n           (let [csrf-token (:csrf-token @state_)]\n             (ajax-lite url\n               (merge ajax-opts\n                 {:method     :post\n                  :timeout-ms (or ?timeout-ms (:timeout-ms ajax-opts)\n                                  default-client-side-ajax-timeout-ms)\n                  :resp-type  :text ; We'll do our own pstr decoding\n                  :headers\n                  (merge (:headers ajax-opts) ; 1st (don't clobber impl.):\n                    {:X-CSRF-Token csrf-token})\n\n                  :params\n                  (let [ppstr (pack packer ev (when ?cb-fn :ajax-cb))]\n                    (merge params ; 1st (don't clobber impl.):\n                      {:udt        (enc/now-udt) ; Force uncached resp\n\n                       ;; A duplicate of X-CSRF-Token for user's convenience\n                       ;; and for back compatibility with earlier CSRF docs:\n                       :csrf-token csrf-token\n\n                       ;; Just for user's convenience here. non-lp-POSTs\n                       ;; don't actually need a client-id for Sente's own\n                       ;; implementation:\n                       :client-id  client-id\n\n                       :ppstr      ppstr}))})\n\n               (fn ajax-cb [{:keys [?error ?content]}]\n                 (if ?error\n                   (if (= ?error :timeout)\n                     (when ?cb-fn (?cb-fn :chsk/timeout))\n                     (do\n                       (swap-chsk-state! chsk\n                         #(chsk-state->closed % :unexpected))\n                       (when ?cb-fn (?cb-fn :chsk/error))))\n\n                   (let [content ?content\n                         resp-ppstr content\n                         [resp-clj _] (unpack packer resp-ppstr)]\n                     (if ?cb-fn\n                       (?cb-fn resp-clj)\n                       (when (not= resp-clj :chsk/dummy-cb-200)\n                         (warnf \"Cb reply w/o local cb-fn: %s\" resp-clj)))\n                     (swap-chsk-state! chsk #(assoc % :open? true))))))\n\n             :apparent-success))))\n\n     (-chsk-connect! [chsk]\n       (let [instance-handle (reset! instance-handle_ (enc/uuid-str))\n             have-handle? (fn [] (= @instance-handle_ instance-handle))\n             poll-fn ; async-poll-for-update-fn\n             (fn poll-fn [retry-count]\n               (tracef \"async-poll-for-update!\")\n               (when (have-handle?)\n                 (let [retry-fn\n                       (fn [] ; Backoff then recur\n                         (when (have-handle?)\n                           (let [retry-count* (inc retry-count)\n                                 backoff-ms (backoff-ms-fn retry-count*)\n                                 udt-next-reconnect (+ (enc/now-udt) backoff-ms)]\n                             (warnf \"Chsk is closed: will try reconnect attempt (%s) in %s ms\"\n                                    retry-count* backoff-ms)\n                             (.setTimeout goog/global\n                               (fn [] (poll-fn retry-count*))\n                               backoff-ms)\n                             (swap-chsk-state! chsk\n                               #(assoc % :udt-next-reconnect udt-next-reconnect)))))]\n\n                   (reset! curr-xhr_\n                     (ajax-lite url\n                       (merge ajax-opts\n                         {:method     :get ; :timeout-ms timeout-ms\n                          :timeout-ms (or (:timeout-ms ajax-opts)\n                                        default-client-side-ajax-timeout-ms)\n                          :resp-type  :text ; Prefer to do our own pstr reading\n                          :params\n                          (merge\n                            ;; Note that user params here are actually POST\n                            ;; params for convenience. Contrast: WebSocket\n                            ;; params sent as query params since there's no\n                            ;; other choice there.\n                            params ; 1st (don't clobber impl.):\n\n                            {:udt       (enc/now-udt) ; Force uncached resp\n                             :client-id client-id}\n\n                            ;; A truthy :handshake? param will prompt server to\n                            ;; reply immediately with a handshake response,\n                            ;; letting us confirm that our client<->server comms\n                            ;; are working:\n                            (when-not (:open? @state_) {:handshake? true}))})\n\n                       (fn ajax-cb [{:keys [?error ?content]}]\n                         (if ?error\n                           (cond\n                             (= ?error :timeout) (poll-fn 0)\n                             ;; (= ?error :abort) ; Abort => intentional, not an error\n                             :else\n                             (do\n                               (swap-chsk-state! chsk\n                                 #(chsk-state->closed % :unexpected))\n                               (retry-fn)))\n\n                           ;; The Ajax long-poller is used only for events, never cbs:\n                           (let [content ?content\n                                 ppstr content\n                                 [clj] (unpack packer ppstr)\n                                 handshake? (handshake? clj)]\n\n                             (when handshake?\n                               (receive-handshake! :ajax chsk clj))\n\n                             (swap-chsk-state! chsk #(assoc % :open? true))\n                             (poll-fn 0) ; Repoll asap\n\n                             (when-not handshake?\n                               (or\n                                 (when (= clj :chsk/timeout)\n                                   (when @debug-mode?_\n                                     (receive-buffered-evs! chs [[:debug/timeout]]))\n                                   :noop)\n\n                                 (let [buffered-evs clj] ; An application reply\n                                   (receive-buffered-evs! chs buffered-evs))))))))))))]\n\n         (poll-fn 0)\n         chsk))))\n\n#?(:cljs\n   (defn- new-ChAjaxSocket [opts]\n     (map->ChAjaxSocket\n       (merge\n         {:state_           (atom {:type :ajax :open? false :ever-opened? false})\n          :instance-handle_ (atom nil)\n          :ever-opened?_    (atom false)\n          :curr-xhr_        (atom nil)}\n         opts))))\n\n#?(:cljs\n   (defrecord ChAutoSocket\n     ;; Dynamic WebSocket/Ajax IChSocket implementation\n     ;; Wraps a swappable ChWebSocket/ChAjaxSocket\n\n     [ws-chsk-opts ajax-chsk-opts state_\n      impl_ ; ChWebSocket or ChAjaxSocket\n      ]\n\n     IChSocket\n     (-chsk-disconnect! [chsk reason]\n       (when-let [impl @impl_]\n         (-chsk-disconnect! impl reason)))\n\n     ;; Possibly reset impl type:\n     (-chsk-reconnect! [chsk]\n       (when-let [impl @impl_]\n         (-chsk-disconnect! impl :requested-reconnect)\n         (-chsk-connect!    chsk)))\n\n     (-chsk-send! [chsk ev opts]\n       (if-let [impl @impl_]\n         (-chsk-send! impl ev opts)\n         (let [{?cb :cb} opts\n               ?cb-fn (cb-chan-as-fn ?cb ev)]\n           (chsk-send->closed! ?cb-fn))))\n\n     (-chsk-connect! [chsk]\n       ;; Starting with a simple downgrade-only strategy here as a proof of concept\n       ;; TODO Later consider smarter downgrade or downgrade+upgrade strategies?\n       (let [ajax-chsk-opts (assoc ajax-chsk-opts :state_ state_)\n               ws-chsk-opts (assoc   ws-chsk-opts :state_ state_)\n\n             ajax-conn!\n             (fn []\n               ;; Remove :auto->:ajax downgrade watch\n               (remove-watch state_ :chsk/auto-ajax-downgrade)\n               (-chsk-connect! (new-ChAjaxSocket ajax-chsk-opts)))\n\n             ws-conn!\n             (fn []\n               ;; Configure :auto->:ajax downgrade watch\n               (let [downgraded?_ (atom false)]\n                 (add-watch state_ :chsk/auto-ajax-downgrade\n                   (fn [_ _ old-state new-state]\n                     (when-let [impl @impl_]\n                       (when-let [ever-opened?_ (:ever-opened?_ impl)]\n                         (when-not @ever-opened?_\n                           (when (:last-ws-error new-state)\n                             (when (compare-and-set! downgraded?_ false true)\n                               (warnf \"Permanently downgrading :auto chsk -> :ajax\")\n                               (-chsk-disconnect! impl :downgrading-ws-to-ajax)\n                               (reset! impl_ (ajax-conn!))))))))))\n\n               (-chsk-connect! (new-ChWebSocket ws-chsk-opts)))]\n\n         (reset! impl_ (or (ws-conn!) (ajax-conn!)))\n         chsk))))\n\n#?(:cljs\n   (defn- new-ChAutoSocket [opts]\n     (map->ChAutoSocket\n       (merge\n         {:state_ (atom {:type :auto :open? false :ever-opened? false})\n          :impl_  (atom nil)}\n         opts))))\n\n#?(:cljs\n   (defn- get-chsk-url [protocol host path type]\n     (let [protocol (case protocol :http \"http:\" :https \"https:\" protocol)\n           protocol (have [:el #{\"http:\" \"https:\"}] protocol)\n           protocol (case type\n                      :ajax     protocol\n                      :ws (case protocol \"https:\" \"wss:\" \"http:\" \"ws:\"))]\n       (str protocol \"//\" (enc/path host path)))))\n\n#?(:cljs\n   (defn make-channel-socket-client!\n     \"Returns nil on failure, or a map with keys:\n       :ch-recv ; core.async channel to receive `event-msg`s (internal or from\n                ; clients). May `put!` (inject) arbitrary `event`s to this channel.\n       :send-fn ; (fn [event & [?timeout-ms ?cb-fn]]) for client>server send.\n       :state   ; Watchable, read-only (atom {:type _ :open? _ :uid _ :csrf-token _}).\n       :chsk    ; IChSocket implementer. You can usu. ignore this.\n\n     Common options:\n       :type           ; e/o #{:auto :ws :ajax}. You'll usually want the default (:auto).\n       :protocol       ; Server protocol, e/o #{:http :https}.\n       :host           ; Server host (defaults to current page's host).\n       :params         ; Map of any params to incl. in chsk Ring requests (handy\n                       ; for application-level auth, etc.).\n       :packer         ; :edn (default), or an IPacker implementation.\n       :ajax-opts      ; Base opts map provided to `taoensso.encore/ajax-lite`.\n       :wrap-recv-evs? ; Should events from server be wrapped in [:chsk/recv _]?\n       :ws-kalive-ms   ; Ping to keep a WebSocket conn alive if no activity\n                       ; w/in given msecs. Should be different to server's :ws-kalive-ms.\"\n\n     [path &\n      [{:keys [type protocol host params recv-buf-or-n packer ws-kalive-ms\n               client-id ajax-opts wrap-recv-evs? backoff-ms-fn]\n        :as   opts\n        :or   {type           :auto\n               recv-buf-or-n  (async/sliding-buffer 2048) ; Mostly for buffered-evs\n               packer         :edn\n               client-id      (or (:client-uuid opts) ; Backwards compatibility\n                                  (enc/uuid-str))\n               wrap-recv-evs? true\n               backoff-ms-fn  enc/exp-backoff\n               ws-kalive-ms   (enc/ms :secs 20)}}\n\n       _deprecated-more-opts]]\n\n     (have? [:in #{:ajax :ws :auto}] type)\n     (have? enc/nblank-str? client-id)\n\n     (when (not (nil? _deprecated-more-opts)) (warnf \"`make-channel-socket-client!` fn signature CHANGED with Sente v0.10.0.\"))\n     (when (contains? opts :lp-timeout) (warnf \":lp-timeout opt has CHANGED; please use :lp-timout-ms.\"))\n\n     (let [packer (coerce-packer packer)\n\n           [ws-url ajax-url]\n           (let [;; Not available with React Native, etc.:\n                 win-loc  (enc/get-win-loc)\n                 path     (or path (:pathname win-loc))]\n\n             (if-let [f (:chsk-url-fn opts)] ; Deprecated\n               [(f path win-loc :ws)\n                (f path win-loc :ajax)]\n\n               (let [protocol (or protocol (:protocol win-loc) :http)\n                     host     (or host     (:host     win-loc))]\n                 [(get-chsk-url protocol host path :ws)\n                  (get-chsk-url protocol host path :ajax)])))\n\n           private-chs\n           {:internal (chan (async/sliding-buffer 128))\n            :state    (chan (async/sliding-buffer 10))\n            :<server\n            (let [;; Nb must be >= max expected buffered-evs size:\n                  buf (async/sliding-buffer 512)]\n              (if wrap-recv-evs?\n                (chan buf (map (fn [ev] [:chsk/recv ev])))\n                (chan buf)))}\n\n           common-chsk-opts\n           {:client-id    client-id\n            :chs          private-chs\n            :params       params\n            :packer       packer\n            :ws-kalive-ms ws-kalive-ms}\n\n           ws-chsk-opts\n           (merge common-chsk-opts\n             {:url           ws-url\n              :backoff-ms-fn backoff-ms-fn})\n\n           ajax-chsk-opts\n           (merge common-chsk-opts\n             {:url           ajax-url\n              :ajax-opts     ajax-opts\n              :backoff-ms-fn backoff-ms-fn})\n\n           auto-chsk-opts\n           {:ws-chsk-opts   ws-chsk-opts\n            :ajax-chsk-opts ajax-chsk-opts}\n\n           ?chsk\n           (-chsk-connect!\n             (case type\n               :ws   (new-ChWebSocket    ws-chsk-opts)\n               :ajax (new-ChAjaxSocket ajax-chsk-opts)\n               :auto (new-ChAutoSocket auto-chsk-opts)))]\n\n       (if-let [chsk ?chsk]\n         (let [chsk-state_ (:state_ chsk)\n               internal-ch (:internal private-chs)\n               send-fn (partial chsk-send! chsk)\n               ev-ch\n               (async/merge\n                 [(:internal private-chs)\n                  (:state    private-chs)\n                  (:<server  private-chs)]\n                 recv-buf-or-n)\n\n               ev-msg-ch\n               (async/chan 1\n                 (map\n                   (fn [ev]\n                     (let [[ev-id ev-?data :as ev] (as-event ev)]\n                       {;; Allow client to inject into router for handler:\n                        :ch-recv internal-ch\n                        :send-fn send-fn\n                        :state   chsk-state_\n                        :event   ev\n                        :id      ev-id\n                        :?data   ev-?data}))))]\n\n           (async/pipe ev-ch ev-msg-ch)\n\n           {:chsk    chsk\n            :ch-recv ev-msg-ch\n            :send-fn send-fn\n            :state   (:state_ chsk)})\n\n         (warnf \"Failed to create channel socket\")))))\n\n;;;; Event-msg routers (handler loops)\n\n(defn- -start-chsk-router!\n  [server? ch-recv event-msg-handler opts]\n  (let [{:keys [trace-evs? error-handler simple-auto-threading?]} opts\n        ch-ctrl (chan)\n\n        execute1\n        #?(:cljs (fn [f] (f))\n           :clj\n           (if simple-auto-threading?\n             (fn [f] (future-call f))\n             (fn [f] (f))))]\n\n    (go-loop []\n      (let [[v p] (async/alts! [ch-recv ch-ctrl])\n            stop? (or (= p ch-ctrl) (nil? v))]\n\n        (when-not stop?\n          (let [{:as event-msg :keys [event]} v]\n\n            (execute1\n              (fn []\n                (enc/catching\n                  (do\n                    (when trace-evs? (tracef \"Pre-handler event: %s\" event))\n                    (event-msg-handler\n                      (if server?\n                        (have! server-event-msg? event-msg)\n                        (have! client-event-msg? event-msg))))\n                  e1\n                  (enc/catching\n                    (if-let [eh error-handler]\n                      (error-handler e1 event-msg)\n                       (errorf e1 \"Chsk router `event-msg-handler` error: %s\" event))\n                    e2 (errorf e2 \"Chsk router `error-handler` error: %s\"     event)))))\n\n            (recur)))))\n\n    (fn stop! [] (async/close! ch-ctrl))))\n\n(defn start-server-chsk-router!\n  \"Creates a simple go-loop to call `(event-msg-handler <server-event-msg>)`\n  and log any errors. Returns a `(fn stop! [])`. Note that advanced users may\n  prefer to just write their own loop against `ch-recv`.\n\n  Nb performance note: since your `event-msg-handler` fn will be executed\n  within a simple go block, you'll want this fn to be ~non-blocking\n  (you'll especially want to avoid blocking IO) to avoid starving the\n  core.async thread pool under load. To avoid blocking, you can use futures,\n  agents, core.async, etc. as appropriate.\n\n  Or for simple automatic future-based threading of every request, enable\n  the `:simple-auto-threading?` opt (disabled by default).\"\n  [ch-recv event-msg-handler &\n   [{:as opts :keys [trace-evs? error-handler simple-auto-threading?]}]]\n  (-start-chsk-router! :server ch-recv event-msg-handler opts))\n\n(defn start-client-chsk-router!\n  \"Creates a simple go-loop to call `(event-msg-handler <server-event-msg>)`\n  and log any errors. Returns a `(fn stop! [])`. Note that advanced users may\n  prefer to just write their own loop against `ch-recv`.\n\n  Nb performance note: since your `event-msg-handler` fn will be executed\n  within a simple go block, you'll want this fn to be ~non-blocking\n  (you'll especially want to avoid blocking IO) to avoid starving the\n  core.async thread pool under load. To avoid blocking, you can use futures,\n  agents, core.async, etc. as appropriate.\"\n  [ch-recv event-msg-handler &\n   [{:as opts :keys [trace-evs? error-handler]}]]\n  (-start-chsk-router! (not :server) ch-recv event-msg-handler opts))\n\n;;;; Platform aliases\n\n(def event-msg? #?(:clj server-event-msg? :cljs client-event-msg?))\n\n(def make-channel-socket!\n  \"Platform-specific alias for `make-channel-socket-server!` or\n  `make-channel-socket-client!`. Please see the appropriate aliased fn\n   docstring for details.\"\n  #?(:clj  make-channel-socket-server!\n     :cljs make-channel-socket-client!))\n\n(def start-chsk-router!\n  \"Platform-specific alias for `start-server-chsk-router!` or\n  `start-client-chsk-router!`. Please see the appropriate aliased fn\n  docstring for details.\"\n  #?(:clj  start-server-chsk-router!\n     :cljs start-client-chsk-router!))\n\n;;;; Deprecated\n\n(enc/deprecated\n  #?(:clj\n     (defn start-chsk-router-loop!\n       \"DEPRECATED: Please use `start-chsk-router!` instead\"\n       [event-msg-handler ch-recv]\n       (start-server-chsk-router! ch-recv\n         ;; Old handler form: (fn [ev-msg ch-recv])\n         (fn [ev-msg] (event-msg-handler ev-msg (:ch-recv ev-msg))))))\n\n  #?(:cljs\n     (defn start-chsk-router-loop!\n       \"DEPRECATED: Please use `start-chsk-router!` instead\"\n       [event-handler ch-recv]\n       (start-client-chsk-router! ch-recv\n         ;; Old handler form: (fn [ev ch-recv])\n         (fn [ev-msg] (event-handler (:event ev-msg) (:ch-recv ev-msg))))))\n\n  (def set-logging-level! \"DEPRECATED. Please use `timbre/set-level!` instead\" timbre/set-level!)\n\n  #?(:cljs (def ajax-call \"DEPRECATED: Please use `ajax-lite` instead\" enc/ajax-lite))\n  #?(:cljs\n     (def default-chsk-url-fn \"DEPRECATED\"\n       (fn [path {:as location :keys [protocol host pathname]} websocket?]\n         (let [protocol\n               (if websocket?\n                 (if (= protocol \"https:\") \"wss:\" \"ws:\")\n                 protocol)]\n           (str protocol \"//\" host (or path pathname)))))))\n","~:reader-features",["^Y",["~:cljs"]],"~:cljc",true,"~:source-map-compact",["^ ","mappings","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","names",["cljs.core/vector?","taoensso.encore/encore-version","taoensso.encore/assert-min-encore-version","taoensso.sente/sente-version","taoensso.sente/node-target?","cljs.core._EQ_","cljs.core/*target*","js/taoensso","js/taoensso.sente","js/taoensso.sente.debug-mode?_","taoensso.sente/debug-mode?_","cljs.core.atom","taoensso.sente/expected","expected","x","cljs.core/type","taoensso.sente/validate-event","cljs.core/not","G__43313","fexpr__43312","cljs.core/count","vec__43314","cljs.core.nth","ev-id","_","cljs.core/Keyword","cljs.core/namespace","taoensso.sente/assert-event","temp__5735__auto__","errs","cljs.core.ex_info","taoensso.sente/event?","taoensso.sente/as-event","temp__5733__auto__","taoensso.sente/client-event-msg?","cljs.core/map?","taoensso.encore/ks=","map__43321","cljs.core/PROTOCOL_SENTINEL","cljs.core.apply","cljs.core/hash-map","cljs.core.get","ch-recv","send-fn","state","event","taoensso.encore/chan?","cljs.core/ifn?","taoensso.encore/atom?","taoensso.sente/server-event-msg?","map__43327","connected-uids","ring-req","client-id","?reply-fn","taoensso.encore/nblank-str?","p__43329","map__43330","taoensso.sente/put-server-event-msg>ch-recv!","ev-msg","vec__43332","ev-?data","valid-event","ev-msg*","cljs.core.merge","taoensso.timbre._log_BANG_","taoensso.timbre/*config*","cljs.core/Delay","cljs.core.async.put_BANG_","taoensso.sente/cb-error?","cb-reply-clj","fexpr__43335","taoensso.sente/cb-success?","taoensso.sente/unpack","packer","prefixed-pstr","taoensso.truss.impl/-invar-violation!","vec__43336","wrapped?","taoensso.encore/str-starts-with?","pstr","cljs.core.subs","clj","e43339","taoensso.sente.interfaces/unpack","t","?cb-uuid","var_args","G__43341","taoensso.sente/pack","js/Error","taoensso.sente.interfaces/pack","wrapped-clj","this__4369__auto__","writer__4370__auto__","opt__4371__auto__","cljs.core/-write","taoensso.sente/EdnPacker","taoensso.sente/->EdnPacker","taoensso.encore.pr_edn","s","taoensso.encore.read_edn","taoensso.sente/default-edn-packer","taoensso.sente/coerce-packer","e","p1__43342#","taoensso.truss.impl/-dummy-error","e43343","cljs.core/native-satisfies?","taoensso.sente.interfaces/IPacker","taoensso.sente/next-idx!","taoensso.encore/idx-fn","args__4742__auto__","len__4736__auto__","i__4737__auto__","argseq__4743__auto__","cljs.core/IndexedSeq","taoensso.sente/make-channel-socket-server!","p__43348","vec__43349","map__43352","seq43346","G__43347","cljs.core/first","cljs.core/next","self__4723__auto__","web-server-ch-adapter","recv-buf-or-n","ws-kalive-ms","lp-timeout-ms","send-buf-ms-ajax","send-buf-ms-ws","user-id-fn","csrf-token-fn","handshake-data-fn","cljs.core.async/sliding-buffer","taoensso.encore.ms","cljs.core.get_in","or__4126__auto__","e43354","e43355","taoensso.encore/pos-int?","p1__43345#","e43356","taoensso.sente.interfaces/IServerChanAdapter","max-ms","taoensso.sente/default-client-side-ajax-timeout-ms","cljs.core.async.chan","G__43359","cljs.core.assoc","conns_","send-buffers_","connected-uids_","upd-conn!","conn-type","uid","taoensso.encore.swap_in_BANG_","?v","vec__43360","?sch","_udt","new-udt","taoensso.encore/now-udt","taoensso.encore/swapped","new-?sch","connect-uid!","taoensso.truss.impl/some?","e43363","newly-connected?","p__43364","map__43365","ws","ajax","any","old-m","new-m","G__43367","cljs.core.conj","old-any","new-any","cljs.core/contains?","upd-connected-uid!","e43368","newly-disconnected?","p__43369","map__43370","cljs.core/deref","conns'","any-ws-clients?","any-ajax-clients?","any-clients?","cljs.core.disj","p__43372","vec__43373","map__43376","user-id","ev","opts","flush?","ev-uuid","taoensso.encore.uuid_str","flush-buffer!","pulled","m","vec__43378","ev-uuids","cljs.core.dissoc","vec__43381","buffered-evs","cljs.core/set?","buffered-evs-ppstr","taoensso.sente.pack","G__43384","taoensso.sente/send-buffered-server-evs>ws-clients!","taoensso.sente/send-buffered-server-evs>ajax-clients!","seq__43385","cljs.core/seq","chunk__43386","count__43387","i__43388","vec__43395","cljs.core/chunked-seq?","c__4556__auto__","cljs.core/chunk-first","cljs.core/chunk-rest","vec__43398","cljs.core/vals","sch","taoensso.sente.interfaces/sch-close!","seq__43401","chunk__43402","count__43403","i__43404","vec__43411","vec__43414","seq__43417","chunk__43418","count__43419","i__43420","vec__43427","vec__43430","ws-timeout","cljs.core.async/timeout","ajax-timeout","c__38372__auto__","cljs.core.async.impl.dispatch/run","f__38373__auto__","switch__38280__auto__","state_43437","state_val_43438","cljs.core.async.impl.ioc-helpers/take!","inst_43434","inst_43435","statearr-43439","cljs.core.async.impl.ioc-helpers/return-chan","statearr-43440","state-machine__38281__auto__","ret-value__38282__auto__","result__38283__auto__","cljs.core/keyword-identical?","ex__38284__auto__","e43441","statearr-43442","statearr-43443","state__38374__auto__","statearr-43444","cljs.core.async.impl.ioc-helpers/USER-START-IDX","cljs.core.async.impl.ioc-helpers/run-state-machine-wrapped","state_43449","state_val_43450","inst_43446","inst_43447","statearr-43451","statearr-43452","e43453","statearr-43454","statearr-43455","statearr-43456","ev-msg-const","taoensso.sente.interfaces/ring-req->server-ch-resp","server-ch","websocket?","vec__43457","params","ppstr","has-cb?","reply-fn","replied?_","resp-clj","cljs.core/compare-and-set!","taoensso.sente.interfaces/sch-send!","ms","state_43465","state_val_43466","inst_43460","inst_43462","inst_43463","statearr-43467","statearr-43468","e43469","statearr-43470","statearr-43471","statearr-43472","sch-uuid","csrf-token","receive-event-msg!","taoensso$sente$self","send-handshake!","?handshake-data","handshake-ev","clojure.string/blank?","err-msg","updated-conn","udt-open","state_43509","state_val_43510","inst_43505","statearr-43511","inst_43473","inst_43474","statearr-43512","statearr-43513","inst_43483","inst_43478","inst_43479","inst_43480","cljs.core/PersistentVector","inst_43481","inst_43482","statearr-43514","statearr-43515","statearr-43516","inst_43489","inst_43498","statearr-43517","statearr-43518","statearr-43519","inst_43507","statearr-43520","inst_43476","inst_43494","inst_43495","statearr-43521","statearr-43522","inst_43488","inst_43490","statearr-43523","statearr-43524","statearr-43525","inst_43502","statearr-43526","inst_43492","statearr-43527","statearr-43528","statearr-43529","e43530","statearr-43531","statearr-43532","statearr-43533","taoensso.sente.interfaces/sch-open?","handshake?","state_43559","state_val_43560","inst_43534","inst_43541","inst_43536","inst_43537","inst_43538","inst_43539","inst_43540","statearr-43561","statearr-43562","statearr-43563","inst_43546","inst_43547","inst_43548","statearr-43564","statearr-43565","statearr-43566","statearr-43567","inst_43557","inst_43550","inst_43551","statearr-43568","statearr-43569","inst_43554","statearr-43570","statearr-43571","e43572","statearr-43573","statearr-43574","statearr-43575","req-ppstr","vec__43576","_status","udt-close","state_43630","state_val_43631","statearr-43632","inst_43579","statearr-43633","statearr-43634","inst_43591","inst_43589","inst_43607","inst_43590","inst_43602","inst_43603","inst_43604","inst_43606","vec__43582","statearr-43638","statearr-43639","statearr-43640","inst_43594","inst_43595","inst_43596","statearr-43641","inst_43616","inst_43617","inst_43618","inst_43619","statearr-43642","inst_43581","inst_43585","inst_43586","inst_43587","inst_43588","inst_43592","statearr-43643","statearr-43644","statearr-43645","inst_43625","statearr-43646","inst_43609","inst_43610","inst_43611","inst_43612","inst_43613","inst_43614","statearr-43647","statearr-43648","statearr-43649","inst_43599","inst_43600","statearr-43650","statearr-43651","statearr-43652","inst_43622","statearr-43653","statearr-43654","inst_43628","statearr-43655","e43656","statearr-43657","statearr-43658","statearr-43659","_?sch","udt-t1","disconnect?","p__43605","vec__43635","_sch","?m","cljs.core/empty?","error","buffered-evs-pstr","seq__43660","chunk__43661","count__43662","i__43663","vec__43676","vec__43679","vec__43682","vec__43685","ms-backoffs","client-ids-unsatisfied","cljs.core/keys","state_43734","state_val_43735","inst_43696","inst_43689","inst_43690","inst_43706","inst_43707","cljs.core/PersistentHashSet","inst_43708","statearr-43739","inst_43688","statearr-43740","statearr-43741","statearr-43742","inst_43727","statearr-43743","inst_43713","inst_43718","inst_43719","inst_43720","inst_43703","statearr-43744","statearr-43745","statearr-43746","inst_43732","inst_43730","statearr-43747","inst_43692","inst_43693","inst_43694","inst_43695","inst_43697","taoensso.truss.impl/non-throwing","inst_43698","statearr-43751","statearr-43752","statearr-43753","statearr-43754","inst_43711","inst_43712","statearr-43755","statearr-43756","statearr-43757","inst_43701","statearr-43758","statearr-43759","inst_43722","inst_43723","statearr-43760","statearr-43761","inst_43715","inst_43716","statearr-43762","statearr-43763","statearr-43764","statearr-43765","e43766","statearr-43767","statearr-43768","statearr-43769","n","client-ids-satisfied","?pulled","ks-to-pull","cljs.core.remove","cljs.core.reduce","k","vec__43748","udt","cljs.core/select-keys","cljs.core/reduce-kv","p__43705","vec__43736","sent?","cljs.core.into","taoensso.encore/rsome","cljs.core/complement","cljs.core/rand-int","taoensso.sente/ajax-lite","taoensso.encore/ajax-lite","taoensso$sente$IChSocket$_chsk_connect_BANG_$dyn","x__4428__auto__","m__4429__auto__","taoensso.sente/-chsk-connect!","goog/typeOf","m__4426__auto__","cljs.core/missing-protocol","taoensso$sente$IChSocket$_chsk_disconnect_BANG_$dyn","taoensso.sente/-chsk-disconnect!","taoensso$sente$IChSocket$_chsk_reconnect_BANG_$dyn","taoensso.sente/-chsk-reconnect!","taoensso$sente$IChSocket$_chsk_send_BANG_$dyn","taoensso.sente/-chsk-send!","taoensso.sente/IChSocket","chsk","reason","taoensso.sente/chsk-connect!","taoensso.sente/chsk-disconnect!","taoensso.sente/chsk-reconnect!","taoensso.sente/chsk-destroy!","G__43771","taoensso.sente/chsk-send!","taoensso.sente.chsk_send_BANG_","?timeout-ms","?cb","cljs.core/boolean","taoensso.sente/chsk-send->closed!","?cb-fn","taoensso.sente/assert-send-args","taoensso.encore/nat-int?","taoensso.sente/pull-unused-cb-fn!","cbs-waiting_","cb-uuid","?f","taoensso.sente/swap-chsk-state!","f","vec__43772","old-state","new-state","cljs.core.not_EQ_","output","taoensso.sente/chsk-state->closed","e43775","G__43777","taoensso.truss.impl/set*","e43776","taoensso.sente/cb-chan-as-fn","e43778","vec__43779","cb-ch","reply","cljs.core.keyword","taoensso.encore/as-qname","taoensso.sente/receive-buffered-evs!","chs","seq__43782","chunk__43783","count__43784","i__43785","vec__43792","vec__43795","id","taoensso.sente/handshake?","vec__43801","x1","taoensso.sente/receive-handshake!","chsk-type","G__43806","e43805","e43807","vec__43808","vec__43811","map__43814","?uid","?csrf-token","ever-opened?_","first-handshake?","p1__43804#","taoensso.sente/?node-npm-websocket_","js/require","e43816","this__4380__auto__","k__4381__auto__","this__4382__auto__","k43823","else__4383__auto__","G__43827","url","state_","instance-handle_","retry-count_","backoff-ms-fn","socket_","udt-last-comms_","__extmap","this__4399__auto__","f__4400__auto__","init__4401__auto__","ret__4402__auto__","p__43828","vec__43829","k__4403__auto__","v__4404__auto__","this__4394__auto__","writer__4395__auto__","opts__4396__auto__","pr-pair__4397__auto__","keyval__4398__auto__","cljs.core/pr-sequential-writer","cljs.core.concat","G__43822","cljs.core/RecordIter","cljs.core/-iterator","cljs.core/nil-iter","this__4378__auto__","__meta","this__4375__auto__","__hash","this__4384__auto__","this__4376__auto__","h__4238__auto__","coll__4377__auto__","cljs.core/hash-unordered-coll","this43824","other43825","this__4389__auto__","k__4390__auto__","cljs.core/-with-meta","cljs.core/not-empty","this__4387__auto__","k__4388__auto__","pred__43832","expr__43833","this__4392__auto__","cljs.core/MapEntry","this__4379__auto__","this__4385__auto__","entry__4386__auto__","cljs.core/-nth","cljs.core/-conj","taoensso.sente/ChWebSocket","this__4423__auto__","cljs.core/List","writer__4424__auto__","G__43826","extmap__4419__auto__","G__43915","cljs.core/record?","taoensso.sente/->ChWebSocket","taoensso.sente/map->ChWebSocket","cljs.core/reset!","p1__43817#","map__43835","taoensso.encore.reset_in_BANG_","e43837","timeout-ms","state_43848","state_val_43849","inst_43838","inst_43841","inst_43840","statearr-43850","statearr-43851","statearr-43852","inst_43843","statearr-43853","statearr-43854","inst_43846","statearr-43855","e43856","statearr-43857","statearr-43858","statearr-43859","e43860","cb-fn*","e43861","WebSocket","taoensso.encore.oget","goog/global","instance-handle","have-handle?","connect-fn","retry-fn","retry-count*","cljs.core.swap_BANG_","cljs.core/inc","backoff-ms","udt-next-reconnect","p1__43818#","?socket","e43862","taoensso.encore/merge-url-with-query-string","G__43863","ws-ev","e43864","cljs.core.js__GT_clj","last-ws-error","p1__43819#","vec__43865","cb-fn","clean?","code","last-ws-close","p1__43820#","p1__43821#","state_43895","state_val_43896","inst_43891","statearr-43897","statearr-43898","inst_43872","inst_43873","statearr-43899","statearr-43900","statearr-43901","statearr-43902","inst_43893","inst_43869","inst_43870","statearr-43903","statearr-43904","inst_43875","inst_43876","statearr-43905","statearr-43906","inst_43887","statearr-43907","statearr-43908","inst_43878","inst_43879","inst_43880","inst_43881","inst_43882","inst_43883","cljs.core/PersistentHashMap","inst_43884","statearr-43909","statearr-43910","e43911","statearr-43912","statearr-43913","statearr-43914","taoensso.sente/new-ChWebSocket","k43923","G__43927","ajax-opts","curr-xhr_","p__43928","vec__43929","G__43922","this43924","other43925","pred__43932","expr__43933","taoensso.sente/ChAjaxSocket","G__43926","G__43955","taoensso.sente/->ChAjaxSocket","taoensso.sente/map->ChAjaxSocket","p1__43916#","map__43935","G__43937","G__43938","G__43939","p__43940","map__43941","?error","?content","p1__43917#","vec__43943","content","resp-ppstr","p1__43918#","poll-fn","retry-count","p1__43919#","G__43946","G__43947","G__43948","p__43949","map__43950","p1__43920#","vec__43952","p1__43921#","taoensso.sente/new-ChAjaxSocket","k43957","G__43961","ws-chsk-opts","ajax-chsk-opts","impl_","p__43962","vec__43963","G__43956","this43958","other43959","pred__43966","expr__43967","taoensso.sente/ChAutoSocket","G__43960","G__43971","taoensso.sente/->ChAutoSocket","taoensso.sente/map->ChAutoSocket","impl","map__43969","ajax-conn!","cljs.core/remove-watch","ws-conn!","downgraded?_","cljs.core/add-watch","taoensso.sente/new-ChAutoSocket","taoensso.sente/get-chsk-url","protocol","host","path","type","G__43972","G__43974","e43973","G__43975","G__43976","taoensso.encore.path","taoensso.sente/make-channel-socket-client!","p__43979","vec__43980","map__43983","seq43977","G__43978","wrap-recv-evs?","taoensso.encore/exp-backoff","_deprecated-more-opts","G__43986","e43985","e43987","vec__43988","ws-url","ajax-url","win-loc","taoensso.encore/get-win-loc","private-chs","buf","cljs.core.map","common-chsk-opts","auto-chsk-opts","?chsk","G__43991","chsk-state_","internal-ch","cljs.core.partial","ev-ch","cljs.core.async.merge","ev-msg-ch","vec__43992","cljs.core.async.pipe","taoensso.sente/-start-chsk-router!","server?","event-msg-handler","map__43995","trace-evs?","error-handler","simple-auto-threading?","ch-ctrl","execute1","state_44044","state_val_44045","inst_44040","statearr-44046","statearr-44047","inst_44010","inst_44007","inst_44005","inst_44006","inst_44008","inst_44009","statearr-44048","statearr-44049","statearr-44050","statearr-44051","inst_44026","statearr-44052","inst_44015","inst_44016","statearr-44053","statearr-44054","inst_44042","statearr-44055","inst_44001","inst_44002","inst_44003","cljs.core.async/ioc-alts!","statearr-44056","statearr-44057","statearr-44058","inst_44031","statearr-44059","inst_44034","inst_44035","inst_44036","vec__43998","map__44013","inst_44037","statearr-44065","statearr-44066","inst_44029","statearr-44067","statearr-44068","inst_44018","inst_44019","inst_44020","inst_44021","inst_44022","statearr-44069","statearr-44070","statearr-44071","e44072","statearr-44073","statearr-44074","statearr-44075","v","p","stop?","event-msg","e44060","G__44062","e44063","e44064","e1","e44061","eh","e2","cljs.core.async/close!","taoensso.sente/start-server-chsk-router!","p__44079","vec__44080","map__44083","seq44076","G__44077","G__44078","taoensso.sente/start-client-chsk-router!","p__44088","vec__44089","map__44092","seq44085","G__44086","G__44087","taoensso.sente/event-msg?","taoensso.sente/make-channel-socket!","taoensso.sente/start-chsk-router!","taoensso.sente/start-chsk-router-loop!","event-handler","G__44094","G__44095","taoensso.sente/set-logging-level!","taoensso.timbre/set-level!","taoensso.sente/ajax-call","taoensso.sente/default-chsk-url-fn","p__44096","map__44097","location","pathname"]],"~:used-vars",["^Y",["~$taoensso.sente/-chsk-send!","~$taoensso.encore/idx-fn","~$taoensso.sente/get-chsk-url","~$cljs.core/PROTOCOL_SENTINEL","~$cljs.core/keyword","~$taoensso.encore/read-edn","~$taoensso.sente/->EdnPacker","~$taoensso.sente/as-event","~$taoensso.sente/pack","~$taoensso.sente/chsk-state->closed","~$cljs.core/pr-sequential-writer","~$taoensso.sente/map->ChAjaxSocket","~$taoensso.sente/receive-handshake!","~$cljs.core/vector?","~$taoensso.sente/sente-version","~$clojure.string/blank?","~$cljs.core/=","~$taoensso.sente/server-event-msg?","~$taoensso.sente/chsk-destroy!","~$taoensso.sente.interfaces/sch-send!","~$cljs.core/ifn?","~$cljs.core/-assoc","~$taoensso.truss.impl/-invar-violation!","~$taoensso.sente/node-target?","~$cljs.core/-write","~$taoensso.sente/ajax-lite","~$taoensso.timbre/-log!","~$taoensso.sente/make-channel-socket!","~$cljs.core/-iterator","~$cljs.core/count","~$taoensso.encore/as-qname","~$cljs.core/deref","~$cljs.core/reduce","~$cljs.core/seq","~$cljs.core.async.impl.ioc-helpers/run-state-machine-wrapped","~$taoensso.encore/pr-edn","~$cljs.core/Keyword","~$taoensso.sente/-chsk-disconnect!","~$taoensso.sente/event?","~$taoensso.sente/ChWebSocket","~$cljs.core/not=","~$taoensso.sente/send-buffered-server-evs>ws-clients!","~$cljs.core/MapEntry","~$cljs.core/dissoc","~$taoensso.sente/chsk-send!","~$cljs.core/Delay","~$cljs.core.async/put!","~$cljs.core/chunk-rest","~$cljs.core/atom","~$taoensso.sente/validate-event","~$cljs.core/-with-meta","~$cljs.core/concat","~$taoensso.encore/nat-int?","~$taoensso.sente/-chsk-reconnect!","~$taoensso.sente/ChAjaxSocket","~$taoensso.sente/-chsk-connect!","~$taoensso.sente/pull-unused-cb-fn!","~$js/taoensso.sente","~$taoensso.sente/put-server-event-msg>ch-recv!","~$taoensso.sente/make-channel-socket-server!","~$taoensso.sente/assert-event","~$js/taoensso","~$taoensso.sente/chsk-connect!","~$cljs.core/empty?","~$js/taoensso.sente.debug-mode?_","~$cljs.core/contains?","~$cljs.core/into","~$cljs.core/map?","~$cljs.core/reset!","~$taoensso.timbre/*config*","~$taoensso.encore/nblank-str?","~$cljs.core/-conj","~$cljs.core/namespace","~$taoensso.sente/start-chsk-router!","~$taoensso.sente/default-edn-packer","~$cljs.core.async.impl.dispatch/run","~$taoensso.encore/assert-min-encore-version","~$cljs.core.async/pipe","~$taoensso.sente/assert-send-args","~$taoensso.sente/ajax-call","~$cljs.core/PersistentVector","~$cljs.core/get-in","~$cljs.core/List","~$taoensso.sente/coerce-packer","~$taoensso.encore/swap-in!","~$taoensso.sente/expected","~$cljs.core/get","~$taoensso.sente/handshake?","~$taoensso.sente/start-server-chsk-router!","~$taoensso.sente/receive-buffered-evs!","~$taoensso.sente/unpack","~$taoensso.encore/atom?","~$cljs.core/-nth","~$cljs.core.async/close!","~$taoensso.sente/next-idx!","~$taoensso.sente/-start-chsk-router!","~$cljs.core/not-empty","~$taoensso.sente/new-ChAjaxSocket","~$taoensso.encore/ajax-lite","~$taoensso.sente/default-chsk-url-fn","~$taoensso.sente/cb-error?","~$taoensso.sente/start-chsk-router-loop!","~$taoensso.encore/ms","~$taoensso.sente/chsk-send->closed!","~$taoensso.sente/EdnPacker","~$taoensso.sente/ChAutoSocket","~$taoensso.sente/->ChAutoSocket","~$cljs.core/-lookup","~$taoensso.encore/path","~$cljs.core/ex-info","~$taoensso.encore/chan?","~$cljs.core/nil-iter","~$taoensso.sente/send-buffered-server-evs>ajax-clients!","~$taoensso.sente/default-client-side-ajax-timeout-ms","~$taoensso.sente/set-logging-level!","~$taoensso.encore/encore-version","~$cljs.core/*target*","~$taoensso.encore/now-udt","~$cljs.core/next","~$taoensso.sente/swap-chsk-state!","~$taoensso.sente/->ChAjaxSocket","~$cljs.core/RecordIter","~$taoensso.encore/swapped","~$taoensso.sente/event-msg?","~$cljs.core/not","~$taoensso.encore/reset-in!","~$taoensso.sente/new-ChWebSocket","~$cljs.core/assoc","~$taoensso.sente/chsk-reconnect!","~$taoensso.timbre/set-level!","~$taoensso.sente/client-event-msg?","~$taoensso.sente/start-client-chsk-router!","~$taoensso.encore/ks=","~$js/require","~$taoensso.sente/new-ChAutoSocket","~$taoensso.sente/make-channel-socket-client!","~$cljs.core/merge","~$taoensso.sente/map->ChAutoSocket","~$taoensso.sente/debug-mode?_","~$taoensso.sente/IChSocket","~$js/Error","~$taoensso.sente/chsk-disconnect!","~$taoensso.sente/map->ChWebSocket","~$taoensso.sente/cb-success?","~$taoensso.sente/->ChWebSocket","~$cljs.core/boolean","~$taoensso.sente.interfaces/ring-req->server-ch-resp","~$cljs.core/type","~$taoensso.sente/cb-chan-as-fn","~$taoensso.sente/?node-npm-websocket_","~$cljs.core/chunked-seq?"]]],"~:cache-keys",["~#cmap",[["^1V","goog/dom/tagname.js"],["6025affb7181cd40418600864f58eed1ea80055d","~:shadow.build.compiler/resolve",["^ ","~:require-id",null,"~:deps-ids",["^Y",[]],"~:deps-syms",["^1:","~$goog.dom.HtmlElement"]]],["^1V","goog/async/freelist.js"],["6025affb7181cd40418600864f58eed1ea80055d","^5K",["^ ","^5L",null,"^5M",["^Y",[]],"^5N",["^1:"]]],["^1V","cljs/core/async/impl/ioc_helpers.cljs"],["dbe356df16976e1d820463722b6f0e3c3b3f8e26","^5K",["^ ","^5L",null,"^5M",["^Y",[]],"^5N",["^1:","^19","~$cljs.core.async.impl.protocols"]]],["^1V","goog/labs/useragent/platform.js"],["6025affb7181cd40418600864f58eed1ea80055d","^5K",["^ ","^5L",null,"^5M",["^Y",[]],"^5N",["^1:","~$goog.labs.userAgent.util","~$goog.string"]]],["^1V","taoensso/sente/interfaces.cljc"],["3571bfabe2a44ed77b076487ab2fefd2c4138841","^5K",["^ ","^5L",null,"^5M",["^Y",[]],"^5N",["^1:","^19","^P"]]],["^1V","cljs/core/async.cljs"],["dbe356df16976e1d820463722b6f0e3c3b3f8e26","^5K",["^ ","^5L",null,"^5M",["^Y",[]],"^5N",["^1:","^19","^5P","~$cljs.core.async.impl.channels","~$cljs.core.async.impl.buffers","~$cljs.core.async.impl.timers","~$cljs.core.async.impl.dispatch","~$cljs.core.async.impl.ioc-helpers","~$goog.array"]]],["^1V","goog/timer/timer.js"],["6025affb7181cd40418600864f58eed1ea80055d","^5K",["^ ","^5L",null,"^5M",["^Y",[]],"^5N",["^1:","~$goog.Promise","~$goog.events.EventTarget"]]],["^1V","cljs/tools/reader/impl/utils.cljs"],["d87b8bf9f6ce87b207d5ac625236d72923b7d71f","^5K",["^ ","^5L",null,"^5M",["^Y",[]],"^5N",["^1:","^19","^1=","^5R"]]],["^1V","goog/math/math.js"],["6025affb7181cd40418600864f58eed1ea80055d","^5K",["^ ","^5L",null,"^5M",["^Y",[]],"^5N",["^1:","^5X","~$goog.asserts"]]],["^1V","goog/html/trustedtypes.js"],["6025affb7181cd40418600864f58eed1ea80055d","^5K",["^ ","^5L",null,"^5M",["^Y",[]],"^5N",["^1:"]]],["^1V","goog/string/stringformat.js"],["6025affb7181cd40418600864f58eed1ea80055d","^5K",["^ ","^5L",null,"^5M",["^Y",[]],"^5N",["^1:","^5R"]]],["^1V","goog/events/eventtype.js"],["6025affb7181cd40418600864f58eed1ea80055d","^5K",["^ ","^5L",null,"^5M",["^Y",[]],"^5N",["^1:","~$goog.events.BrowserFeature","~$goog.userAgent"]]],["^1V","goog/labs/useragent/browser.js"],["6025affb7181cd40418600864f58eed1ea80055d","^5K",["^ ","^5L",null,"^5M",["^Y",[]],"^5N",["^1:","^5X","^5Q","~$goog.object","~$goog.string.internal"]]],["^1V","goog/html/safeurl.js"],["6025affb7181cd40418600864f58eed1ea80055d","^5K",["^ ","^5L",null,"^5M",["^Y",[]],"^5N",["^1:","^5[","~$goog.fs.url","~$goog.html.TrustedResourceUrl","~$goog.i18n.bidi.Dir","~$goog.i18n.bidi.DirectionalString","~$goog.string.Const","~$goog.string.TypedString","^63"]]],["^1V","goog/array/array.js"],["6025affb7181cd40418600864f58eed1ea80055d","^5K",["^ ","^5L",null,"^5M",["^Y",[]],"^5N",["^1:","^5["]]],["^1V","goog/useragent/useragent.js"],["6025affb7181cd40418600864f58eed1ea80055d","^5K",["^ ","^5L",null,"^5M",["^Y",[]],"^5N",["^1:","~$goog.labs.userAgent.browser","~$goog.labs.userAgent.engine","~$goog.labs.userAgent.platform","^5Q","~$goog.reflect","^5R"]]],["^1V","goog/structs/prioritypool.js"],["6025affb7181cd40418600864f58eed1ea80055d","^5K",["^ ","^5L",null,"^5M",["^Y",[]],"^5N",["^1:","~$goog.structs.Pool","~$goog.structs.PriorityQueue"]]],["^1V","goog/async/run.js"],["6025affb7181cd40418600864f58eed1ea80055d","^5K",["^ ","^5L",null,"^5M",["^Y",[]],"^5N",["^1:","~$goog.async.WorkQueue","~$goog.async.nextTick","~$goog.async.throwException"]]],["^1V","taoensso/encore.cljs"],["40351f366ed6b85606c1787959bbd818e4f58450","^5K",["^ ","^5L",null,"^5M",["^Y",[]],"^5N",["^1:","^19","^1=","~$clojure.set","~$cljs.reader","~$cljs.tools.reader.edn","^62","^5R","~$goog.string.format","~$goog.string.StringBuffer","~$goog.events","~$goog.net.XhrIo","~$goog.net.XhrIoPool","~$goog.Uri.QueryData","~$goog.structs","~$goog.net.EventType","~$goog.net.ErrorCode","~$taoensso.truss"]]],["^1V","goog/debug/error.js"],["6025affb7181cd40418600864f58eed1ea80055d","^5K",["^ ","^5L",null,"^5M",["^Y",[]],"^5N",["^1:"]]],["^1V","goog/async/workqueue.js"],["6025affb7181cd40418600864f58eed1ea80055d","^5K",["^ ","^5L",null,"^5M",["^Y",[]],"^5N",["^1:","^5[","~$goog.async.FreeList"]]],["^1V","goog/events/events.js"],["6025affb7181cd40418600864f58eed1ea80055d","^5K",["^ ","^5L",null,"^5M",["^Y",[]],"^5N",["^1:","^5[","~$goog.debug.entryPointRegistry","~$goog.events.BrowserEvent","^60","~$goog.events.Listenable","~$goog.events.ListenerMap"]]],["^1V","goog/promise/resolver.js"],["6025affb7181cd40418600864f58eed1ea80055d","^5K",["^ ","^5L",null,"^5M",["^Y",[]],"^5N",["^1:"]]],["^1V","goog/events/browserfeature.js"],["6025affb7181cd40418600864f58eed1ea80055d","^5K",["^ ","^5L",null,"^5M",["^Y",[]],"^5N",["^1:","^61"]]],["^1V","cljs/tools/reader/edn.cljs"],["d87b8bf9f6ce87b207d5ac625236d72923b7d71f","^5K",["^ ","^5L",null,"^5M",["^Y",[]],"^5N",["^1:","^19","~$cljs.tools.reader.impl.errors","~$cljs.tools.reader.reader-types","~$cljs.tools.reader.impl.utils","~$cljs.tools.reader.impl.commons","~$cljs.tools.reader","^5R","^6G"]]],["^1V","goog/structs/priorityqueue.js"],["6025affb7181cd40418600864f58eed1ea80055d","^5K",["^ ","^5L",null,"^5M",["^Y",[]],"^5N",["^1:","~$goog.structs.Heap"]]],["^1V","goog/net/xhrio.js"],["6025affb7181cd40418600864f58eed1ea80055d","^5K",["^ ","^5L",null,"^5M",["^Y",[]],"^5N",["^1:","~$goog.Timer","^5X","^5[","^6Q","^5Z","~$goog.json.hybrid","~$goog.log","^6N","^6M","~$goog.net.HttpStatus","~$goog.net.XmlHttp","^62","^5R","^6L","~$goog.structs.Map","~$goog.uri.utils","^61"]]],["^1V","goog/promise/thenable.js"],["6025affb7181cd40418600864f58eed1ea80055d","^5K",["^ ","^5L",null,"^5M",["^Y",[]],"^5N",["^1:"]]],["^1V","taoensso/sente.cljc"],["3571bfabe2a44ed77b076487ab2fefd2c4138841","^5K",["^ ","^5L",null,"^5M",["^Y",[]],"^5N",["^1:","^19","^1=","^18","^P","^L","^16"]]],["^1V","goog/dom/nodetype.js"],["6025affb7181cd40418600864f58eed1ea80055d","^5K",["^ ","^5L",null,"^5M",["^Y",[]],"^5N",["^1:"]]],["^1V","cljs/tools/reader/impl/inspect.cljs"],["d87b8bf9f6ce87b207d5ac625236d72923b7d71f","^5K",["^ ","^5L",null,"^5M",["^Y",[]],"^5N",["^1:","^19"]]],["^1V","cljs/tools/reader.cljs"],["d87b8bf9f6ce87b207d5ac625236d72923b7d71f","^5K",["^ ","^5L",null,"^5M",["^Y",[]],"^5N",["^1:","^19","^6V","^6W","^6X","^6U","^5X","^5R","^6G"]]],["^1V","goog/net/wrapperxmlhttpfactory.js"],["6025affb7181cd40418600864f58eed1ea80055d","^5K",["^ ","^5L",null,"^5M",["^Y",[]],"^5N",["^1:","~$goog.net.XhrLike","~$goog.net.XmlHttpFactory"]]],["^1V","goog/events/eventtarget.js"],["6025affb7181cd40418600864f58eed1ea80055d","^5K",["^ ","^5L",null,"^5M",["^Y",[]],"^5N",["^1:","~$goog.Disposable","^5[","^6H","~$goog.events.Event","^6S","^6T","^62"]]],["^1V","goog/disposable/disposable.js"],["6025affb7181cd40418600864f58eed1ea80055d","^5K",["^ ","^5L",null,"^5M",["^Y",[]],"^5N",["^1:","~$goog.disposable.IDisposable"]]],["^1V","goog/string/typedstring.js"],["6025affb7181cd40418600864f58eed1ea80055d","^5K",["^ ","^5L",null,"^5M",["^Y",[]],"^5N",["^1:"]]],["^1V","goog/object/object.js"],["6025affb7181cd40418600864f58eed1ea80055d","^5K",["^ ","^5L",null,"^5M",["^Y",[]],"^5N",["^1:"]]],["^1V","goog/dom/asserts.js"],["6025affb7181cd40418600864f58eed1ea80055d","^5K",["^ ","^5L",null,"^5M",["^Y",[]],"^5N",["^1:","^5["]]],["^1V","goog/structs/set.js"],["6025affb7181cd40418600864f58eed1ea80055d","^5K",["^ ","^5L",null,"^5M",["^Y",[]],"^5N",["^1:","^6L","~$goog.structs.Collection","^74"]]],"~:SHADOW-TIMESTAMP",[1600135801000,1600135801000,1593724535000],["^1V","goog/math/long.js"],["6025affb7181cd40418600864f58eed1ea80055d","^5K",["^ ","^5L",null,"^5M",["^Y",[]],"^5N",["^1:","^5[","^6="]]],["^1V","goog/events/listener.js"],["6025affb7181cd40418600864f58eed1ea80055d","^5K",["^ ","^5L",null,"^5M",["^Y",[]],"^5N",["^1:","~$goog.events.ListenableKey"]]],["^1V","goog/html/trustedresourceurl.js"],["6025affb7181cd40418600864f58eed1ea80055d","^5K",["^ ","^5L",null,"^5M",["^Y",[]],"^5N",["^1:","^5[","~$goog.html.trustedtypes","^66","^67","^68","^69"]]],["^1V","cljs/core/async/impl/channels.cljs"],["dbe356df16976e1d820463722b6f0e3c3b3f8e26","^5K",["^ ","^5L",null,"^5M",["^Y",[]],"^5N",["^1:","^19","^5P","^5V","^5T"]]],["^1V","goog/events/listenermap.js"],["6025affb7181cd40418600864f58eed1ea80055d","^5K",["^ ","^5L",null,"^5M",["^Y",[]],"^5N",["^1:","^5X","~$goog.events.Listener","^62"]]],["^1V","goog/events/eventid.js"],["6025affb7181cd40418600864f58eed1ea80055d","^5K",["^ ","^5L",null,"^5M",["^Y",[]],"^5N",["^1:"]]],["^1V","taoensso/truss.cljs"],["ef3f595da76cbcbe40124ee0a858b7ca635d30f2","^5K",["^ ","^5L",null,"^5M",["^Y",[]],"^5N",["^1:","^19","~$taoensso.truss.impl"]]],["^1V","goog/string/internal.js"],["6025affb7181cd40418600864f58eed1ea80055d","^5K",["^ ","^5L",null,"^5M",["^Y",[]],"^5N",["^1:"]]],["^1V","goog/functions/functions.js"],["6025affb7181cd40418600864f58eed1ea80055d","^5K",["^ ","^5L",null,"^5M",["^Y",[]],"^5N",["^1:"]]],["^1V","cljs/core/async/impl/dispatch.cljs"],["dbe356df16976e1d820463722b6f0e3c3b3f8e26","^5K",["^ ","^5L",null,"^5M",["^Y",[]],"^5N",["^1:","^19","^5T","^6A"]]],["^1V","goog/html/safestyle.js"],["6025affb7181cd40418600864f58eed1ea80055d","^5K",["^ ","^5L",null,"^5M",["^Y",[]],"^5N",["^1:","^5X","^5[","~$goog.html.SafeUrl","^68","^69","^63"]]],["^1V","goog/dom/safe.js"],["6025affb7181cd40418600864f58eed1ea80055d","^5K",["^ ","^5L",null,"^5M",["^Y",[]],"^5N",["^1:","^5[","~$goog.dom.asserts","~$goog.functions","~$goog.html.SafeHtml","~$goog.html.SafeScript","~$goog.html.SafeStyle","^7A","^65","~$goog.html.uncheckedconversions","^68","^63"]]],["^1V","taoensso/truss/impl.cljs"],["ef3f595da76cbcbe40124ee0a858b7ca635d30f2","^5K",["^ ","^5L",null,"^5M",["^Y",[]],"^5N",["^1:","^19","^6C"]]],["^1V","cljs/core/async/impl/protocols.cljs"],["dbe356df16976e1d820463722b6f0e3c3b3f8e26","^5K",["^ ","^5L",null,"^5M",["^Y",[]],"^5N",["^1:","^19"]]],["^1V","goog/net/eventtype.js"],["6025affb7181cd40418600864f58eed1ea80055d","^5K",["^ ","^5L",null,"^5M",["^Y",[]],"^5N",["^1:"]]],["^1V","goog/structs/map.js"],["6025affb7181cd40418600864f58eed1ea80055d","^5K",["^ ","^5L",null,"^5M",["^Y",[]],"^5N",["^1:","~$goog.iter.Iterator","~$goog.iter.StopIteration"]]],["^1V","goog/net/xhriopool.js"],["6025affb7181cd40418600864f58eed1ea80055d","^5K",["^ ","^5L",null,"^5M",["^Y",[]],"^5N",["^1:","^6I","~$goog.structs.PriorityPool"]]],["^1V","goog/html/safehtml.js"],["6025affb7181cd40418600864f58eed1ea80055d","^5K",["^ ","^5L",null,"^5M",["^Y",[]],"^5N",["^1:","^5X","^5[","~$goog.dom.TagName","~$goog.dom.tags","^7E","^7F","~$goog.html.SafeStyleSheet","^7A","^65","^7>","^66","^67","^6:","^62","^68","^69","^63"]]],["^1V","goog/dom/tags.js"],["6025affb7181cd40418600864f58eed1ea80055d","^5K",["^ ","^5L",null,"^5M",["^Y",[]],"^5N",["^1:","^62"]]],["^1V","goog/math/size.js"],["6025affb7181cd40418600864f58eed1ea80055d","^5K",["^ ","^5L",null,"^5M",["^Y",[]],"^5N",["^1:"]]],["^1V","goog/structs/queue.js"],["6025affb7181cd40418600864f58eed1ea80055d","^5K",["^ ","^5L",null,"^5M",["^Y",[]],"^5N",["^1:","^5X"]]],["^1V","goog/labs/useragent/engine.js"],["6025affb7181cd40418600864f58eed1ea80055d","^5K",["^ ","^5L",null,"^5M",["^Y",[]],"^5N",["^1:","^5X","^5Q","^5R"]]],["^1V","taoensso/timbre/appenders/core.cljs"],["daf6b8826cb16aed7fb3e0dd7a5c5266d2a53854","^5K",["^ ","^5L",null,"^5M",["^Y",[]],"^5N",["^1:","^19","^1=","^P"]]],["^1V","cljs/reader.cljs"],["9f9729dbbf9b814c83dc189977b447d2ae92b6cd","^5K",["^ ","^5L",null,"^5M",["^Y",[]],"^5N",["^1:","^19","^62","^6Y","^6E","^6G"]]],["^1V","goog/dom/dom.js"],["6025affb7181cd40418600864f58eed1ea80055d","^5K",["^ ","^5L",null,"^5M",["^Y",[]],"^5N",["^1:","^5X","^5[","~$goog.dom.BrowserFeature","~$goog.dom.NodeType","^7K","~$goog.dom.safe","^7D","^7G","~$goog.math.Coordinate","~$goog.math.Size","^62","^5R","~$goog.string.Unicode","^61"]]],["^1V","goog/asserts/asserts.js"],["6025affb7181cd40418600864f58eed1ea80055d","^5K",["^ ","^5L",null,"^5M",["^Y",[]],"^5N",["^1:","~$goog.debug.Error","^7O"]]],["^1V","cljs/core/async/impl/buffers.cljs"],["dbe356df16976e1d820463722b6f0e3c3b3f8e26","^5K",["^ ","^5L",null,"^5M",["^Y",[]],"^5N",["^1:","^19","^5P"]]],["^1V","goog/debug/logbuffer.js"],["6025affb7181cd40418600864f58eed1ea80055d","^5K",["^ ","^5L",null,"^5M",["^Y",[]],"^5N",["^1:","^5[","~$goog.debug.LogRecord"]]],["^1V","goog/uri/uri.js"],["6025affb7181cd40418600864f58eed1ea80055d","^5K",["^ ","^5L",null,"^5M",["^Y",[]],"^5N",["^1:","^5X","^5[","^5R","^6L","^74","^75","~$goog.uri.utils.ComponentIndex","~$goog.uri.utils.StandardQueryParam"]]],["^1V","goog/net/errorcode.js"],["6025affb7181cd40418600864f58eed1ea80055d","^5K",["^ ","^5L",null,"^5M",["^Y",[]],"^5N",["^1:"]]],["^1V","goog/i18n/bidi.js"],["6025affb7181cd40418600864f58eed1ea80055d","^5K",["^ ","^5L",null,"^5M",["^Y",[]],"^5N",["^1:"]]],["^1V","goog/disposable/idisposable.js"],["6025affb7181cd40418600864f58eed1ea80055d","^5K",["^ ","^5L",null,"^5M",["^Y",[]],"^5N",["^1:"]]],["^1V","goog/promise/promise.js"],["6025affb7181cd40418600864f58eed1ea80055d","^5K",["^ ","^5L",null,"^5M",["^Y",[]],"^5N",["^1:","~$goog.Thenable","^5[","^6P","~$goog.async.run","^6B","^7T","~$goog.promise.Resolver"]]],["^1V","cljs/core/async/impl/timers.cljs"],["dbe356df16976e1d820463722b6f0e3c3b3f8e26","^5K",["^ ","^5L",null,"^5M",["^Y",[]],"^5N",["^1:","^19","^5P","^5S","^5V"]]],["^1V","goog/fs/url.js"],["6025affb7181cd40418600864f58eed1ea80055d","^5K",["^ ","^5L",null,"^5M",["^Y",[]],"^5N",["^1:"]]],["^1V","goog/debug/logrecord.js"],["6025affb7181cd40418600864f58eed1ea80055d","^5K",["^ ","^5L",null,"^5M",["^Y",[]],"^5N",["^1:"]]],["^1V","goog/base.js"],["6025affb7181cd40418600864f58eed1ea80055d","^5K",["^ ","^5L",null,"^5M",["^Y",[]],"^5N",[]]],["^1V","goog/json/hybrid.js"],["6025affb7181cd40418600864f58eed1ea80055d","^5K",["^ ","^5L",null,"^5M",["^Y",[]],"^5N",["^1:","^5[","~$goog.json"]]],["^1V","goog/structs/structs.js"],["6025affb7181cd40418600864f58eed1ea80055d","^5K",["^ ","^5L",null,"^5M",["^Y",[]],"^5N",["^1:","^5X","^62"]]],["^1V","cljs/tools/reader/impl/errors.cljs"],["d87b8bf9f6ce87b207d5ac625236d72923b7d71f","^5K",["^ ","^5L",null,"^5M",["^Y",[]],"^5N",["^1:","^19","^6V","^1=","~$cljs.tools.reader.impl.inspect"]]],["^1V","clojure/string.cljs"],["9f9729dbbf9b814c83dc189977b447d2ae92b6cd","^5K",["^ ","^5L",null,"^5M",["^Y",[]],"^5N",["^1:","^19","^5R","^6G"]]],["^1V","goog/structs/pool.js"],["6025affb7181cd40418600864f58eed1ea80055d","^5K",["^ ","^5L",null,"^5M",["^Y",[]],"^5N",["^1:","^78","~$goog.structs.Queue","~$goog.structs.Set"]]],["^1V","goog/net/httpstatus.js"],["6025affb7181cd40418600864f58eed1ea80055d","^5K",["^ ","^5L",null,"^5M",["^Y",[]],"^5N",["^1:"]]],["^1V","goog/structs/heap.js"],["6025affb7181cd40418600864f58eed1ea80055d","^5K",["^ ","^5L",null,"^5M",["^Y",[]],"^5N",["^1:","^5X","^62","~$goog.structs.Node"]]],["^1V","goog/debug/entrypointregistry.js"],["6025affb7181cd40418600864f58eed1ea80055d","^5K",["^ ","^5L",null,"^5M",["^Y",[]],"^5N",["^1:","^5["]]],["^1V","goog/string/string.js"],["6025affb7181cd40418600864f58eed1ea80055d","^5K",["^ ","^5L",null,"^5M",["^Y",[]],"^5N",["^1:","^7P","^7G","^68","^63"]]],["^1V","goog/reflect/reflect.js"],["6025affb7181cd40418600864f58eed1ea80055d","^5K",["^ ","^5L",null,"^5M",["^Y",[]],"^5N",["^1:"]]],["^1V","goog/labs/useragent/util.js"],["6025affb7181cd40418600864f58eed1ea80055d","^5K",["^ ","^5L",null,"^5M",["^Y",[]],"^5N",["^1:","^63"]]],["^1V","goog/debug/debug.js"],["6025affb7181cd40418600864f58eed1ea80055d","^5K",["^ ","^5L",null,"^5M",["^Y",[]],"^5N",["^1:","^5X","~$goog.debug.errorcontext","^61"]]],["^1V","goog/string/stringbuffer.js"],["6025affb7181cd40418600864f58eed1ea80055d","^5K",["^ ","^5L",null,"^5M",["^Y",[]],"^5N",["^1:"]]],["^1V","goog/math/coordinate.js"],["6025affb7181cd40418600864f58eed1ea80055d","^5K",["^ ","^5L",null,"^5M",["^Y",[]],"^5N",["^1:","~$goog.math"]]],["^1V","goog/debug/errorcontext.js"],["6025affb7181cd40418600864f58eed1ea80055d","^5K",["^ ","^5L",null,"^5M",["^Y",[]],"^5N",["^1:"]]],["^1V","cljs/tools/reader/reader_types.cljs"],["d87b8bf9f6ce87b207d5ac625236d72923b7d71f","^5K",["^ ","^5L",null,"^5M",["^Y",[]],"^5N",["^1:","^19","^6W","^5R","^6G"]]],["^1V","goog/iter/iter.js"],["6025affb7181cd40418600864f58eed1ea80055d","^5K",["^ ","^5L",null,"^5M",["^Y",[]],"^5N",["^1:","^5X","^5[","^7C","^85"]]],["^1V","goog/async/nexttick.js"],["6025affb7181cd40418600864f58eed1ea80055d","^5K",["^ ","^5L",null,"^5M",["^Y",[]],"^5N",["^1:","^6Q","~$goog.dom","^7K","^7P","^7C","^7D","^65","^6:","^6;","^68"]]],["^1V","goog/html/uncheckedconversions.js"],["6025affb7181cd40418600864f58eed1ea80055d","^5K",["^ ","^5L",null,"^5M",["^Y",[]],"^5N",["^1:","^5[","^7D","^7E","^7F","^7M","^7A","^65","^68","^63"]]],["^1V","goog/debug/logger.js"],["6025affb7181cd40418600864f58eed1ea80055d","^5K",["^ ","^5L",null,"^5M",["^Y",[]],"^5N",["^1:","^5X","^5[","~$goog.debug","~$goog.debug.LogBuffer","^7U"]]],["^1V","goog/events/event.js"],["6025affb7181cd40418600864f58eed1ea80055d","^5K",["^ ","^5L",null,"^5M",["^Y",[]],"^5N",["^1:","^78","~$goog.events.EventId"]]],["^1V","cljs/tools/reader/impl/commons.cljs"],["d87b8bf9f6ce87b207d5ac625236d72923b7d71f","^5K",["^ ","^5L",null,"^5M",["^Y",[]],"^5N",["^1:","^19","^6U","^6V","^6W"]]],["^1V","goog/dom/htmlelement.js"],["6025affb7181cd40418600864f58eed1ea80055d","^5K",["^ ","^5L",null,"^5M",["^Y",[]],"^5N",["^1:"]]],["^1V","cljs/core.cljs"],["9f9729dbbf9b814c83dc189977b447d2ae92b6cd","^5K",["^ ","^5L",null,"^5M",["^Y",[]],"^5N",["^1:","~$goog.math.Long","~$goog.math.Integer","^5R","^62","^5X","~$goog.Uri","^6G"]]],["^1V","goog/html/safescript.js"],["6025affb7181cd40418600864f58eed1ea80055d","^5K",["^ ","^5L",null,"^5M",["^Y",[]],"^5N",["^1:","^5[","^7>","^68","^69"]]],["^1V","goog/log/log.js"],["6025affb7181cd40418600864f58eed1ea80055d","^5K",["^ ","^5L",null,"^5M",["^Y",[]],"^5N",["^1:","^87","~$goog.debug.LogManager","^7U","~$goog.debug.Logger"]]],["^1V","goog/html/safestylesheet.js"],["6025affb7181cd40418600864f58eed1ea80055d","^5K",["^ ","^5L",null,"^5M",["^Y",[]],"^5N",["^1:","^5X","^5[","^7F","^62","^68","^69","^63"]]],["^1V","goog/structs/collection.js"],["6025affb7181cd40418600864f58eed1ea80055d","^5K",["^ ","^5L",null,"^5M",["^Y",[]],"^5N",["^1:"]]],["^1V","goog/events/browserevent.js"],["6025affb7181cd40418600864f58eed1ea80055d","^5K",["^ ","^5L",null,"^5M",["^Y",[]],"^5N",["^1:","^87","^60","^79","~$goog.events.EventType","^6=","^61"]]],["^1V","goog/math/integer.js"],["6025affb7181cd40418600864f58eed1ea80055d","^5K",["^ ","^5L",null,"^5M",["^Y",[]],"^5N",["^1:","^6="]]],["^1V","goog/structs/node.js"],["6025affb7181cd40418600864f58eed1ea80055d","^5K",["^ ","^5L",null,"^5M",["^Y",[]],"^5N",["^1:"]]],["^1V","goog/dom/browserfeature.js"],["6025affb7181cd40418600864f58eed1ea80055d","^5K",["^ ","^5L",null,"^5M",["^Y",[]],"^5N",["^1:","^61"]]],["^1V","clojure/set.cljs"],["9f9729dbbf9b814c83dc189977b447d2ae92b6cd","^5K",["^ ","^5L",null,"^5M",["^Y",[]],"^5N",["^1:","^19"]]],["^1V","goog/uri/utils.js"],["6025affb7181cd40418600864f58eed1ea80055d","^5K",["^ ","^5L",null,"^5M",["^Y",[]],"^5N",["^1:","^5X","^5[","^5R"]]],["^1V","goog/string/const.js"],["6025affb7181cd40418600864f58eed1ea80055d","^5K",["^ ","^5L",null,"^5M",["^Y",[]],"^5N",["^1:","^5[","^69"]]],["^1V","taoensso/timbre.cljs"],["daf6b8826cb16aed7fb3e0dd7a5c5266d2a53854","^5K",["^ ","^5L",null,"^5M",["^Y",[]],"^5N",["^1:","^19","^1=","^P","~$taoensso.timbre.appenders.core"]]],["^1V","goog/json/json.js"],["6025affb7181cd40418600864f58eed1ea80055d","^5K",["^ ","^5L",null,"^5M",["^Y",[]],"^5N",["^1:"]]],["^1V","goog/events/listenable.js"],["6025affb7181cd40418600864f58eed1ea80055d","^5K",["^ ","^5L",null,"^5M",["^Y",[]],"^5N",["^1:","^89"]]],["^1V","goog/net/xmlhttpfactory.js"],["6025affb7181cd40418600864f58eed1ea80055d","^5K",["^ ","^5L",null,"^5M",["^Y",[]],"^5N",["^1:","^76"]]],["^1V","goog/net/xmlhttp.js"],["6025affb7181cd40418600864f58eed1ea80055d","^5K",["^ ","^5L",null,"^5M",["^Y",[]],"^5N",["^1:","^5[","~$goog.net.WrapperXmlHttpFactory","^77"]]],["^1V","goog/net/xhrlike.js"],["6025affb7181cd40418600864f58eed1ea80055d","^5K",["^ ","^5L",null,"^5M",["^Y",[]],"^5N",["^1:"]]]]],"~:clj-info",["^ ","jar:file:/home/diego/.m2/repository/org/clojure/tools.analyzer.jvm/1.1.0/tools.analyzer.jvm-1.1.0.jar!/clojure/tools/analyzer/jvm.clj",1599447154000,"jar:file:/home/diego/.m2/repository/org/clojure/tools.reader/1.3.3/tools.reader-1.3.3.jar!/clojure/tools/reader/edn.clj",1599447153000,"jar:file:/home/diego/.m2/repository/org/clojure/tools.analyzer/1.0.0/tools.analyzer-1.0.0.jar!/clojure/tools/analyzer/utils.clj",1587157009000,"jar:file:/home/diego/.m2/repository/org/clojure/clojurescript/1.10.773/clojurescript-1.10.773.jar!/cljs/analyzer.cljc",1593724535000,"jar:file:/home/diego/.m2/repository/org/clojure/clojure/1.10.1/clojure-1.10.1.jar!/clojure/core.clj",1571270009000,"jar:file:/home/diego/.m2/repository/org/clojure/clojure/1.10.1/clojure-1.10.1.jar!/clojure/java/io.clj",1571270009000,"jar:file:/home/diego/.m2/repository/com/taoensso/sente/1.13.1/sente-1.13.1.jar!/taoensso/sente/interfaces.cljc",1585527951000,"jar:file:/home/diego/.m2/repository/io/aviso/pretty/0.1.33/pretty-0.1.33.jar!/io/aviso/columns.clj",1569138845000,"jar:file:/home/diego/.m2/repository/org/clojure/data.json/1.0.0/data.json-1.0.0.jar!/clojure/data/json.clj",1585335870000,"jar:file:/home/diego/.m2/repository/org/clojure/tools.analyzer.jvm/1.1.0/tools.analyzer.jvm-1.1.0.jar!/clojure/tools/analyzer/jvm/utils.clj",1599447154000,"jar:file:/home/diego/.m2/repository/org/clojure/clojurescript/1.10.773/clojurescript-1.10.773.jar!/cljs/compiler.cljc",1593724535000,"jar:file:/home/diego/.m2/repository/io/aviso/pretty/0.1.33/pretty-0.1.33.jar!/io/aviso/exception.clj",1569138845000,"jar:file:/home/diego/.m2/repository/org/clojure/clojurescript/1.10.773/clojurescript-1.10.773.jar!/cljs/js_deps.cljc",1593724535000,"jar:file:/home/diego/.m2/repository/org/clojure/core.async/1.3.610/core.async-1.3.610.jar!/clojure/core/async/impl/concurrent.clj",1596173706000,"jar:file:/home/diego/.m2/repository/org/clojure/clojure/1.10.1/clojure-1.10.1.jar!/clojure/pprint.clj",1571270009000,"jar:file:/home/diego/.m2/repository/org/clojure/tools.reader/1.3.3/tools.reader-1.3.3.jar!/cljs/tools/reader/reader_types.clj",1599447153000,"jar:file:/home/diego/.m2/repository/org/clojure/clojurescript/1.10.773/clojurescript-1.10.773.jar!/cljs/core.cljc",1593724535000,"jar:file:/home/diego/.m2/repository/org/clojure/core.async/1.3.610/core.async-1.3.610.jar!/cljs/core/async/macros.clj",1596173706000,"jar:file:/home/diego/.m2/repository/org/clojure/core.async/1.3.610/core.async-1.3.610.jar!/clojure/core/async/impl/buffers.clj",1596173706000,"jar:file:/home/diego/.m2/repository/com/taoensso/truss/1.5.0/truss-1.5.0.jar!/taoensso/truss/impl.clj",1569138845000,"jar:file:/home/diego/.m2/repository/org/clojure/clojure/1.10.1/clojure-1.10.1.jar!/clojure/reflect.clj",1571270009000,"jar:file:/home/diego/.m2/repository/org/clojure/tools.analyzer/1.0.0/tools.analyzer-1.0.0.jar!/clojure/tools/analyzer/ast.clj",1587157009000,"jar:file:/home/diego/.m2/repository/org/clojure/clojurescript/1.10.773/clojurescript-1.10.773.jar!/cljs/env.cljc",1593724535000,"jar:file:/home/diego/.m2/repository/org/clojure/clojurescript/1.10.773/clojurescript-1.10.773.jar!/cljs/reader.clj",1593724535000,"jar:file:/home/diego/.m2/repository/org/clojure/clojurescript/1.10.773/clojurescript-1.10.773.jar!/cljs/source_map/base64.clj",1593724535000,"jar:file:/home/diego/.m2/repository/org/clojure/clojurescript/1.10.773/clojurescript-1.10.773.jar!/cljs/externs.clj",1593724535000,"jar:file:/home/diego/.m2/repository/org/clojure/core.async/1.3.610/core.async-1.3.610.jar!/clojure/core/async/impl/channels.clj",1596173706000,"jar:file:/home/diego/.m2/repository/org/clojure/core.async/1.3.610/core.async-1.3.610.jar!/clojure/core/async/impl/ioc_macros.clj",1596173706000,"jar:file:/home/diego/.m2/repository/org/clojure/core.async/1.3.610/core.async-1.3.610.jar!/clojure/core/async/impl/mutex.clj",1596173706000,"jar:file:/home/diego/.m2/repository/org/clojure/core.async/1.3.610/core.async-1.3.610.jar!/clojure/core/async.clj",1596173706000,"jar:file:/home/diego/.m2/repository/org/clojure/tools.analyzer/1.0.0/tools.analyzer-1.0.0.jar!/clojure/tools/analyzer/env.clj",1587157009000,"jar:file:/home/diego/.m2/repository/com/taoensso/encore/2.96.0/encore-2.96.0.jar!/taoensso/encore.clj",1585527952000,"jar:file:/home/diego/.m2/repository/org/clojure/clojure/1.10.1/clojure-1.10.1.jar!/clojure/walk.clj",1571270009000,"jar:file:/home/diego/.m2/repository/io/aviso/pretty/0.1.33/pretty-0.1.33.jar!/io/aviso/writer.clj",1569138845000,"jar:file:/home/diego/.m2/repository/org/clojure/core.async/1.3.610/core.async-1.3.610.jar!/cljs/core/async.clj",1596173706000,"jar:file:/home/diego/.m2/repository/com/taoensso/timbre/4.10.0/timbre-4.10.0.jar!/taoensso/timbre.clj",1569138845000,"jar:file:/home/diego/.m2/repository/org/clojure/clojurescript/1.10.773/clojurescript-1.10.773.jar!/cljs/tagged_literals.cljc",1593724535000,"jar:file:/home/diego/.m2/repository/org/clojure/core.async/1.3.610/core.async-1.3.610.jar!/cljs/core/async/impl/ioc_macros.clj",1596173706000,"jar:file:/home/diego/.m2/repository/org/clojure/clojure/1.10.1/clojure-1.10.1.jar!/clojure/string.clj",1571270009000,"jar:file:/home/diego/.m2/repository/com/taoensso/truss/1.5.0/truss-1.5.0.jar!/taoensso/truss.clj",1569138845000,"jar:file:/home/diego/.m2/repository/io/aviso/pretty/0.1.33/pretty-0.1.33.jar!/io/aviso/ansi.clj",1569138845000,"jar:file:/home/diego/.m2/repository/org/clojure/clojurescript/1.10.773/clojurescript-1.10.773.jar!/cljs/source_map/base64_vlq.clj",1593724535000,"jar:file:/home/diego/.m2/repository/org/clojure/clojure/1.10.1/clojure-1.10.1.jar!/clojure/set.clj",1571270009000,"jar:file:/home/diego/.m2/repository/com/taoensso/timbre/4.10.0/timbre-4.10.0.jar!/taoensso/timbre/appenders/core.clj",1569138845000,"jar:file:/home/diego/.m2/repository/org/clojure/clojurescript/1.10.773/clojurescript-1.10.773.jar!/cljs/util.cljc",1593724535000,"jar:file:/home/diego/.m2/repository/org/clojure/core.async/1.3.610/core.async-1.3.610.jar!/clojure/core/async/impl/timers.clj",1596173706000,"jar:file:/home/diego/.m2/repository/org/clojure/clojure/1.10.1/clojure-1.10.1.jar!/clojure/edn.clj",1571270009000,"jar:file:/home/diego/.m2/repository/org/clojure/clojure/1.10.1/clojure-1.10.1.jar!/clojure/instant.clj",1571270009000,"jar:file:/home/diego/.m2/repository/org/clojure/core.async/1.3.610/core.async-1.3.610.jar!/clojure/core/async/impl/exec/threadpool.clj",1596173706000,"jar:file:/home/diego/.m2/repository/org/clojure/tools.reader/1.3.3/tools.reader-1.3.3.jar!/clojure/tools/reader/impl/inspect.clj",1599447153000,"jar:file:/home/diego/.m2/repository/org/clojure/core.async/1.3.610/core.async-1.3.610.jar!/clojure/core/async/impl/protocols.clj",1596173706000,"jar:file:/home/diego/.m2/repository/org/clojure/clojurescript/1.10.773/clojurescript-1.10.773.jar!/cljs/source_map.clj",1593724535000,"jar:file:/home/diego/.m2/repository/org/clojure/tools.reader/1.3.3/tools.reader-1.3.3.jar!/clojure/tools/reader/impl/errors.clj",1599447153000,"jar:file:/home/diego/.m2/repository/org/clojure/tools.reader/1.3.3/tools.reader-1.3.3.jar!/clojure/tools/reader/default_data_readers.clj",1599447153000,"jar:file:/home/diego/.m2/repository/org/clojure/tools.analyzer/1.0.0/tools.analyzer-1.0.0.jar!/clojure/tools/analyzer.clj",1587157009000,"jar:file:/home/diego/.m2/repository/org/clojure/tools.reader/1.3.3/tools.reader-1.3.3.jar!/clojure/tools/reader/reader_types.clj",1599447153000,"jar:file:/home/diego/.m2/repository/com/taoensso/sente/1.13.1/sente-1.13.1.jar!/taoensso/sente.cljc",1585527951000,"jar:file:/home/diego/.m2/repository/org/clojure/tools.reader/1.3.3/tools.reader-1.3.3.jar!/clojure/tools/reader.clj",1599447153000,"jar:file:/home/diego/.m2/repository/org/clojure/core.async/1.3.610/core.async-1.3.610.jar!/clojure/core/async/impl/dispatch.clj",1596173706000],"~:analyzer",["^ ","^3",null,"^4",["^ "],"^5",["^ ","^6","Peter Taoussanis (@ptaoussanis)","^7","Channel sockets for Clojure/Script.\n\n      Protocol  | client>server | client>server ?+ ack/reply | server>user push\n    * WebSockets:       ✓              [1]                           ✓\n    * Ajax:            [2]              ✓                           [3]\n\n    [1] Emulate with cb-uuid wrapping\n    [2] Emulate with dummy-cb wrapping\n    [3] Emulate with long-polling\n\n  Abbreviations:\n    * chsk      - Channel socket (Sente's own pseudo \"socket\")\n    * server-ch - Underlying web server's async channel that implement\n                  Sente's server channel interface\n    * sch       - server-ch alias\n    * uid       - User-id. An application-level user identifier used for async\n                  push. May have semantic meaning (e.g. username, email address),\n                  may not (e.g. client/random id) - app's discretion.\n    * cb        - Callback\n    * tout      - Timeout\n    * ws        - WebSocket/s\n    * pstr      - Packed string. Arbitrary Clojure data serialized as a\n                  string (e.g. edn) for client<->server comms\n    * udt       - Unix timestamp (datetime long)\n\n  Special messages:\n    * Callback wrapping: [<clj> <?cb-uuid>] for [1], [2]\n    * Callback replies: :chsk/closed, :chsk/timeout, :chsk/error\n\n    * Client-side events:\n        [:chsk/handshake [<?uid> <?csrf-token> <?handshake-data> <first-handshake?>]]\n        [:chsk/state [<old-state-map> <new-state-map>]]\n        [:chsk/recv <ev-as-pushed-from-server>] ; Server>user push\n        [:chsk/ws-ping]\n\n    * Server-side events:\n        [:chsk/bad-package <packed-str>]\n        [:chsk/bad-event   <event>]\n        [:chsk/uidport-open  <uid>]\n        [:chsk/uidport-close <uid>]\n        [:chsk/ws-ping]\n\n  Channel socket state map:\n    :type               - e/o #{:auto :ws :ajax}\n    :open?              - Truthy iff chsk appears to be open (connected) now\n    :ever-opened?       - Truthy iff chsk handshake has ever completed successfully\n    :first-open?        - Truthy iff chsk just completed first successful handshake\n    :uid                - User id provided by server on handshake,    or nil\n    :csrf-token         - CSRF token provided by server on handshake, or nil\n    :handshake-data     - Arb user data provided by server on handshake\n    :last-ws-error      - ?{:udt _ :ev <WebSocket-on-error-event>}\n    :last-ws-close      - ?{:udt _ :ev <WebSocket-on-close-event>\n                            :clean? _ :code _ :reason _}\n    :last-close         - ?{:udt _ :reason _}, with reason e/o\n                            #{nil :requested-disconnect :requested-reconnect\n                             :downgrading-ws-to-ajax :unexpected}\n    :udt-next-reconnect - Approximate udt of next scheduled auto-reconnect attempt\n\n  Notable implementation details:\n    * core.async is used liberally where brute-force core.async allows for\n      significant implementation simplifications. We lean on core.async's\n      efficiency here.\n    * For WebSocket fallback we use long-polling rather than HTTP 1.1 streaming\n      (chunked transfer encoding). Http-kit _does_ support chunked transfer\n      encoding but a small minority of browsers &/or proxies do not. Instead of\n      implementing all 3 modes (WebSockets, streaming, long-polling) - it seemed\n      reasonable to focus on the two extremes (performance + compatibility).\n      In any case client support for WebSockets is growing rapidly so fallback\n      modes will become increasingly irrelevant while the extra simplicity will\n      continue to pay dividends.\n\n  General-use notes:\n    * Single HTTP req+session persists over entire chsk session but cannot\n      modify sessions! Use standard a/sync HTTP Ring req/resp for logins, etc.\n    * Easy to wrap standard HTTP Ring resps for transport over chsks. Prefer\n      this approach to modifying handlers (better portability).","^8","taoensso/sente.cljc","^9",1,"^:",5,"^;",1,"^<",19],"^=",["^ ","^>","^?","^@","^A","^B","^C","^D","^E","^F","^G"],"~:shadow/protocol-prefixes",["^Y",["taoensso$sente$IChSocket$"]],"^H",["^ ","^I","^J","^K","^L","^M","^N","^O","^P","^Q","^N","^R","^P","^S","^P","^T","^L","^U","^L","^V","^L","^W","^L"],"^X",["^Y",[]],"^Z",["^ "],"^[","^J","~:shadow/js-requires",["^Y",["websocket"]],"^12",null,"^13",["^ ","^14","^L","^15","^16","^17","^18","^19","^19","^1:","^1:","^16","^16","^18","^18","^1;","^P","^L","^L","^1<","^1=","^1=","^1=","^P","^P"],"^1>",["^Y",["^1?","^1@"]],"~:shadow/js-access-global",["^Y",["require","Error"]],"^1A",["^ ","^1B","^18","^1C","^18","^1D","^18","^1E","^18","^1F","^P","^1G","^P","^1H","^P","^1I","^P"],"~:defs",["^ ","~$chsk-state->closed",["^ ","~:protocol-inline",null,"^5",["^ ","^8","taoensso/sente.cljc","^9",824,"^:",11,"^;",824,"^<",29,"~:private",true,"~:arglists",["^1M",["~$quote",["^1M",[["~$state","~$reason"]]]]]],"^9Y",true,"^[","^2?","^8","taoensso/sente.cljc","^<",29,"~:method-params",["^1M",[["^:0","^:1"]]],"~:protocol-impl",null,"~:arglists-meta",["^1M",[null,null]],"^:",4,"~:variadic?",false,"^9",824,"~:ret-tag",["^Y",[null,"~$clj","~$any"]],"^;",824,"~:max-fixed-arity",2,"~:fn-var",true,"^9Z",["^1M",["^9[",["^1M",[["^:0","^:1"]]]]]],"~$assert-send-args",["^ ","^9X",null,"^5",["^ ","^8","taoensso/sente.cljc","^9",783,"^:",11,"^;",783,"^<",27,"^9Y",true,"^9Z",["^1M",["^9[",["^1M",[["~$x","~$?timeout-ms","~$?cb"]]]]]],"^9Y",true,"^[","^3X","^8","taoensso/sente.cljc","^<",27,"^:2",["^1M",[["~$x","^:<","^:="]]],"^:3",null,"^:4",["^1M",[null,null]],"^:",4,"^:5",false,"^9",783,"^:6","~$clj-nil","^;",783,"^:9",3,"^::",true,"^9Z",["^1M",["^9[",["^1M",[["~$x","^:<","^:="]]]]]],"~$map->ChAjaxSocket",["^ ","^9X",null,"^5",["^ ","^8","taoensso/sente.cljc","^<",27,"^:",15,"~:internal-ctor",true,"~:factory","~:map","^9",1134,"^;",1134,"^9Z",["^1M",["^9[",["^1M",[["~$G__43926"]]]]],"^7","Factory function for taoensso.sente/ChAjaxSocket, taking a map of keywords to field values."],"^[","^2A","^8","taoensso/sente.cljc","^<",27,"^:2",["^1M",[["^:C"]]],"^:3",null,"^:4",["^1M",[null,null]],"^:",4,"^:@",true,"^:5",false,"^:A","^:B","^9",1134,"^:6","^3@","^;",1134,"^:9",1,"^::",true,"^9Z",["^1M",["^9[",["^1M",[["^:C"]]]]],"^7","Factory function for taoensso.sente/ChAjaxSocket, taking a map of keywords to field values."],"~$sente-version",["^ ","^5",["^ ","^8","taoensso/sente.cljc","^9",107,"^:",6,"^;",107,"^<",19],"^[","^2D","^8","taoensso/sente.cljc","^<",19,"^:",1,"^9",107,"^;",107,"~:tag","~$cljs.core/IVector","^7","Useful for identifying client/server mismatch"],"~$->EdnPacker",["^ ","^9X",null,"^5",["^ ","~:protocols",["^Y",["~$taoensso.sente.interfaces/IPacker"]],"^8","taoensso/sente.cljc","^<",19,"^:",10,"^:A","~:positional","^9",233,"^;",233,"^9Z",["^1M",["^9[",["^1M",[[]]]]],"~:skip-protocol-flag",null,"^7","Positional factory function for taoensso.sente/EdnPacker."],"^:H",["^Y",["^:I"]],"^[","^2<","^8","taoensso/sente.cljc","^<",19,"^:2",["^1M",[[]]],"^:3",null,"^:4",["^1M",[null,null]],"^:",1,"^:5",false,"^:A","^:J","^9",233,"^:6","^4F","^;",233,"^:9",0,"^::",true,"^9Z",["^1M",["^9[",["^1M",[[]]]]],"^:K",null,"^7","Positional factory function for taoensso.sente/EdnPacker."],"~$as-event",["^ ","^9X",null,"^5",["^ ","^8","taoensso/sente.cljc","^9",143,"^:",7,"^;",143,"^<",15,"^9Z",["^1M",["^9[",["^1M",[["~$x"]]]]]],"^[","^2=","^8","taoensso/sente.cljc","^<",15,"^:2",["^1M",[["~$x"]]],"^:3",null,"^:4",["^1M",[null,null]],"^:",1,"^:5",false,"^9",143,"^:6",["^Y",[null,"^:F"]],"^;",143,"^:9",1,"^::",true,"^9Z",["^1M",["^9[",["^1M",[["~$x"]]]]]],"~$server-event-msg?",["^ ","^9X",null,"^5",["^ ","^8","taoensso/sente.cljc","^9",160,"^:",7,"^;",160,"^<",24,"^9Z",["^1M",["^9[",["^1M",[["~$x"]]]]]],"^[","^2G","^8","taoensso/sente.cljc","^<",24,"^:2",["^1M",[["~$x"]]],"^:3",null,"^:4",["^1M",[null,null]],"^:",1,"^:5",false,"^9",160,"^:6","~$boolean","^;",160,"^:9",1,"^::",true,"^9Z",["^1M",["^9[",["^1M",[["~$x"]]]]]],"~$send-buffered-server-evs>ws-clients!",["^ ","^9X",null,"^5",["^ ","^8","taoensso/sente.cljc","^9",683,"^:",8,"^;",683,"^<",44,"^9Y",true,"^9Z",["^1M",["^9[",["^1M",[["~$conns_","~$uid","~$buffered-evs-pstr","~$upd-conn!"]]]]],"^7","Actually pushes buffered events (as packed-str) to all uid's WebSocket conns."],"^9Y",true,"^[","^33","^8","taoensso/sente.cljc","^<",44,"^:2",["^1M",[["^:P","^:Q","^:R","^:S"]]],"^:3",null,"^:4",["^1M",[null,null]],"^:",1,"^:5",false,"^9",683,"^:6","^:>","^;",683,"^:9",4,"^::",true,"^9Z",["^1M",["^9[",["^1M",[["^:P","^:Q","^:R","^:S"]]]]],"^7","Actually pushes buffered events (as packed-str) to all uid's WebSocket conns."],"~$pack",["^ ","^9X",null,"^5",["^ ","^9Y",true,"^8","taoensso/sente.cljc","^<",12,"~:top-fn",["^ ","^:5",false,"~:fixed-arity",3,"^:9",3,"^:2",[["~$packer","^:7"],["^:W","^:7","~$?cb-uuid"]],"^9Z",["^1M",[["^:W","^:7"],["^:W","^:7","^:X"]]],"^:4",["^1M",[null,null]]],"^:",8,"^9",217,"^;",217,"^9Z",["^1M",["^9[",["^1M",[["^:W","^:7"],["^:W","^:7","^:X"]]]]],"^7","clj->prefixed-pstr"],"^9Y",true,"^[","^2>","^8","taoensso/sente.cljc","^<",12,"^:U",["^ ","^:5",false,"^:V",3,"^:9",3,"^:2",[["^:W","^:7"],["^:W","^:7","^:X"]],"^9Z",["^1M",[["^:W","^:7"],["^:W","^:7","^:X"]]],"^:4",["^1M",[null,null]]],"^:2",[["^:W","^:7"],["^:W","^:7","^:X"]],"^:3",null,"^:V",3,"^:4",["^1M",[null,null]],"^:",1,"^:5",false,"~:methods",[["^ ","^:V",2,"^:5",false,"^:E","~$string"],["^ ","^:V",3,"^:5",false,"^:E","^:Z"]],"^9",217,"^;",217,"^:9",3,"^::",true,"^9Z",["^1M",[["^:W","^:7"],["^:W","^:7","^:X"]]],"^7","clj->prefixed-pstr"],"~$chsk-send!",["^ ","^9X",null,"^5",["^ ","^8","taoensso/sente.cljc","^9",767,"^:",10,"^;",767,"^<",20,"^9Z",["^1M",["^9[",["^1M",[["~$chsk","~$ev"],["^;0","^;1","^:<","^:="],["^;0","^;1","~$opts"]]]]],"^7","Sends `[ev-id ev-?data :as event]`, returns true on apparent success.","^:U",["^ ","^:5",false,"^:V",4,"^:9",4,"^:2",[["^;0","^;1"],["^;0","^;1","^:<","^:="],["^;0","^;1","^;2"]],"^9Z",["^1M",[["^;0","^;1"],["^;0","^;1","^:<","^:="],["^;0","^;1","^;2"]]],"^:4",["^1M",[null,null,null]]]],"^[","^36","^8","taoensso/sente.cljc","^<",20,"^:U",["^ ","^:5",false,"^:V",4,"^:9",4,"^:2",[["^;0","^;1"],["^;0","^;1","^:<","^:="],["^;0","^;1","^;2"]],"^9Z",["^1M",[["^;0","^;1"],["^;0","^;1","^:<","^:="],["^;0","^;1","^;2"]]],"^:4",["^1M",[null,null,null]]],"^:2",[["^;0","^;1"],["^;0","^;1","^:<","^:="],["^;0","^;1","^;2"]],"^:3",null,"^:V",4,"^:4",["^1M",[null,null,null]],"^:",4,"^:5",false,"^:Y",[["^ ","^:V",2,"^:5",false,"^:E","^:8"],["^ ","^:V",4,"^:5",false,"^:E","^:8"],["^ ","^:V",3,"^:5",false,"^:E","^:8"]],"^9",767,"^;",767,"^:9",4,"^::",true,"^9Z",["^1M",[["^;0","^;1"],["^;0","^;1","^:<","^:="],["^;0","^;1","^;2"]]],"^7","Sends `[ev-id ev-?data :as event]`, returns true on apparent success."],"~$validate-event",["^ ","^9X",null,"^5",["^ ","^8","taoensso/sente.cljc","^9",121,"^:",7,"^;",121,"^<",21,"^9Z",["^1M",["^9[",["^1M",[["~$x"]]]]],"^7","Returns nil if given argument is a valid [ev-id ?ev-data] form. Otherwise\n  returns a map of validation errors like `{:wrong-type {:expected _ :actual _}}`."],"^[","^3;","^8","taoensso/sente.cljc","^<",21,"^:2",["^1M",[["~$x"]]],"^:3",null,"^:4",["^1M",[null,null]],"^:",1,"^:5",false,"^9",121,"^:6",["^Y",["~$cljs.core/IMap","^:>"]],"^;",121,"^:9",1,"^::",true,"^9Z",["^1M",["^9[",["^1M",[["~$x"]]]]],"^7","Returns nil if given argument is a valid [ev-id ?ev-data] form. Otherwise\n  returns a map of validation errors like `{:wrong-type {:expected _ :actual _}}`."],"~$event?",["^ ","^9X",null,"^5",["^ ","^8","taoensso/sente.cljc","^9",142,"^:",7,"^;",142,"^<",13,"^9Z",["^1M",["^9[",["^1M",[["~$x"]]]]],"^7","Valid [ev-id ?ev-data] form?"],"^[","^30","^8","taoensso/sente.cljc","^<",13,"^:2",["^1M",[["~$x"]]],"^:3",null,"^:4",["^1M",[null,null]],"^:",1,"^:5",false,"^9",142,"^:6","^:N","^;",142,"^:9",1,"^::",true,"^9Z",["^1M",["^9[",["^1M",[["~$x"]]]]],"^7","Valid [ev-id ?ev-data] form?"],"~$event-msg?",["^ ","^[","^4Y","^8","taoensso/sente.cljc","^9",1579,"^:",1,"^;",1579,"^<",16,"^5",["^ ","^8","taoensso/sente.cljc","^9",1579,"^:",6,"^;",1579,"^<",16]],"~$make-channel-socket!",["^ ","^[","^2Q","^8","taoensso/sente.cljc","^9",1581,"^:",1,"^;",1581,"^<",26,"^5",["^ ","^8","taoensso/sente.cljc","^9",1581,"^:",6,"^;",1581,"^<",26],"^7","Platform-specific alias for `make-channel-socket-server!` or\n  `make-channel-socket-client!`. Please see the appropriate aliased fn\n   docstring for details."],"~$make-channel-socket-server!",["^ ","^9X",null,"^5",["^ ","^8","taoensso/sente.cljc","^9",267,"^:",7,"^;",267,"^<",34,"^9Z",["^1M",["^9[",["^1M",[["~$web-server-ch-adapter","~$&",[["^ ","~:keys",["~$recv-buf-or-n","~$ws-kalive-ms","~$lp-timeout-ms","~$send-buf-ms-ajax","~$send-buf-ms-ws","~$user-id-fn","~$csrf-token-fn","~$handshake-data-fn","^:W"],"~:or",["^ ","^;<",["^1M",["~$enc/ms","~:secs",25]],"^;?",30,"^;=",["^1M",["^;D","^;E",20]],"^;A",["^1M",["~$fn",["~$ring-req"],["^1M",["~$or",["^1M",["~:anti-forgery-token","^;G"]],["^1M",["~$get-in","^;G",["~:session","~:csrf-token"]]],["^1M",["^;J","^;G",["^;K","~:ring.middleware.anti-forgery/anti-forgery-token"]]],["^1M",["^;J","^;G",["^;K","__anti-forgery-token"]]]]]]],"^:W","~:edn","^;>",100,"^;B",["^1M",["^;F",["^;G"],null]],"^;@",["^1M",["^;F",["^;G"],["^1M",["^;J","^;G",["^;K","~:uid"]]]]],"^;;",["^1M",["~$async/sliding-buffer",1000]]]]]]]]]],"^7","Takes a web server adapter[1] and returns a map with keys:\n    :ch-recv ; core.async channel to receive `event-msg`s (internal or from clients).\n    :send-fn ; (fn [user-id ev] for server>user push.\n    :ajax-post-fn                ; (fn [ring-req]) for Ring CSRF-POST + chsk URL.\n    :ajax-get-or-ws-handshake-fn ; (fn [ring-req]) for Ring GET + chsk URL.\n    :connected-uids ; Watchable, read-only (atom {:ws #{_} :ajax #{_} :any #{_}}).\n\n  Common options:\n    :user-id-fn        ; (fn [ring-req]) -> unique user-id for server>user push.\n    :csrf-token-fn     ; (fn [ring-req]) -> CSRF token for Ajax POSTs.\n    :handshake-data-fn ; (fn [ring-req]) -> arb user data to append to handshake evs.\n    :ws-kalive-ms      ; Ping to keep a WebSocket conn alive if no activity\n                       ; w/in given msecs. Should be different to client's :ws-kalive-ms.\n    :lp-timeout-ms     ; Timeout (repoll) long-polling Ajax conns after given msecs.\n    :send-buf-ms-ajax  ; [2]\n    :send-buf-ms-ws    ; [2]\n    :packer            ; :edn (default), or an IPacker implementation.\n\n  [1] e.g. `(taoensso.sente.server-adapters.http-kit/get-sch-adapter)` or\n           `(taoensso.sente.server-adapters.immutant/get-sch-adapter)`.\n      You must have the necessary web-server dependency in your project.clj and\n      the necessary entry in your namespace's `ns` form.\n\n  [2] Optimization to allow transparent batching of rapidly-triggered\n      server>user pushes. This is esp. important for Ajax clients which use a\n      (slow) reconnecting poller. Actual event dispatch may occur <= given ms\n      after send call (larger values => larger batch windows).","^:U",["^ ","^:5",true,"^:V",1,"^:9",1,"^:2",[["^1M",["^;9",[["^ ","^;:",["^;;","^;<","^;=","^;>","^;?","^;@","^;A","^;B","^:W"],"^;C",["^ ","^;<",["^1M",["^;D","^;E",25]],"^;?",30,"^;=",["^1M",["^;D","^;E",20]],"^;A",["^1M",["^;F",["^;G"],["^1M",["^;H",["^1M",["^;I","^;G"]],["^1M",["^;J","^;G",["^;K","^;L"]]],["^1M",["^;J","^;G",["^;K","^;M"]]],["^1M",["^;J","^;G",["^;K","__anti-forgery-token"]]]]]]],"^:W","^;N","^;>",100,"^;B",["^1M",["^;F",["^;G"],null]],"^;@",["^1M",["^;F",["^;G"],["^1M",["^;J","^;G",["^;K","^;O"]]]]],"^;;",["^1M",["^;P",1000]]]]]]]],"^9Z",["^1M",[["^;9","~$&",[["^ ","^;:",["^;;","^;<","^;=","^;>","^;?","^;@","^;A","^;B","^:W"],"^;C",["^ ","^;<",["^1M",["^;D","^;E",25]],"^;?",30,"^;=",["^1M",["^;D","^;E",20]],"^;A",["^1M",["^;F",["^;G"],["^1M",["^;H",["^1M",["^;I","^;G"]],["^1M",["^;J","^;G",["^;K","^;L"]]],["^1M",["^;J","^;G",["^;K","^;M"]]],["^1M",["^;J","^;G",["^;K","__anti-forgery-token"]]]]]]],"^:W","^;N","^;>",100,"^;B",["^1M",["^;F",["^;G"],null]],"^;@",["^1M",["^;F",["^;G"],["^1M",["^;J","^;G",["^;K","^;O"]]]]],"^;;",["^1M",["^;P",1000]]]]]]]],"^:4",["^1M",[null]]]],"^[","^3E","^8","taoensso/sente.cljc","^<",34,"^:U",["^ ","^:5",true,"^:V",1,"^:9",1,"^:2",[["^1M",["^;9",[["^ ","^;:",["^;;","^;<","^;=","^;>","^;?","^;@","^;A","^;B","^:W"],"^;C",["^ ","^;<",["^1M",["^;D","^;E",25]],"^;?",30,"^;=",["^1M",["^;D","^;E",20]],"^;A",["^1M",["^;F",["^;G"],["^1M",["^;H",["^1M",["^;I","^;G"]],["^1M",["^;J","^;G",["^;K","^;L"]]],["^1M",["^;J","^;G",["^;K","^;M"]]],["^1M",["^;J","^;G",["^;K","__anti-forgery-token"]]]]]]],"^:W","^;N","^;>",100,"^;B",["^1M",["^;F",["^;G"],null]],"^;@",["^1M",["^;F",["^;G"],["^1M",["^;J","^;G",["^;K","^;O"]]]]],"^;;",["^1M",["^;P",1000]]]]]]]],"^9Z",["^1M",[["^;9","~$&",[["^ ","^;:",["^;;","^;<","^;=","^;>","^;?","^;@","^;A","^;B","^:W"],"^;C",["^ ","^;<",["^1M",["^;D","^;E",25]],"^;?",30,"^;=",["^1M",["^;D","^;E",20]],"^;A",["^1M",["^;F",["^;G"],["^1M",["^;H",["^1M",["^;I","^;G"]],["^1M",["^;J","^;G",["^;K","^;L"]]],["^1M",["^;J","^;G",["^;K","^;M"]]],["^1M",["^;J","^;G",["^;K","__anti-forgery-token"]]]]]]],"^:W","^;N","^;>",100,"^;B",["^1M",["^;F",["^;G"],null]],"^;@",["^1M",["^;F",["^;G"],["^1M",["^;J","^;G",["^;K","^;O"]]]]],"^;;",["^1M",["^;P",1000]]]]]]]],"^:4",["^1M",[null]]],"^:2",[["^1M",["^;9",[["^ ","^;:",["^;;","^;<","^;=","^;>","^;?","^;@","^;A","^;B","^:W"],"^;C",["^ ","^;<",["^1M",["^;D","^;E",25]],"^;?",30,"^;=",["^1M",["^;D","^;E",20]],"^;A",["^1M",["^;F",["^;G"],["^1M",["^;H",["^1M",["^;I","^;G"]],["^1M",["^;J","^;G",["^;K","^;L"]]],["^1M",["^;J","^;G",["^;K","^;M"]]],["^1M",["^;J","^;G",["^;K","__anti-forgery-token"]]]]]]],"^:W","^;N","^;>",100,"^;B",["^1M",["^;F",["^;G"],null]],"^;@",["^1M",["^;F",["^;G"],["^1M",["^;J","^;G",["^;K","^;O"]]]]],"^;;",["^1M",["^;P",1000]]]]]]]],"^:3",null,"^:V",1,"^:4",["^1M",[null]],"^:",1,"^:5",true,"^:Y",[["^ ","^:V",1,"^:5",true,"^:E","^;4"]],"^9",267,"^:6","^:8","^;",267,"^:9",1,"^::",true,"^9Z",["^1M",[["^;9","~$&",[["^ ","^;:",["^;;","^;<","^;=","^;>","^;?","^;@","^;A","^;B","^:W"],"^;C",["^ ","^;<",["^1M",["^;D","^;E",25]],"^;?",30,"^;=",["^1M",["^;D","^;E",20]],"^;A",["^1M",["^;F",["^;G"],["^1M",["^;H",["^1M",["^;I","^;G"]],["^1M",["^;J","^;G",["^;K","^;L"]]],["^1M",["^;J","^;G",["^;K","^;M"]]],["^1M",["^;J","^;G",["^;K","__anti-forgery-token"]]]]]]],"^:W","^;N","^;>",100,"^;B",["^1M",["^;F",["^;G"],null]],"^;@",["^1M",["^;F",["^;G"],["^1M",["^;J","^;G",["^;K","^;O"]]]]],"^;;",["^1M",["^;P",1000]]]]]]]],"^7","Takes a web server adapter[1] and returns a map with keys:\n    :ch-recv ; core.async channel to receive `event-msg`s (internal or from clients).\n    :send-fn ; (fn [user-id ev] for server>user push.\n    :ajax-post-fn                ; (fn [ring-req]) for Ring CSRF-POST + chsk URL.\n    :ajax-get-or-ws-handshake-fn ; (fn [ring-req]) for Ring GET + chsk URL.\n    :connected-uids ; Watchable, read-only (atom {:ws #{_} :ajax #{_} :any #{_}}).\n\n  Common options:\n    :user-id-fn        ; (fn [ring-req]) -> unique user-id for server>user push.\n    :csrf-token-fn     ; (fn [ring-req]) -> CSRF token for Ajax POSTs.\n    :handshake-data-fn ; (fn [ring-req]) -> arb user data to append to handshake evs.\n    :ws-kalive-ms      ; Ping to keep a WebSocket conn alive if no activity\n                       ; w/in given msecs. Should be different to client's :ws-kalive-ms.\n    :lp-timeout-ms     ; Timeout (repoll) long-polling Ajax conns after given msecs.\n    :send-buf-ms-ajax  ; [2]\n    :send-buf-ms-ws    ; [2]\n    :packer            ; :edn (default), or an IPacker implementation.\n\n  [1] e.g. `(taoensso.sente.server-adapters.http-kit/get-sch-adapter)` or\n           `(taoensso.sente.server-adapters.immutant/get-sch-adapter)`.\n      You must have the necessary web-server dependency in your project.clj and\n      the necessary entry in your namespace's `ns` form.\n\n  [2] Optimization to allow transparent batching of rapidly-triggered\n      server>user pushes. This is esp. important for Ajax clients which use a\n      (slow) reconnecting poller. Actual event dispatch may occur <= given ms\n      after send call (larger values => larger batch windows)."],"~$node-target?",["^ ","^5",["^ ","^8","taoensso/sente.cljc","^9",110,"^:",25,"^;",110,"^<",37,"^9Y",true],"^9Y",true,"^[","^2M","^8","taoensso/sente.cljc","^<",37,"^:",10,"^9",110,"^;",110,"^:E","^:N"],"~$ajax-lite",["^ ","^[","^2O","^8","taoensso/sente.cljc","^9",750,"^:",10,"^;",750,"^<",24,"^5",["^ ","^8","taoensso/sente.cljc","^9",750,"^:",15,"^;",750,"^<",24],"^7","Alias of `taoensso.encore/ajax-lite`"],"~$get-chsk-url",["^ ","^9X",null,"^5",["^ ","^8","taoensso/sente.cljc","^9",1367,"^:",11,"^;",1367,"^<",23,"^9Y",true,"^9Z",["^1M",["^9[",["^1M",[["~$protocol","~$host","~$path","~$type"]]]]]],"^9Y",true,"^[","^28","^8","taoensso/sente.cljc","^<",23,"^:2",["^1M",[["^;T","^;U","^;V","^;W"]]],"^:3",null,"^:4",["^1M",[null,null]],"^:",4,"^:5",false,"^9",1367,"^:6","^:Z","^;",1367,"^:9",4,"^::",true,"^9Z",["^1M",["^9[",["^1M",[["^;T","^;U","^;V","^;W"]]]]]],"~$-chsk-send!",["^ ","^9X",null,"^5",["^ ","^8","taoensso/sente.cljc","^9",756,"^:",7,"^;",756,"^<",18,"~:protocol","^5=","^7",null,"^9Z",["^1M",["^9[",["^1M",[["^;0","^;1","^;2"]]]]]],"^;Y","^5=","^[","^26","^8","taoensso/sente.cljc","^<",18,"^:2",["^1M",[["^;0","^;1","^;2"]]],"^:3",null,"^:4",["^1M",[null,null]],"^:",4,"^:5",false,"^9",752,"^:6","^:8","^;",756,"^:9",3,"^::",true,"^9Z",["^1M",["^9[",["^1M",[["^;0","^;1","^;2"]]]]],"^7",null],"~$-chsk-reconnect!",["^ ","^9X",null,"^5",["^ ","^8","taoensso/sente.cljc","^9",755,"^:",7,"^;",755,"^<",23,"^;Y","^5=","^7",null,"^9Z",["^1M",["^9[",["^1M",[["^;0"]]]]]],"^;Y","^5=","^[","^3?","^8","taoensso/sente.cljc","^<",23,"^:2",["^1M",[["^;0"]]],"^:3",null,"^:4",["^1M",[null,null]],"^:",4,"^:5",false,"^9",752,"^:6","^:8","^;",755,"^:9",1,"^::",true,"^9Z",["^1M",["^9[",["^1M",[["^;0"]]]]],"^7",null],"~$receive-handshake!",["^ ","^9X",null,"^5",["^ ","^8","taoensso/sente.cljc","^9",872,"^:",11,"^;",872,"^<",29,"^9Y",true,"^9Z",["^1M",["^9[",["^1M",[["~$chsk-type","^;0","^:7"]]]]]],"^9Y",true,"^[","^2B","^8","taoensso/sente.cljc","^<",29,"^:2",["^1M",[["^<0","^;0","^:7"]]],"^:3",null,"^:4",["^1M",[null,null]],"^:",4,"^:5",false,"^9",872,"^:6","^2Z","^;",872,"^:9",3,"^::",true,"^9Z",["^1M",["^9[",["^1M",[["^<0","^;0","^:7"]]]]]],"~$start-client-chsk-router!",["^ ","^9X",null,"^5",["^ ","^8","taoensso/sente.cljc","^9",1563,"^:",7,"^;",1563,"^<",32,"^9Z",["^1M",["^9[",["^1M",[["~$ch-recv","~$event-msg-handler","~$&",[["^ ","^1O","^;2","^;:",["~$trace-evs?","~$error-handler"]]]]]]]],"^7","Creates a simple go-loop to call `(event-msg-handler <server-event-msg>)`\n  and log any errors. Returns a `(fn stop! [])`. Note that advanced users may\n  prefer to just write their own loop against `ch-recv`.\n\n  Nb performance note: since your `event-msg-handler` fn will be executed\n  within a simple go block, you'll want this fn to be ~non-blocking\n  (you'll especially want to avoid blocking IO) to avoid starving the\n  core.async thread pool under load. To avoid blocking, you can use futures,\n  agents, core.async, etc. as appropriate.","^:U",["^ ","^:5",true,"^:V",2,"^:9",2,"^:2",[["^1M",["^<2","^<3",[["^ ","^1O","^;2","^;:",["^<4","^<5"]]]]]],"^9Z",["^1M",[["^<2","^<3","~$&",[["^ ","^1O","^;2","^;:",["^<4","^<5"]]]]]],"^:4",["^1M",[null]]]],"^[","^55","^8","taoensso/sente.cljc","^<",32,"^:U",["^ ","^:5",true,"^:V",2,"^:9",2,"^:2",[["^1M",["^<2","^<3",[["^ ","^1O","^;2","^;:",["^<4","^<5"]]]]]],"^9Z",["^1M",[["^<2","^<3","~$&",[["^ ","^1O","^;2","^;:",["^<4","^<5"]]]]]],"^:4",["^1M",[null]]],"^:2",[["^1M",["^<2","^<3",[["^ ","^1O","^;2","^;:",["^<4","^<5"]]]]]],"^:3",null,"^:V",2,"^:4",["^1M",[null]],"^:",1,"^:5",true,"^:Y",[["^ ","^:V",2,"^:5",true,"^:E","~$function"]],"^9",1563,"^:6","^:8","^;",1563,"^:9",2,"^::",true,"^9Z",["^1M",[["^<2","^<3","~$&",[["^ ","^1O","^;2","^;:",["^<4","^<5"]]]]]],"^7","Creates a simple go-loop to call `(event-msg-handler <server-event-msg>)`\n  and log any errors. Returns a `(fn stop! [])`. Note that advanced users may\n  prefer to just write their own loop against `ch-recv`.\n\n  Nb performance note: since your `event-msg-handler` fn will be executed\n  within a simple go block, you'll want this fn to be ~non-blocking\n  (you'll especially want to avoid blocking IO) to avoid starving the\n  core.async thread pool under load. To avoid blocking, you can use futures,\n  agents, core.async, etc. as appropriate."],"~$chsk-destroy!",["^ ","^[","^2H","^8","taoensso/sente.cljc","^9",764,"^:",6,"^;",764,"^<",24,"^5",["^ ","^8","taoensso/sente.cljc","^9",764,"^:",11,"^;",764,"^<",24],"^7","Deprecated"],"~$->ChAjaxSocket",["^ ","^9X",null,"^5",["^ ","^8","taoensso/sente.cljc","^<",27,"^:",15,"^:@",true,"^:A","^:J","^9",1134,"^;",1134,"^9Z",["^1M",["^9[",["^1M",[["~$client-id","~$chs","~$params","^:W","~$url","~$state_","~$instance-handle_","~$ever-opened?_","~$backoff-ms-fn","~$ajax-opts","~$curr-xhr_"]]]]],"^7","Positional factory function for taoensso.sente/ChAjaxSocket."],"^[","^4V","^8","taoensso/sente.cljc","^<",27,"^:2",["^1M",[["^<9","^<:","^<;","^:W","^<<","^<=","^<>","^<?","^<@","^<A","^<B"]]],"^:3",null,"^:4",["^1M",[null,null]],"^:",4,"^:@",true,"^:5",false,"^:A","^:J","^9",1134,"^:6","^3@","^;",1134,"^:9",11,"^::",true,"^9Z",["^1M",["^9[",["^1M",[["^<9","^<:","^<;","^:W","^<<","^<=","^<>","^<?","^<@","^<A","^<B"]]]]],"^7","Positional factory function for taoensso.sente/ChAjaxSocket."],"~$send-buffered-server-evs>ajax-clients!",["^ ","^9X",null,"^5",["^ ","^8","taoensso/sente.cljc","^9",692,"^:",8,"^;",692,"^<",46,"^9Y",true,"^9Z",["^1M",["^9[",["^1M",[["^:P","^:Q","^:R"]]]]],"^7","Actually pushes buffered events (as packed-str) to all uid's Ajax conns.\n  Allows some time for possible Ajax poller reconnects."],"^9Y",true,"^[","^4N","^8","taoensso/sente.cljc","^<",46,"^:2",["^1M",[["^:P","^:Q","^:R"]]],"^:3",null,"^:4",["^1M",[null,null]],"^:",1,"^:5",false,"^9",692,"^:6",["^Y",["^:8","^:>"]],"^;",692,"^:9",3,"^::",true,"^9Z",["^1M",["^9[",["^1M",[["^:P","^:Q","^:R"]]]]],"^7","Actually pushes buffered events (as packed-str) to all uid's Ajax conns.\n  Allows some time for possible Ajax poller reconnects."],"~$default-client-side-ajax-timeout-ms",["^ ","^5",["^ ","^8","taoensso/sente.cljc","^9",1127,"^:",16,"^;",1127,"^<",51,"^9Y",true],"^9Y",true,"^[","^4O","^8","taoensso/sente.cljc","^<",51,"^:",1,"^9",1127,"^;",1127,"^:E","^:8","^7","We must set *some* client-side timeout otherwise an unpredictable (and\n  probably too short) browser default will be used. Must be > server's\n  :lp-timeout-ms."],"~$ChAjaxSocket",["^ ","~:num-fields",11,"^:H",["^Y",["~$cljs.core/IRecord","~$cljs.core/IKVReduce","~$cljs.core/IEquiv","~$cljs.core/IHash","~$cljs.core/ICollection","~$cljs.core/ICounted","~$cljs.core/ISeqable","~$cljs.core/IMeta","~$cljs.core/ICloneable","~$cljs.core/IPrintWithWriter","~$cljs.core/IIterable","~$cljs.core/IWithMeta","~$cljs.core/IAssociative","^5=","^;4","~$cljs.core/ILookup"]],"^[","^3@","^8","taoensso/sente.cljc","^<",27,"~:type",true,"^:",15,"^:@",true,"^9",1134,"~:record",true,"^;",1134,"^:E","^<6","^:K",["^Y",["^<G","^<H","^<I","^<J","^<K","^<L","^<M","^<N","^<O","^<P","^<Q","^<R","^<S","^;4","^<T"]]],"~$set-logging-level!",["^ ","^[","^4P","^8","taoensso/sente.cljc","^9",1614,"^:",3,"^;",1614,"^<",26,"^5",["^ ","^8","taoensso/sente.cljc","^9",1614,"^:",8,"^;",1614,"^<",26],"^7","DEPRECATED. Please use `timbre/set-level!` instead"],"~$->ChAutoSocket",["^ ","^9X",null,"^5",["^ ","^8","taoensso/sente.cljc","^<",27,"^:",15,"^:@",true,"^:A","^:J","^9",1300,"^;",1300,"^9Z",["^1M",["^9[",["^1M",[["~$ws-chsk-opts","~$ajax-chsk-opts","^<=","~$impl_"]]]]],"^7","Positional factory function for taoensso.sente/ChAutoSocket."],"^[","^4H","^8","taoensso/sente.cljc","^<",27,"^:2",["^1M",[["^<Y","^<Z","^<=","^<["]]],"^:3",null,"^:4",["^1M",[null,null]],"^:",4,"^:@",true,"^:5",false,"^:A","^:J","^9",1300,"^:6","^4G","^;",1300,"^:9",4,"^::",true,"^9Z",["^1M",["^9[",["^1M",[["^<Y","^<Z","^<=","^<["]]]]],"^7","Positional factory function for taoensso.sente/ChAutoSocket."],"~$-chsk-disconnect!",["^ ","^9X",null,"^5",["^ ","^8","taoensso/sente.cljc","^9",754,"^:",7,"^;",754,"^<",24,"^;Y","^5=","^7",null,"^9Z",["^1M",["^9[",["^1M",[["^;0","^:1"]]]]]],"^;Y","^5=","^[","^2[","^8","taoensso/sente.cljc","^<",24,"^:2",["^1M",[["^;0","^:1"]]],"^:3",null,"^:4",["^1M",[null,null]],"^:",4,"^:5",false,"^9",752,"^:6","^:8","^;",754,"^:9",2,"^::",true,"^9Z",["^1M",["^9[",["^1M",[["^;0","^:1"]]]]],"^7",null],"~$start-chsk-router!",["^ ","^[","^3S","^8","taoensso/sente.cljc","^9",1588,"^:",1,"^;",1588,"^<",24,"^5",["^ ","^8","taoensso/sente.cljc","^9",1588,"^:",6,"^;",1588,"^<",24],"^7","Platform-specific alias for `start-server-chsk-router!` or\n  `start-client-chsk-router!`. Please see the appropriate aliased fn\n  docstring for details."],"~$put-server-event-msg>ch-recv!",["^ ","^9X",null,"^5",["^ ","^8","taoensso/sente.cljc","^9",178,"^:",8,"^;",178,"^<",37,"^9Y",true,"^9Z",["^1M",["^9[",["^1M",[["^<2",["^ ","^1O","~$ev-msg","^;:",["~$event","~$?reply-fn"]]]]]]],"^7","All server `event-msg`s go through this"],"^9Y",true,"^[","^3D","^8","taoensso/sente.cljc","^<",37,"^:2",["^1M",[["^<2","~$p__43329"]]],"^:3",null,"^:4",["^1M",[null,null]],"^:",1,"^:5",false,"^9",178,"^:6",["^Y",["^:N","^:8","^:>"]],"^;",178,"^:9",2,"^::",true,"^9Z",["^1M",["^9[",["^1M",[["^<2",["^ ","^1O","^=3","^;:",["^=4","^=5"]]]]]]],"^7","All server `event-msg`s go through this"],"~$coerce-packer",["^ ","^9X",null,"^5",["^ ","^8","taoensso/sente.cljc","^9",240,"^:",8,"^;",240,"^<",21,"^9Y",true,"^9Z",["^1M",["^9[",["^1M",[["~$x"]]]]]],"^9Y",true,"^[","^41","^8","taoensso/sente.cljc","^<",21,"^:2",["^1M",[["~$x"]]],"^:3",null,"^:4",["^1M",[null,null]],"^:",1,"^:5",false,"^9",240,"^:6",["^Y",[null,"^:8","^4F","^:>"]],"^;",240,"^:9",1,"^::",true,"^9Z",["^1M",["^9[",["^1M",[["~$x"]]]]]],"~$-chsk-connect!",["^ ","^9X",null,"^5",["^ ","^8","taoensso/sente.cljc","^9",753,"^:",7,"^;",753,"^<",21,"^;Y","^5=","^7",null,"^9Z",["^1M",["^9[",["^1M",[["^;0"]]]]]],"^;Y","^5=","^[","^3A","^8","taoensso/sente.cljc","^<",21,"^:2",["^1M",[["^;0"]]],"^:3",null,"^:4",["^1M",[null,null]],"^:",4,"^:5",false,"^9",752,"^:6","^:8","^;",753,"^:9",1,"^::",true,"^9Z",["^1M",["^9[",["^1M",[["^;0"]]]]],"^7",null],"~$default-edn-packer",["^ ","^5",["^ ","^8","taoensso/sente.cljc","^9",238,"^:",16,"^;",238,"^<",34,"^9Y",true],"^9Y",true,"^[","^3T","^8","taoensso/sente.cljc","^<",34,"^:",1,"^9",238,"^;",238,"^:E","^4F"],"~$new-ChAjaxSocket",["^ ","^9X",null,"^5",["^ ","^8","taoensso/sente.cljc","^9",1290,"^:",11,"^;",1290,"^<",27,"^9Y",true,"^9Z",["^1M",["^9[",["^1M",[["^;2"]]]]]],"^9Y",true,"^[","^4?","^8","taoensso/sente.cljc","^<",27,"^:2",["^1M",[["^;2"]]],"^:3",null,"^:4",["^1M",[null,null]],"^:",4,"^:5",false,"^9",1290,"^:6","^3@","^;",1290,"^:9",1,"^::",true,"^9Z",["^1M",["^9[",["^1M",[["^;2"]]]]]],"~$receive-buffered-evs!",["^ ","^9X",null,"^5",["^ ","^8","taoensso/sente.cljc","^9",857,"^:",11,"^;",857,"^<",32,"^9Y",true,"^9Z",["^1M",["^9[",["^1M",[["^<:","^:7"]]]]]],"^9Y",true,"^[","^47","^8","taoensso/sente.cljc","^<",32,"^:2",["^1M",[["^<:","^:7"]]],"^:3",null,"^:4",["^1M",[null,null]],"^:",4,"^:5",false,"^9",857,"^:6","^:>","^;",857,"^:9",2,"^::",true,"^9Z",["^1M",["^9[",["^1M",[["^<:","^:7"]]]]]],"~$chsk-connect!",["^ ","^9X",null,"^5",["^ ","^8","taoensso/sente.cljc","^9",760,"^:",12,"^;",760,"^<",25,"^9Z",["^1M",["^9[",["^1M",[["^;0"]]]]]],"^[","^3H","^8","taoensso/sente.cljc","^<",25,"^:2",["^1M",[["^;0"]]],"^:3",null,"^:4",["^1M",[null,null]],"^:",6,"^:5",false,"^9",760,"^:6","^:8","^;",760,"^:9",1,"^::",true,"^9Z",["^1M",["^9[",["^1M",[["^;0"]]]]]],"~$-start-chsk-router!",["^ ","^9X",null,"^5",["^ ","^8","taoensso/sente.cljc","^9",1507,"^:",8,"^;",1507,"^<",27,"^9Y",true,"^9Z",["^1M",["^9[",["^1M",[["~$server?","^<2","^<3","^;2"]]]]]],"^9Y",true,"^[","^4=","^8","taoensso/sente.cljc","^<",27,"^:2",["^1M",[["^=>","^<2","^<3","^;2"]]],"^:3",null,"^:4",["^1M",[null,null]],"^:",1,"^:5",false,"^9",1507,"^:6","^<6","^;",1507,"^:9",4,"^::",true,"^9Z",["^1M",["^9[",["^1M",[["^=>","^<2","^<3","^;2"]]]]]],"~$EdnPacker",["^ ","^<F",0,"^:H",["^Y",["^:I"]],"^[","^4F","^8","taoensso/sente.cljc","^<",19,"^<U",true,"^:",10,"^9",233,"^<V",false,"^;",233,"^:E","^<6","^:K",null],"~$ChAutoSocket",["^ ","^<F",4,"^:H",["^Y",["^<G","^<H","^<I","^<J","^<K","^<L","^<M","^<N","^<O","^<P","^<Q","^<R","^<S","^5=","^;4","^<T"]],"^[","^4G","^8","taoensso/sente.cljc","^<",27,"^<U",true,"^:",15,"^:@",true,"^9",1300,"^<V",true,"^;",1300,"^:E","^<6","^:K",["^Y",["^<G","^<H","^<I","^<J","^<K","^<L","^<M","^<N","^<O","^<P","^<Q","^<R","^<S","^;4","^<T"]]],"~$cb-error?",["^ ","^9X",null,"^5",["^ ","^8","taoensso/sente.cljc","^9",191,"^:",16,"^;",191,"^<",25,"^9Z",["^1M",["^9[",["^1M",[["~$cb-reply-clj"]]]]]],"^[","^4B","^8","taoensso/sente.cljc","^<",25,"^:2",["^1M",[["^=B"]]],"^:3",null,"^:4",["^1M",[null,null]],"^:",10,"^:5",false,"^9",191,"^:6","^:8","^;",191,"^:9",1,"^::",true,"^9Z",["^1M",["^9[",["^1M",[["^=B"]]]]]],"~$unpack",["^ ","^9X",null,"^5",["^ ","^8","taoensso/sente.cljc","^9",199,"^:",8,"^;",199,"^<",14,"^9Y",true,"^9Z",["^1M",["^9[",["^1M",[["^:W","~$prefixed-pstr"]]]]],"^7","prefixed-pstr->[clj ?cb-uuid]"],"^9Y",true,"^[","^48","^8","taoensso/sente.cljc","^<",14,"^:2",["^1M",[["^:W","^=D"]]],"^:3",null,"^:4",["^1M",[null,null]],"^:",1,"^:5",false,"^9",199,"^:6","^:F","^;",199,"^:9",2,"^::",true,"^9Z",["^1M",["^9[",["^1M",[["^:W","^=D"]]]]],"^7","prefixed-pstr->[clj ?cb-uuid]"],"~$chsk-disconnect!",["^ ","^9X",null,"^5",["^ ","^8","taoensso/sente.cljc","^9",761,"^:",12,"^;",761,"^<",28,"^9Z",["^1M",["^9[",["^1M",[["^;0"]]]]]],"^[","^5?","^8","taoensso/sente.cljc","^<",28,"^:2",["^1M",[["^;0"]]],"^:3",null,"^:4",["^1M",[null,null]],"^:",6,"^:5",false,"^9",761,"^:6","^:8","^;",761,"^:9",1,"^::",true,"^9Z",["^1M",["^9[",["^1M",[["^;0"]]]]]],"~$default-chsk-url-fn",["^ ","^9X",null,"^5",["^ ","^8","taoensso/sente.cljc","^9",1618,"^:",11,"^;",1618,"^<",30],"^[","^4A","^8","taoensso/sente.cljc","^<",30,"^:2",["^1M",[["^;V","~$p__44096","~$websocket?"]]],"^:3",null,"^:4",["^1M",[]],"^:",6,"^:5",false,"^9",1618,"^:6","^:Z","^;",1618,"^:9",3,"^::",true,"^9Z",null,"^7","DEPRECATED"],"~$start-chsk-router-loop!",["^ ","^9X",null,"^5",["^ ","^8","taoensso/sente.cljc","^9",1607,"^:",12,"^;",1607,"^<",35,"^9Z",["^1M",["^9[",["^1M",[["~$event-handler","^<2"]]]]],"^7","DEPRECATED: Please use `start-chsk-router!` instead"],"^[","^4C","^8","taoensso/sente.cljc","^<",35,"^:2",["^1M",[["^=J","^<2"]]],"^:3",null,"^:4",["^1M",[null,null]],"^:",6,"^:5",false,"^9",1607,"^:6","^<6","^;",1607,"^:9",2,"^::",true,"^9Z",["^1M",["^9[",["^1M",[["^=J","^<2"]]]]],"^7","DEPRECATED: Please use `start-chsk-router!` instead"],"~$chsk-send->closed!",["^ ","^9X",null,"^5",["^ ","^8","taoensso/sente.cljc","^9",777,"^:",11,"^;",777,"^<",29,"^9Y",true,"^9Z",["^1M",["^9[",["^1M",[["~$?cb-fn"]]]]]],"^9Y",true,"^[","^4E","^8","taoensso/sente.cljc","^<",29,"^:2",["^1M",[["^=L"]]],"^:3",null,"^:4",["^1M",[null,null]],"^:",4,"^:5",false,"^9",777,"^:6","^:N","^;",777,"^:9",1,"^::",true,"^9Z",["^1M",["^9[",["^1M",[["^=L"]]]]]],"~$new-ChAutoSocket",["^ ","^9X",null,"^5",["^ ","^8","taoensso/sente.cljc","^9",1359,"^:",11,"^;",1359,"^<",27,"^9Y",true,"^9Z",["^1M",["^9[",["^1M",[["^;2"]]]]]],"^9Y",true,"^[","^58","^8","taoensso/sente.cljc","^<",27,"^:2",["^1M",[["^;2"]]],"^:3",null,"^:4",["^1M",[null,null]],"^:",4,"^:5",false,"^9",1359,"^:6","^4G","^;",1359,"^:9",1,"^::",true,"^9Z",["^1M",["^9[",["^1M",[["^;2"]]]]]],"~$swap-chsk-state!",["^ ","^9X",null,"^5",["^ ","^8","taoensso/sente.cljc","^9",798,"^:",11,"^;",798,"^<",27,"^9Y",true,"^9Z",["^1M",["^9[",["^1M",[["^;0","~$f"]]]]],"^7","Atomically swaps the value of chk's :state_ atom."],"^9Y",true,"^[","^4U","^8","taoensso/sente.cljc","^<",27,"^:2",["^1M",[["^;0","~$f"]]],"^:3",null,"^:4",["^1M",[null,null]],"^:",4,"^:5",false,"^9",798,"^:6",["^Y",["^:F","^:>"]],"^;",798,"^:9",2,"^::",true,"^9Z",["^1M",["^9[",["^1M",[["^;0","~$f"]]]]],"^7","Atomically swaps the value of chk's :state_ atom."],"~$handshake?",["^ ","^9X",null,"^5",["^ ","^8","taoensso/sente.cljc","^9",867,"^:",11,"^;",867,"^<",21,"^9Y",true,"^9Z",["^1M",["^9[",["^1M",[["~$x"]]]]]],"^9Y",true,"^[","^45","^8","taoensso/sente.cljc","^<",21,"^:2",["^1M",[["~$x"]]],"^:3",null,"^:4",["^1M",[null,null]],"^:",4,"^:5",false,"^9",867,"^:6","^:N","^;",867,"^:9",1,"^::",true,"^9Z",["^1M",["^9[",["^1M",[["~$x"]]]]]],"~$ajax-call",["^ ","^[","^3Y","^8","taoensso/sente.cljc","^9",1616,"^:",12,"^;",1616,"^<",26,"^5",["^ ","^8","taoensso/sente.cljc","^9",1616,"^:",17,"^;",1616,"^<",26],"^7","DEPRECATED: Please use `ajax-lite` instead"],"~$new-ChWebSocket",["^ ","^9X",null,"^5",["^ ","^8","taoensso/sente.cljc","^9",1115,"^:",11,"^;",1115,"^<",26,"^9Y",true,"^9Z",["^1M",["^9[",["^1M",[["^;2"]]]]]],"^9Y",true,"^[","^50","^8","taoensso/sente.cljc","^<",26,"^:2",["^1M",[["^;2"]]],"^:3",null,"^:4",["^1M",[null,null]],"^:",4,"^:5",false,"^9",1115,"^:6","^31","^;",1115,"^:9",1,"^::",true,"^9Z",["^1M",["^9[",["^1M",[["^;2"]]]]]],"~$ChWebSocket",["^ ","^<F",14,"^:H",["^Y",["^<G","^<H","^<I","^<J","^<K","^<L","^<M","^<N","^<O","^<P","^<Q","^<R","^<S","^5=","^;4","^<T"]],"^[","^31","^8","taoensso/sente.cljc","^<",26,"^<U",true,"^:",15,"^:@",true,"^9",930,"^<V",true,"^;",930,"^:E","^<6","^:K",["^Y",["^<G","^<H","^<I","^<J","^<K","^<L","^<M","^<N","^<O","^<P","^<Q","^<R","^<S","^;4","^<T"]]],"~$pull-unused-cb-fn!",["^ ","^9X",null,"^5",["^ ","^8","taoensso/sente.cljc","^9",792,"^:",11,"^;",792,"^<",29,"^9Y",true,"^9Z",["^1M",["^9[",["^1M",[["~$cbs-waiting_","^:X"]]]]]],"^9Y",true,"^[","^3B","^8","taoensso/sente.cljc","^<",29,"^:2",["^1M",[["^=T","^:X"]]],"^:3",null,"^:4",["^1M",[null,null]],"^:",4,"^:5",false,"^9",792,"^:6",["^Y",["^:8","^:>"]],"^;",792,"^:9",2,"^::",true,"^9Z",["^1M",["^9[",["^1M",[["^=T","^:X"]]]]]],"~$assert-event",["^ ","^9X",null,"^5",["^ ","^8","taoensso/sente.cljc","^9",135,"^:",7,"^;",135,"^<",19,"^9Z",["^1M",["^9[",["^1M",[["~$x"]]]]],"^7","Returns given argument if it is a valid [ev-id ?ev-data] form. Otherwise\n  throws a validation exception."],"^[","^3F","^8","taoensso/sente.cljc","^<",19,"^:2",["^1M",[["~$x"]]],"^:3",null,"^:4",["^1M",[null,null]],"^:",1,"^:5",false,"^9",135,"^:6","^:>","^;",135,"^:9",1,"^::",true,"^9Z",["^1M",["^9[",["^1M",[["~$x"]]]]],"^7","Returns given argument if it is a valid [ev-id ?ev-data] form. Otherwise\n  throws a validation exception."],"~$chsk-reconnect!",["^ ","^9X",null,"^5",["^ ","^8","taoensso/sente.cljc","^9",762,"^:",12,"^;",762,"^<",27,"^9Z",["^1M",["^9[",["^1M",[["^;0"]]]]],"^7","Useful for reauthenticating after login/logout, etc."],"^[","^52","^8","taoensso/sente.cljc","^<",27,"^:2",["^1M",[["^;0"]]],"^:3",null,"^:4",["^1M",[null,null]],"^:",6,"^:5",false,"^9",762,"^:6","^:8","^;",762,"^:9",1,"^::",true,"^9Z",["^1M",["^9[",["^1M",[["^;0"]]]]],"^7","Useful for reauthenticating after login/logout, etc."],"~$make-channel-socket-client!",["^ ","^9X",null,"^5",["^ ","^8","taoensso/sente.cljc","^9",1376,"^:",10,"^;",1376,"^<",37,"^9Z",["^1M",["^9[",["^1M",[["^;V","~$&",[["^ ","^;:",["^;W","^;T","^;U","^<;","^;;","^:W","^;<","^<9","^<A","~$wrap-recv-evs?","^<@"],"^1O","^;2","^;C",["^ ","^;W","~:auto","^;;",["^1M",["^;P",2048]],"^:W","^;N","^<9",["^1M",["^;H",["^1M",["~:client-uuid","^;2"]],["^1M",["~$enc/uuid-str"]]]],"^=X",true,"^<@","~$enc/exp-backoff","^;<",["^1M",["^;D","^;E",20]]]],"~$_deprecated-more-opts"]]]]]],"^7","Returns nil on failure, or a map with keys:\n       :ch-recv ; core.async channel to receive `event-msg`s (internal or from\n                ; clients). May `put!` (inject) arbitrary `event`s to this channel.\n       :send-fn ; (fn [event & [?timeout-ms ?cb-fn]]) for client>server send.\n       :state   ; Watchable, read-only (atom {:type _ :open? _ :uid _ :csrf-token _}).\n       :chsk    ; IChSocket implementer. You can usu. ignore this.\n\n     Common options:\n       :type           ; e/o #{:auto :ws :ajax}. You'll usually want the default (:auto).\n       :protocol       ; Server protocol, e/o #{:http :https}.\n       :host           ; Server host (defaults to current page's host).\n       :params         ; Map of any params to incl. in chsk Ring requests (handy\n                       ; for application-level auth, etc.).\n       :packer         ; :edn (default), or an IPacker implementation.\n       :ajax-opts      ; Base opts map provided to `taoensso.encore/ajax-lite`.\n       :wrap-recv-evs? ; Should events from server be wrapped in [:chsk/recv _]?\n       :ws-kalive-ms   ; Ping to keep a WebSocket conn alive if no activity\n                       ; w/in given msecs. Should be different to server's :ws-kalive-ms.","^:U",["^ ","^:5",true,"^:V",1,"^:9",1,"^:2",[["^1M",["^;V",[["^ ","^;:",["^;W","^;T","^;U","^<;","^;;","^:W","^;<","^<9","^<A","^=X","^<@"],"^1O","^;2","^;C",["^ ","^;W","^=Y","^;;",["^1M",["^;P",2048]],"^:W","^;N","^<9",["^1M",["^;H",["^1M",["^=Z","^;2"]],["^1M",["^=["]]]],"^=X",true,"^<@","^>0","^;<",["^1M",["^;D","^;E",20]]]],"^>1"]]]],"^9Z",["^1M",[["^;V","~$&",[["^ ","^;:",["^;W","^;T","^;U","^<;","^;;","^:W","^;<","^<9","^<A","^=X","^<@"],"^1O","^;2","^;C",["^ ","^;W","^=Y","^;;",["^1M",["^;P",2048]],"^:W","^;N","^<9",["^1M",["^;H",["^1M",["^=Z","^;2"]],["^1M",["^=["]]]],"^=X",true,"^<@","^>0","^;<",["^1M",["^;D","^;E",20]]]],"^>1"]]]],"^:4",["^1M",[null]]]],"^[","^59","^8","taoensso/sente.cljc","^<",37,"^:U",["^ ","^:5",true,"^:V",1,"^:9",1,"^:2",[["^1M",["^;V",[["^ ","^;:",["^;W","^;T","^;U","^<;","^;;","^:W","^;<","^<9","^<A","^=X","^<@"],"^1O","^;2","^;C",["^ ","^;W","^=Y","^;;",["^1M",["^;P",2048]],"^:W","^;N","^<9",["^1M",["^;H",["^1M",["^=Z","^;2"]],["^1M",["^=["]]]],"^=X",true,"^<@","^>0","^;<",["^1M",["^;D","^;E",20]]]],"^>1"]]]],"^9Z",["^1M",[["^;V","~$&",[["^ ","^;:",["^;W","^;T","^;U","^<;","^;;","^:W","^;<","^<9","^<A","^=X","^<@"],"^1O","^;2","^;C",["^ ","^;W","^=Y","^;;",["^1M",["^;P",2048]],"^:W","^;N","^<9",["^1M",["^;H",["^1M",["^=Z","^;2"]],["^1M",["^=["]]]],"^=X",true,"^<@","^>0","^;<",["^1M",["^;D","^;E",20]]]],"^>1"]]]],"^:4",["^1M",[null]]],"^:2",[["^1M",["^;V",[["^ ","^;:",["^;W","^;T","^;U","^<;","^;;","^:W","^;<","^<9","^<A","^=X","^<@"],"^1O","^;2","^;C",["^ ","^;W","^=Y","^;;",["^1M",["^;P",2048]],"^:W","^;N","^<9",["^1M",["^;H",["^1M",["^=Z","^;2"]],["^1M",["^=["]]]],"^=X",true,"^<@","^>0","^;<",["^1M",["^;D","^;E",20]]]],"^>1"]]]],"^:3",null,"^:V",1,"^:4",["^1M",[null]],"^:",4,"^:5",true,"^:Y",[["^ ","^:V",1,"^:5",true,"^:E",["^Y",["^;4","^:>"]]]],"^9",1376,"^:6","^:8","^;",1376,"^:9",1,"^::",true,"^9Z",["^1M",[["^;V","~$&",[["^ ","^;:",["^;W","^;T","^;U","^<;","^;;","^:W","^;<","^<9","^<A","^=X","^<@"],"^1O","^;2","^;C",["^ ","^;W","^=Y","^;;",["^1M",["^;P",2048]],"^:W","^;N","^<9",["^1M",["^;H",["^1M",["^=Z","^;2"]],["^1M",["^=["]]]],"^=X",true,"^<@","^>0","^;<",["^1M",["^;D","^;E",20]]]],"^>1"]]]],"^7","Returns nil on failure, or a map with keys:\n       :ch-recv ; core.async channel to receive `event-msg`s (internal or from\n                ; clients). May `put!` (inject) arbitrary `event`s to this channel.\n       :send-fn ; (fn [event & [?timeout-ms ?cb-fn]]) for client>server send.\n       :state   ; Watchable, read-only (atom {:type _ :open? _ :uid _ :csrf-token _}).\n       :chsk    ; IChSocket implementer. You can usu. ignore this.\n\n     Common options:\n       :type           ; e/o #{:auto :ws :ajax}. You'll usually want the default (:auto).\n       :protocol       ; Server protocol, e/o #{:http :https}.\n       :host           ; Server host (defaults to current page's host).\n       :params         ; Map of any params to incl. in chsk Ring requests (handy\n                       ; for application-level auth, etc.).\n       :packer         ; :edn (default), or an IPacker implementation.\n       :ajax-opts      ; Base opts map provided to `taoensso.encore/ajax-lite`.\n       :wrap-recv-evs? ; Should events from server be wrapped in [:chsk/recv _]?\n       :ws-kalive-ms   ; Ping to keep a WebSocket conn alive if no activity\n                       ; w/in given msecs. Should be different to server's :ws-kalive-ms."],"~$cb-chan-as-fn",["^ ","^9X",null,"^5",["^ ","^8","taoensso/sente.cljc","^9",839,"^:",11,"^;",839,"^<",24,"^9Y",true,"^9Z",["^1M",["^9[",["^1M",[["^:=","^;1"]]]]],"^7","Experimental, undocumented. Allows a core.async channel to be provided\n     instead of a cb-fn. The channel will receive values of form\n     [<event-id>.cb <reply>]."],"^9Y",true,"^[","^5F","^8","taoensso/sente.cljc","^<",24,"^:2",["^1M",[["^:=","^;1"]]],"^:3",null,"^:4",["^1M",[null,null]],"^:",4,"^:5",false,"^9",839,"^:6",["^Y",[null,"^<6"]],"^;",839,"^:9",2,"^::",true,"^9Z",["^1M",["^9[",["^1M",[["^:=","^;1"]]]]],"^7","Experimental, undocumented. Allows a core.async channel to be provided\n     instead of a cb-fn. The channel will receive values of form\n     [<event-id>.cb <reply>]."],"~$map->ChAutoSocket",["^ ","^9X",null,"^5",["^ ","^8","taoensso/sente.cljc","^<",27,"^:",15,"^:@",true,"^:A","^:B","^9",1300,"^;",1300,"^9Z",["^1M",["^9[",["^1M",[["~$G__43960"]]]]],"^7","Factory function for taoensso.sente/ChAutoSocket, taking a map of keywords to field values."],"^[","^5;","^8","taoensso/sente.cljc","^<",27,"^:2",["^1M",[["^>4"]]],"^:3",null,"^:4",["^1M",[null,null]],"^:",4,"^:@",true,"^:5",false,"^:A","^:B","^9",1300,"^:6","^4G","^;",1300,"^:9",1,"^::",true,"^9Z",["^1M",["^9[",["^1M",[["^>4"]]]]],"^7","Factory function for taoensso.sente/ChAutoSocket, taking a map of keywords to field values."],"~$IChSocket",["^ ","^5",["^ ","~:protocol-symbol",true,"^8","taoensso/sente.cljc","^<",26,"^:",17,"^9",752,"~:protocol-info",["^ ","^:Y",["^ ","^=8",[["^;0"]],"^=0",[["^;0","^:1"]],"^;Z",[["^;0"]],"^;X",[["^;0","^;1","^;2"]]]],"^;",752,"~:sigs",["^ ","~:-chsk-connect!",["^ ","^[","^=8","^9Z",["^1M",[["^;0"]]],"^7",null],"~:-chsk-disconnect!",["^ ","^[","^=0","^9Z",["^1M",[["^;0","^:1"]]],"^7",null],"~:-chsk-reconnect!",["^ ","^[","^;Z","^9Z",["^1M",[["^;0"]]],"^7",null],"~:-chsk-send!",["^ ","^[","^;X","^9Z",["^1M",[["^;0","^;1","^;2"]]],"^7",null]],"~:jsdoc",["^1M",["@interface"]]],"^>6",true,"^[","^5=","^8","taoensso/sente.cljc","^<",26,"^:",4,"^9",752,"^>7",["^ ","^:Y",["^ ","^=8",[["^;0"]],"^=0",[["^;0","^:1"]],"^;Z",[["^;0"]],"^;X",[["^;0","^;1","^;2"]]]],"~:info",null,"^;",752,"^:E","^:8","^>8",["^ ","^>9",["^ ","^[","^=8","^9Z",["^1M",[["^;0"]]],"^7",null],"^>:",["^ ","^[","^=0","^9Z",["^1M",[["^;0","^:1"]]],"^7",null],"^>;",["^ ","^[","^;Z","^9Z",["^1M",[["^;0"]]],"^7",null],"^><",["^ ","^[","^;X","^9Z",["^1M",[["^;0","^;1","^;2"]]],"^7",null]],"~:impls",["^Y",["^31","^3@","^4G"]],"^>=",["^1M",["@interface"]]],"~$debug-mode?_",["^ ","^[","^5<","^8","taoensso/sente.cljc","^9",113,"^:",1,"^;",113,"^<",22,"^5",["^ ","^8","taoensso/sente.cljc","^9",113,"^:",10,"^;",113,"^<",22],"^:E","~$cljs.core/Atom"],"~$cb-success?",["^ ","^9X",null,"^5",["^ ","^8","taoensso/sente.cljc","^9",192,"^:",16,"^;",192,"^<",27,"^9Z",["^1M",["^9[",["^1M",[["^=B"]]]]]],"^[","^5A","^8","taoensso/sente.cljc","^<",27,"^:2",["^1M",[["^=B"]]],"^:3",null,"^:4",["^1M",[null,null]],"^:",10,"^:5",false,"^9",192,"^:6","^:N","^;",192,"^:9",1,"^::",true,"^9Z",["^1M",["^9[",["^1M",[["^=B"]]]]]],"~$->ChWebSocket",["^ ","^9X",null,"^5",["^ ","^8","taoensso/sente.cljc","^<",26,"^:",15,"^:@",true,"^:A","^:J","^9",930,"^;",930,"^9Z",["^1M",["^9[",["^1M",[["^<9","^<:","^<;","^:W","^<<","^;<","^<=","^<>","~$retry-count_","^<?","^<@","^=T","~$socket_","~$udt-last-comms_"]]]]],"^7","Positional factory function for taoensso.sente/ChWebSocket."],"^[","^5B","^8","taoensso/sente.cljc","^<",26,"^:2",["^1M",[["^<9","^<:","^<;","^:W","^<<","^;<","^<=","^<>","^>D","^<?","^<@","^=T","^>E","^>F"]]],"^:3",null,"^:4",["^1M",[null,null]],"^:",4,"^:@",true,"^:5",false,"^:A","^:J","^9",930,"^:6","^31","^;",930,"^:9",14,"^::",true,"^9Z",["^1M",["^9[",["^1M",[["^<9","^<:","^<;","^:W","^<<","^;<","^<=","^<>","^>D","^<?","^<@","^=T","^>E","^>F"]]]]],"^7","Positional factory function for taoensso.sente/ChWebSocket."],"~$expected",["^ ","^9X",null,"^5",["^ ","^8","taoensso/sente.cljc","^9",120,"^:",8,"^;",120,"^<",16,"^9Y",true,"^9Z",["^1M",["^9[",["^1M",[["^>G","~$x"]]]]]],"^9Y",true,"^[","^43","^8","taoensso/sente.cljc","^<",16,"^:2",["^1M",[["^>G","~$x"]]],"^:3",null,"^:4",["^1M",[null,null]],"^:",1,"^:5",false,"^9",120,"^:6","^;4","^;",120,"^:9",2,"^::",true,"^9Z",["^1M",["^9[",["^1M",[["^>G","~$x"]]]]]],"~$?node-npm-websocket_",["^ ","^5",["^ ","^8","taoensso/sente.cljc","^9",911,"^:",19,"^;",911,"^<",39,"^9Y",true],"^9Y",true,"^[","^5G","^8","taoensso/sente.cljc","^<",39,"^:",4,"^9",911,"^;",911,"^:E","^37","^7","nnil iff the websocket npm library[1] is available.\n     Easiest way to install:\n       1. Add the lein-npm[2] plugin to your `project.clj`,\n       2. Add: `:npm {:dependencies [[websocket \"1.0.23\"]]}`\n\n     [1] Ref. https://www.npmjs.com/package/websocket\n     [2] Ref. https://github.com/RyanMcG/lein-npm"],"~$start-server-chsk-router!",["^ ","^9X",null,"^5",["^ ","^8","taoensso/sente.cljc","^9",1546,"^:",7,"^;",1546,"^<",32,"^9Z",["^1M",["^9[",["^1M",[["^<2","^<3","~$&",[["^ ","^1O","^;2","^;:",["^<4","^<5","~$simple-auto-threading?"]]]]]]]],"^7","Creates a simple go-loop to call `(event-msg-handler <server-event-msg>)`\n  and log any errors. Returns a `(fn stop! [])`. Note that advanced users may\n  prefer to just write their own loop against `ch-recv`.\n\n  Nb performance note: since your `event-msg-handler` fn will be executed\n  within a simple go block, you'll want this fn to be ~non-blocking\n  (you'll especially want to avoid blocking IO) to avoid starving the\n  core.async thread pool under load. To avoid blocking, you can use futures,\n  agents, core.async, etc. as appropriate.\n\n  Or for simple automatic future-based threading of every request, enable\n  the `:simple-auto-threading?` opt (disabled by default).","^:U",["^ ","^:5",true,"^:V",2,"^:9",2,"^:2",[["^1M",["^<2","^<3",[["^ ","^1O","^;2","^;:",["^<4","^<5","^>J"]]]]]],"^9Z",["^1M",[["^<2","^<3","~$&",[["^ ","^1O","^;2","^;:",["^<4","^<5","^>J"]]]]]],"^:4",["^1M",[null]]]],"^[","^46","^8","taoensso/sente.cljc","^<",32,"^:U",["^ ","^:5",true,"^:V",2,"^:9",2,"^:2",[["^1M",["^<2","^<3",[["^ ","^1O","^;2","^;:",["^<4","^<5","^>J"]]]]]],"^9Z",["^1M",[["^<2","^<3","~$&",[["^ ","^1O","^;2","^;:",["^<4","^<5","^>J"]]]]]],"^:4",["^1M",[null]]],"^:2",[["^1M",["^<2","^<3",[["^ ","^1O","^;2","^;:",["^<4","^<5","^>J"]]]]]],"^:3",null,"^:V",2,"^:4",["^1M",[null]],"^:",1,"^:5",true,"^:Y",[["^ ","^:V",2,"^:5",true,"^:E","^<6"]],"^9",1546,"^:6","^:8","^;",1546,"^:9",2,"^::",true,"^9Z",["^1M",[["^<2","^<3","~$&",[["^ ","^1O","^;2","^;:",["^<4","^<5","^>J"]]]]]],"^7","Creates a simple go-loop to call `(event-msg-handler <server-event-msg>)`\n  and log any errors. Returns a `(fn stop! [])`. Note that advanced users may\n  prefer to just write their own loop against `ch-recv`.\n\n  Nb performance note: since your `event-msg-handler` fn will be executed\n  within a simple go block, you'll want this fn to be ~non-blocking\n  (you'll especially want to avoid blocking IO) to avoid starving the\n  core.async thread pool under load. To avoid blocking, you can use futures,\n  agents, core.async, etc. as appropriate.\n\n  Or for simple automatic future-based threading of every request, enable\n  the `:simple-auto-threading?` opt (disabled by default)."],"~$client-event-msg?",["^ ","^9X",null,"^5",["^ ","^8","taoensso/sente.cljc","^9",149,"^:",7,"^;",149,"^<",24,"^9Z",["^1M",["^9[",["^1M",[["~$x"]]]]]],"^[","^54","^8","taoensso/sente.cljc","^<",24,"^:2",["^1M",[["~$x"]]],"^:3",null,"^:4",["^1M",[null,null]],"^:",1,"^:5",false,"^9",149,"^:6","^:N","^;",149,"^:9",1,"^::",true,"^9Z",["^1M",["^9[",["^1M",[["~$x"]]]]]],"~$map->ChWebSocket",["^ ","^9X",null,"^5",["^ ","^8","taoensso/sente.cljc","^<",26,"^:",15,"^:@",true,"^:A","^:B","^9",930,"^;",930,"^9Z",["^1M",["^9[",["^1M",[["~$G__43826"]]]]],"^7","Factory function for taoensso.sente/ChWebSocket, taking a map of keywords to field values."],"^[","^5@","^8","taoensso/sente.cljc","^<",26,"^:2",["^1M",[["^>M"]]],"^:3",null,"^:4",["^1M",[null,null]],"^:",4,"^:@",true,"^:5",false,"^:A","^:B","^9",930,"^:6","^31","^;",930,"^:9",1,"^::",true,"^9Z",["^1M",["^9[",["^1M",[["^>M"]]]]],"^7","Factory function for taoensso.sente/ChWebSocket, taking a map of keywords to field values."],"~$next-idx!",["^ ","^5",["^ ","^8","taoensso/sente.cljc","^9",260,"^:",16,"^;",260,"^<",25,"^9Y",true],"^9Y",true,"^[","^4<","^8","taoensso/sente.cljc","^<",25,"^:",1,"^9",260,"^;",260,"^:E","^<6"]],"^1@",["^ ","^N","^N","^14","^L","^17","^18","^19","^19","^18","^18","^J","^J","^1;","^P","^L","^L","^1J","^N","^P","^P","^1K","^J"],"~:cljs.analyzer/constants",["^ ","^1>",["^Y",["~:curr-xhr_","~:chsk/closed","~:?reply-fn","~:ws-kalive-ms","~:ajax-post-fn","~:ever-opened?_","~:requested-disconnect","~:on-msg","~:flush?","~:cb","~:errors","~:send-buf-ms-ws","~:first-open?","~:taoensso.sente/nil-uid","~:default-client-side-ajax-timeout-ms","~:given","^<A","^=T","~:ws","~:impl_","~:get","~:lp-timeout-ms","~:websocket","~:chsk/recv","^=Z","~:handshake","~:ch-recv","~:client-id","~:ev","^<=","~:X-CSRF-Token","^<Z","~:csrf-token-fn","~:?content","~:noop","~:else","~:on-close","~:sente/all-users-without-uid","^;Y","~:wrong-id-type","~:newly-connected","~:connected-uids","^;<","^<B","~:method","~:simple-auto-threading?","~:pathname","~:ws-chsk-opts","^<?","^;O","~:trace-evs?","~:packer","~:chs","~:warn","~:server","~:chsk/ws-ping","~:trace","~:udt-last-comms_","~:value","~:last-ws-error","~:chsk/uidport-open","~:?sch","~:swap/dissoc","^<[","^<9","^;E","~:handshake?","~:params","~:udt-next-reconnect","~:chsk/close","~:recur","^<U","~:chsk/state","~:unnamespaced-id","~:debug","~:debug/timeout","~:state","~:ajax","~:send-buf-ms-ajax","~:retry-count_","~:chsk/bad-event","~:vector","^<Y","~:udt","^:W","^<:","~:chsk/bad-package","~:ajax-get-or-ws-handshake-fn","~:headers","~:internal","^>F","~:error-handler","~:downgrading-ws-to-ajax","~:handshake-data","~:chsk/auto-ajax-downgrade","~:chsk/error","~:handshake-data-fn","~:reason","~:host","^<;","~:event","~:backoff-ms-fn","~:wrong-type","~:user-id-fn","~:recv-buf-or-n","~:keyword","~:socket_","^>D","~:ever-opened?","~:ppstr","~:id","~:open?","~:expected","^;N","~:chsk/uidport-close","~:chsk-url-fn","~:url","~:code","~:lp-timeout","~:ring-req","~:chsk/timeout","~:http","~:handled","~:wrap-recv-evs?","~:?data","~:post","~:instance-handle_","~:chsk","^;L","~:f","~:error","~:unexpected","~:send-fn","~:wrong-length","^;I","~:on-error","~:timeout","~:resp-type","^<@","~:last-close","~:requested-reconnect","~:ajax-opts","~:cbs-waiting_","~:actual","~:init?","^>E","^;M","~:last-ws-close","^=Y","~:on-open","^<<","~:timeout-ms","~:chsk/handshake","^<>","~:apparent-success","~:?error","~:newly-disconnected","~:state_","~:ajax-cb","~:any","~:chsk/dummy-cb-200","~:<server","^;K","~:ajax-chsk-opts","~:text","~:clean?","~:namespaced-keyword"]],"~:order",["^@T","^AB","^<U","^?T","^@K","^@;","^A:","^?B","^?E","^@N","^@3","^AS","^?3","^>Z","^@:","^?;","^@6","^@I","^@R","^A3","^A9","^>R","^?<","^?G","^;O","^@Z","^?O","~:f~:ns-specs",["^ "],"~:ns-spec-vars",["^Y",[]],"~:compiler-options",["^5J",[["^AW","~:static-fns"],true,["^AW","~:shadow-tweaks"],null,["^AW","~:source-map-inline"],null,["^AW","~:elide-asserts"],false,["^AW","~:optimize-constants"],null,["^AW","^1Y"],null,["^AW","~:external-config"],null,["^AW","~:tooling-config"],null,["^AW","~:emit-constants"],null,["^AW","~:load-tests"],null,["^AW","~:form-size-threshold"],null,["^AW","~:data-readers"],null,["^AW","~:infer-externs"],"^=Y",["^AW","^1["],null,["~:js-options","~:js-provider"],"~:shadow",["~:mode"],"~:dev",["^AW","~:fn-invoke-direct"],null,["^AW","~:source-map"],"/dev/null"]]]